// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// An Issuer represents a certificate issuing authority which can be
// referenced as part of `issuerRef` fields.
// It is scoped to a single namespace and can therefore only be referenced by
// resources within the same namespace.
type IssuerType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// Desired state of the Issuer resource.
	Spec IssuerSpec `pulumi:"spec"`
	// Status of the Issuer. This is set and managed automatically.
	Status *IssuerStatus `pulumi:"status"`
}

type IssuerMetadata struct {
}

// Desired state of the Issuer resource.
type IssuerSpec struct {
	// ACME configures this issuer to communicate with a RFC8555 (ACME) server
	// to obtain signed x509 certificates.
	Acme *IssuerSpecAcme `pulumi:"acme"`
	// CA configures this issuer to sign certificates using a signing CA keypair
	// stored in a Secret resource.
	// This is used to build internal PKIs that are managed by cert-manager.
	Ca *IssuerSpecCa `pulumi:"ca"`
	// SelfSigned configures this issuer to 'self sign' certificates using the
	// private key used to create the CertificateRequest object.
	SelfSigned *IssuerSpecSelfSigned `pulumi:"selfSigned"`
	// Vault configures this issuer to sign certificates using a HashiCorp Vault
	// PKI backend.
	Vault *IssuerSpecVault `pulumi:"vault"`
	// Venafi configures this issuer to sign certificates using a Venafi TPP
	// or Venafi Cloud policy zone.
	Venafi *IssuerSpecVenafi `pulumi:"venafi"`
}

// IssuerSpecInput is an input type that accepts IssuerSpecArgs and IssuerSpecOutput values.
// You can construct a concrete instance of `IssuerSpecInput` via:
//
//	IssuerSpecArgs{...}
type IssuerSpecInput interface {
	pulumi.Input

	ToIssuerSpecOutput() IssuerSpecOutput
	ToIssuerSpecOutputWithContext(context.Context) IssuerSpecOutput
}

// Desired state of the Issuer resource.
type IssuerSpecArgs struct {
	// ACME configures this issuer to communicate with a RFC8555 (ACME) server
	// to obtain signed x509 certificates.
	Acme IssuerSpecAcmePtrInput `pulumi:"acme"`
	// CA configures this issuer to sign certificates using a signing CA keypair
	// stored in a Secret resource.
	// This is used to build internal PKIs that are managed by cert-manager.
	Ca IssuerSpecCaPtrInput `pulumi:"ca"`
	// SelfSigned configures this issuer to 'self sign' certificates using the
	// private key used to create the CertificateRequest object.
	SelfSigned IssuerSpecSelfSignedPtrInput `pulumi:"selfSigned"`
	// Vault configures this issuer to sign certificates using a HashiCorp Vault
	// PKI backend.
	Vault IssuerSpecVaultPtrInput `pulumi:"vault"`
	// Venafi configures this issuer to sign certificates using a Venafi TPP
	// or Venafi Cloud policy zone.
	Venafi IssuerSpecVenafiPtrInput `pulumi:"venafi"`
}

func (IssuerSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpec)(nil)).Elem()
}

func (i IssuerSpecArgs) ToIssuerSpecOutput() IssuerSpecOutput {
	return i.ToIssuerSpecOutputWithContext(context.Background())
}

func (i IssuerSpecArgs) ToIssuerSpecOutputWithContext(ctx context.Context) IssuerSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecOutput)
}

func (i IssuerSpecArgs) ToIssuerSpecPtrOutput() IssuerSpecPtrOutput {
	return i.ToIssuerSpecPtrOutputWithContext(context.Background())
}

func (i IssuerSpecArgs) ToIssuerSpecPtrOutputWithContext(ctx context.Context) IssuerSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecOutput).ToIssuerSpecPtrOutputWithContext(ctx)
}

// IssuerSpecPtrInput is an input type that accepts IssuerSpecArgs, IssuerSpecPtr and IssuerSpecPtrOutput values.
// You can construct a concrete instance of `IssuerSpecPtrInput` via:
//
//	        IssuerSpecArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecPtrInput interface {
	pulumi.Input

	ToIssuerSpecPtrOutput() IssuerSpecPtrOutput
	ToIssuerSpecPtrOutputWithContext(context.Context) IssuerSpecPtrOutput
}

type issuerSpecPtrType IssuerSpecArgs

func IssuerSpecPtr(v *IssuerSpecArgs) IssuerSpecPtrInput {
	return (*issuerSpecPtrType)(v)
}

func (*issuerSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpec)(nil)).Elem()
}

func (i *issuerSpecPtrType) ToIssuerSpecPtrOutput() IssuerSpecPtrOutput {
	return i.ToIssuerSpecPtrOutputWithContext(context.Background())
}

func (i *issuerSpecPtrType) ToIssuerSpecPtrOutputWithContext(ctx context.Context) IssuerSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecPtrOutput)
}

// Desired state of the Issuer resource.
type IssuerSpecOutput struct{ *pulumi.OutputState }

func (IssuerSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpec)(nil)).Elem()
}

func (o IssuerSpecOutput) ToIssuerSpecOutput() IssuerSpecOutput {
	return o
}

func (o IssuerSpecOutput) ToIssuerSpecOutputWithContext(ctx context.Context) IssuerSpecOutput {
	return o
}

func (o IssuerSpecOutput) ToIssuerSpecPtrOutput() IssuerSpecPtrOutput {
	return o.ToIssuerSpecPtrOutputWithContext(context.Background())
}

func (o IssuerSpecOutput) ToIssuerSpecPtrOutputWithContext(ctx context.Context) IssuerSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpec) *IssuerSpec {
		return &v
	}).(IssuerSpecPtrOutput)
}

// ACME configures this issuer to communicate with a RFC8555 (ACME) server
// to obtain signed x509 certificates.
func (o IssuerSpecOutput) Acme() IssuerSpecAcmePtrOutput {
	return o.ApplyT(func(v IssuerSpec) *IssuerSpecAcme { return v.Acme }).(IssuerSpecAcmePtrOutput)
}

// CA configures this issuer to sign certificates using a signing CA keypair
// stored in a Secret resource.
// This is used to build internal PKIs that are managed by cert-manager.
func (o IssuerSpecOutput) Ca() IssuerSpecCaPtrOutput {
	return o.ApplyT(func(v IssuerSpec) *IssuerSpecCa { return v.Ca }).(IssuerSpecCaPtrOutput)
}

// SelfSigned configures this issuer to 'self sign' certificates using the
// private key used to create the CertificateRequest object.
func (o IssuerSpecOutput) SelfSigned() IssuerSpecSelfSignedPtrOutput {
	return o.ApplyT(func(v IssuerSpec) *IssuerSpecSelfSigned { return v.SelfSigned }).(IssuerSpecSelfSignedPtrOutput)
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault
// PKI backend.
func (o IssuerSpecOutput) Vault() IssuerSpecVaultPtrOutput {
	return o.ApplyT(func(v IssuerSpec) *IssuerSpecVault { return v.Vault }).(IssuerSpecVaultPtrOutput)
}

// Venafi configures this issuer to sign certificates using a Venafi TPP
// or Venafi Cloud policy zone.
func (o IssuerSpecOutput) Venafi() IssuerSpecVenafiPtrOutput {
	return o.ApplyT(func(v IssuerSpec) *IssuerSpecVenafi { return v.Venafi }).(IssuerSpecVenafiPtrOutput)
}

type IssuerSpecPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpec)(nil)).Elem()
}

func (o IssuerSpecPtrOutput) ToIssuerSpecPtrOutput() IssuerSpecPtrOutput {
	return o
}

func (o IssuerSpecPtrOutput) ToIssuerSpecPtrOutputWithContext(ctx context.Context) IssuerSpecPtrOutput {
	return o
}

func (o IssuerSpecPtrOutput) Elem() IssuerSpecOutput {
	return o.ApplyT(func(v *IssuerSpec) IssuerSpec {
		if v != nil {
			return *v
		}
		var ret IssuerSpec
		return ret
	}).(IssuerSpecOutput)
}

// ACME configures this issuer to communicate with a RFC8555 (ACME) server
// to obtain signed x509 certificates.
func (o IssuerSpecPtrOutput) Acme() IssuerSpecAcmePtrOutput {
	return o.ApplyT(func(v *IssuerSpec) *IssuerSpecAcme {
		if v == nil {
			return nil
		}
		return v.Acme
	}).(IssuerSpecAcmePtrOutput)
}

// CA configures this issuer to sign certificates using a signing CA keypair
// stored in a Secret resource.
// This is used to build internal PKIs that are managed by cert-manager.
func (o IssuerSpecPtrOutput) Ca() IssuerSpecCaPtrOutput {
	return o.ApplyT(func(v *IssuerSpec) *IssuerSpecCa {
		if v == nil {
			return nil
		}
		return v.Ca
	}).(IssuerSpecCaPtrOutput)
}

// SelfSigned configures this issuer to 'self sign' certificates using the
// private key used to create the CertificateRequest object.
func (o IssuerSpecPtrOutput) SelfSigned() IssuerSpecSelfSignedPtrOutput {
	return o.ApplyT(func(v *IssuerSpec) *IssuerSpecSelfSigned {
		if v == nil {
			return nil
		}
		return v.SelfSigned
	}).(IssuerSpecSelfSignedPtrOutput)
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault
// PKI backend.
func (o IssuerSpecPtrOutput) Vault() IssuerSpecVaultPtrOutput {
	return o.ApplyT(func(v *IssuerSpec) *IssuerSpecVault {
		if v == nil {
			return nil
		}
		return v.Vault
	}).(IssuerSpecVaultPtrOutput)
}

// Venafi configures this issuer to sign certificates using a Venafi TPP
// or Venafi Cloud policy zone.
func (o IssuerSpecPtrOutput) Venafi() IssuerSpecVenafiPtrOutput {
	return o.ApplyT(func(v *IssuerSpec) *IssuerSpecVenafi {
		if v == nil {
			return nil
		}
		return v.Venafi
	}).(IssuerSpecVenafiPtrOutput)
}

// ACME configures this issuer to communicate with a RFC8555 (ACME) server
// to obtain signed x509 certificates.
type IssuerSpecAcme struct {
	// Base64-encoded bundle of PEM CAs which can be used to validate the certificate
	// chain presented by the ACME server.
	// Mutually exclusive with SkipTLSVerify; prefer using CABundle to prevent various
	// kinds of security vulnerabilities.
	// If CABundle and SkipTLSVerify are unset, the system certificate bundle inside
	// the container is used to validate the TLS connection.
	CaBundle *string `pulumi:"caBundle"`
	// Enables or disables generating a new ACME account key.
	// If true, the Issuer resource will *not* request a new account but will expect
	// the account key to be supplied via an existing secret.
	// If false, the cert-manager system will generate a new ACME account key
	// for the Issuer.
	// Defaults to false.
	DisableAccountKeyGeneration *bool `pulumi:"disableAccountKeyGeneration"`
	// Email is the email address to be associated with the ACME account.
	// This field is optional, but it is strongly recommended to be set.
	// It will be used to contact you in case of issues with your account or
	// certificates, including expiry notification emails.
	// This field may be updated after the account is initially registered.
	Email *string `pulumi:"email"`
	// Enables requesting a Not After date on certificates that matches the
	// duration of the certificate. This is not supported by all ACME servers
	// like Let's Encrypt. If set to true when the ACME server does not support
	// it, it will create an error on the Order.
	// Defaults to false.
	EnableDurationFeature *bool `pulumi:"enableDurationFeature"`
	// ExternalAccountBinding is a reference to a CA external account of the ACME
	// server.
	// If set, upon registration cert-manager will attempt to associate the given
	// external account credentials with the registered ACME account.
	ExternalAccountBinding *IssuerSpecAcmeExternalAccountBinding `pulumi:"externalAccountBinding"`
	// PreferredChain is the chain to use if the ACME server outputs multiple.
	// PreferredChain is no guarantee that this one gets delivered by the ACME
	// endpoint.
	// For example, for Let's Encrypt's DST crosssign you would use:
	// "DST Root CA X3" or "ISRG Root X1" for the newer Let's Encrypt root CA.
	// This value picks the first certificate bundle in the combined set of
	// ACME default and alternative chains that has a root-most certificate with
	// this value as its issuer's commonname.
	PreferredChain *string `pulumi:"preferredChain"`
	// PrivateKey is the name of a Kubernetes Secret resource that will be used to
	// store the automatically generated ACME account private key.
	// Optionally, a `key` may be specified to select a specific entry within
	// the named Secret resource.
	// If `key` is not specified, a default of `tls.key` will be used.
	PrivateKeySecretRef IssuerSpecAcmePrivateKeySecretRef `pulumi:"privateKeySecretRef"`
	// Server is the URL used to access the ACME server's 'directory' endpoint.
	// For example, for Let's Encrypt's staging endpoint, you would use:
	// "https://acme-staging-v02.api.letsencrypt.org/directory".
	// Only ACME v2 endpoints (i.e. RFC 8555) are supported.
	Server string `pulumi:"server"`
	// INSECURE: Enables or disables validation of the ACME server TLS certificate.
	// If true, requests to the ACME server will not have the TLS certificate chain
	// validated.
	// Mutually exclusive with CABundle; prefer using CABundle to prevent various
	// kinds of security vulnerabilities.
	// Only enable this option in development environments.
	// If CABundle and SkipTLSVerify are unset, the system certificate bundle inside
	// the container is used to validate the TLS connection.
	// Defaults to false.
	SkipTLSVerify *bool `pulumi:"skipTLSVerify"`
	// Solvers is a list of challenge solvers that will be used to solve
	// ACME challenges for the matching domains.
	// Solver configurations must be provided in order to obtain certificates
	// from an ACME server.
	// For more information, see: https://cert-manager.io/docs/configuration/acme/
	Solvers []IssuerSpecAcmeSolvers `pulumi:"solvers"`
}

// IssuerSpecAcmeInput is an input type that accepts IssuerSpecAcmeArgs and IssuerSpecAcmeOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeInput` via:
//
//	IssuerSpecAcmeArgs{...}
type IssuerSpecAcmeInput interface {
	pulumi.Input

	ToIssuerSpecAcmeOutput() IssuerSpecAcmeOutput
	ToIssuerSpecAcmeOutputWithContext(context.Context) IssuerSpecAcmeOutput
}

// ACME configures this issuer to communicate with a RFC8555 (ACME) server
// to obtain signed x509 certificates.
type IssuerSpecAcmeArgs struct {
	// Base64-encoded bundle of PEM CAs which can be used to validate the certificate
	// chain presented by the ACME server.
	// Mutually exclusive with SkipTLSVerify; prefer using CABundle to prevent various
	// kinds of security vulnerabilities.
	// If CABundle and SkipTLSVerify are unset, the system certificate bundle inside
	// the container is used to validate the TLS connection.
	CaBundle pulumi.StringPtrInput `pulumi:"caBundle"`
	// Enables or disables generating a new ACME account key.
	// If true, the Issuer resource will *not* request a new account but will expect
	// the account key to be supplied via an existing secret.
	// If false, the cert-manager system will generate a new ACME account key
	// for the Issuer.
	// Defaults to false.
	DisableAccountKeyGeneration pulumi.BoolPtrInput `pulumi:"disableAccountKeyGeneration"`
	// Email is the email address to be associated with the ACME account.
	// This field is optional, but it is strongly recommended to be set.
	// It will be used to contact you in case of issues with your account or
	// certificates, including expiry notification emails.
	// This field may be updated after the account is initially registered.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// Enables requesting a Not After date on certificates that matches the
	// duration of the certificate. This is not supported by all ACME servers
	// like Let's Encrypt. If set to true when the ACME server does not support
	// it, it will create an error on the Order.
	// Defaults to false.
	EnableDurationFeature pulumi.BoolPtrInput `pulumi:"enableDurationFeature"`
	// ExternalAccountBinding is a reference to a CA external account of the ACME
	// server.
	// If set, upon registration cert-manager will attempt to associate the given
	// external account credentials with the registered ACME account.
	ExternalAccountBinding IssuerSpecAcmeExternalAccountBindingPtrInput `pulumi:"externalAccountBinding"`
	// PreferredChain is the chain to use if the ACME server outputs multiple.
	// PreferredChain is no guarantee that this one gets delivered by the ACME
	// endpoint.
	// For example, for Let's Encrypt's DST crosssign you would use:
	// "DST Root CA X3" or "ISRG Root X1" for the newer Let's Encrypt root CA.
	// This value picks the first certificate bundle in the combined set of
	// ACME default and alternative chains that has a root-most certificate with
	// this value as its issuer's commonname.
	PreferredChain pulumi.StringPtrInput `pulumi:"preferredChain"`
	// PrivateKey is the name of a Kubernetes Secret resource that will be used to
	// store the automatically generated ACME account private key.
	// Optionally, a `key` may be specified to select a specific entry within
	// the named Secret resource.
	// If `key` is not specified, a default of `tls.key` will be used.
	PrivateKeySecretRef IssuerSpecAcmePrivateKeySecretRefInput `pulumi:"privateKeySecretRef"`
	// Server is the URL used to access the ACME server's 'directory' endpoint.
	// For example, for Let's Encrypt's staging endpoint, you would use:
	// "https://acme-staging-v02.api.letsencrypt.org/directory".
	// Only ACME v2 endpoints (i.e. RFC 8555) are supported.
	Server pulumi.StringInput `pulumi:"server"`
	// INSECURE: Enables or disables validation of the ACME server TLS certificate.
	// If true, requests to the ACME server will not have the TLS certificate chain
	// validated.
	// Mutually exclusive with CABundle; prefer using CABundle to prevent various
	// kinds of security vulnerabilities.
	// Only enable this option in development environments.
	// If CABundle and SkipTLSVerify are unset, the system certificate bundle inside
	// the container is used to validate the TLS connection.
	// Defaults to false.
	SkipTLSVerify pulumi.BoolPtrInput `pulumi:"skipTLSVerify"`
	// Solvers is a list of challenge solvers that will be used to solve
	// ACME challenges for the matching domains.
	// Solver configurations must be provided in order to obtain certificates
	// from an ACME server.
	// For more information, see: https://cert-manager.io/docs/configuration/acme/
	Solvers IssuerSpecAcmeSolversArrayInput `pulumi:"solvers"`
}

func (IssuerSpecAcmeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcme)(nil)).Elem()
}

func (i IssuerSpecAcmeArgs) ToIssuerSpecAcmeOutput() IssuerSpecAcmeOutput {
	return i.ToIssuerSpecAcmeOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeArgs) ToIssuerSpecAcmeOutputWithContext(ctx context.Context) IssuerSpecAcmeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeOutput)
}

func (i IssuerSpecAcmeArgs) ToIssuerSpecAcmePtrOutput() IssuerSpecAcmePtrOutput {
	return i.ToIssuerSpecAcmePtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeArgs) ToIssuerSpecAcmePtrOutputWithContext(ctx context.Context) IssuerSpecAcmePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeOutput).ToIssuerSpecAcmePtrOutputWithContext(ctx)
}

// IssuerSpecAcmePtrInput is an input type that accepts IssuerSpecAcmeArgs, IssuerSpecAcmePtr and IssuerSpecAcmePtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmePtrInput` via:
//
//	        IssuerSpecAcmeArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmePtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmePtrOutput() IssuerSpecAcmePtrOutput
	ToIssuerSpecAcmePtrOutputWithContext(context.Context) IssuerSpecAcmePtrOutput
}

type issuerSpecAcmePtrType IssuerSpecAcmeArgs

func IssuerSpecAcmePtr(v *IssuerSpecAcmeArgs) IssuerSpecAcmePtrInput {
	return (*issuerSpecAcmePtrType)(v)
}

func (*issuerSpecAcmePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcme)(nil)).Elem()
}

func (i *issuerSpecAcmePtrType) ToIssuerSpecAcmePtrOutput() IssuerSpecAcmePtrOutput {
	return i.ToIssuerSpecAcmePtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmePtrType) ToIssuerSpecAcmePtrOutputWithContext(ctx context.Context) IssuerSpecAcmePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmePtrOutput)
}

// ACME configures this issuer to communicate with a RFC8555 (ACME) server
// to obtain signed x509 certificates.
type IssuerSpecAcmeOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcme)(nil)).Elem()
}

func (o IssuerSpecAcmeOutput) ToIssuerSpecAcmeOutput() IssuerSpecAcmeOutput {
	return o
}

func (o IssuerSpecAcmeOutput) ToIssuerSpecAcmeOutputWithContext(ctx context.Context) IssuerSpecAcmeOutput {
	return o
}

func (o IssuerSpecAcmeOutput) ToIssuerSpecAcmePtrOutput() IssuerSpecAcmePtrOutput {
	return o.ToIssuerSpecAcmePtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeOutput) ToIssuerSpecAcmePtrOutputWithContext(ctx context.Context) IssuerSpecAcmePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcme) *IssuerSpecAcme {
		return &v
	}).(IssuerSpecAcmePtrOutput)
}

// Base64-encoded bundle of PEM CAs which can be used to validate the certificate
// chain presented by the ACME server.
// Mutually exclusive with SkipTLSVerify; prefer using CABundle to prevent various
// kinds of security vulnerabilities.
// If CABundle and SkipTLSVerify are unset, the system certificate bundle inside
// the container is used to validate the TLS connection.
func (o IssuerSpecAcmeOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcme) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

// Enables or disables generating a new ACME account key.
// If true, the Issuer resource will *not* request a new account but will expect
// the account key to be supplied via an existing secret.
// If false, the cert-manager system will generate a new ACME account key
// for the Issuer.
// Defaults to false.
func (o IssuerSpecAcmeOutput) DisableAccountKeyGeneration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcme) *bool { return v.DisableAccountKeyGeneration }).(pulumi.BoolPtrOutput)
}

// Email is the email address to be associated with the ACME account.
// This field is optional, but it is strongly recommended to be set.
// It will be used to contact you in case of issues with your account or
// certificates, including expiry notification emails.
// This field may be updated after the account is initially registered.
func (o IssuerSpecAcmeOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcme) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Enables requesting a Not After date on certificates that matches the
// duration of the certificate. This is not supported by all ACME servers
// like Let's Encrypt. If set to true when the ACME server does not support
// it, it will create an error on the Order.
// Defaults to false.
func (o IssuerSpecAcmeOutput) EnableDurationFeature() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcme) *bool { return v.EnableDurationFeature }).(pulumi.BoolPtrOutput)
}

// ExternalAccountBinding is a reference to a CA external account of the ACME
// server.
// If set, upon registration cert-manager will attempt to associate the given
// external account credentials with the registered ACME account.
func (o IssuerSpecAcmeOutput) ExternalAccountBinding() IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcme) *IssuerSpecAcmeExternalAccountBinding { return v.ExternalAccountBinding }).(IssuerSpecAcmeExternalAccountBindingPtrOutput)
}

// PreferredChain is the chain to use if the ACME server outputs multiple.
// PreferredChain is no guarantee that this one gets delivered by the ACME
// endpoint.
// For example, for Let's Encrypt's DST crosssign you would use:
// "DST Root CA X3" or "ISRG Root X1" for the newer Let's Encrypt root CA.
// This value picks the first certificate bundle in the combined set of
// ACME default and alternative chains that has a root-most certificate with
// this value as its issuer's commonname.
func (o IssuerSpecAcmeOutput) PreferredChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcme) *string { return v.PreferredChain }).(pulumi.StringPtrOutput)
}

// PrivateKey is the name of a Kubernetes Secret resource that will be used to
// store the automatically generated ACME account private key.
// Optionally, a `key` may be specified to select a specific entry within
// the named Secret resource.
// If `key` is not specified, a default of `tls.key` will be used.
func (o IssuerSpecAcmeOutput) PrivateKeySecretRef() IssuerSpecAcmePrivateKeySecretRefOutput {
	return o.ApplyT(func(v IssuerSpecAcme) IssuerSpecAcmePrivateKeySecretRef { return v.PrivateKeySecretRef }).(IssuerSpecAcmePrivateKeySecretRefOutput)
}

// Server is the URL used to access the ACME server's 'directory' endpoint.
// For example, for Let's Encrypt's staging endpoint, you would use:
// "https://acme-staging-v02.api.letsencrypt.org/directory".
// Only ACME v2 endpoints (i.e. RFC 8555) are supported.
func (o IssuerSpecAcmeOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcme) string { return v.Server }).(pulumi.StringOutput)
}

// INSECURE: Enables or disables validation of the ACME server TLS certificate.
// If true, requests to the ACME server will not have the TLS certificate chain
// validated.
// Mutually exclusive with CABundle; prefer using CABundle to prevent various
// kinds of security vulnerabilities.
// Only enable this option in development environments.
// If CABundle and SkipTLSVerify are unset, the system certificate bundle inside
// the container is used to validate the TLS connection.
// Defaults to false.
func (o IssuerSpecAcmeOutput) SkipTLSVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcme) *bool { return v.SkipTLSVerify }).(pulumi.BoolPtrOutput)
}

// Solvers is a list of challenge solvers that will be used to solve
// ACME challenges for the matching domains.
// Solver configurations must be provided in order to obtain certificates
// from an ACME server.
// For more information, see: https://cert-manager.io/docs/configuration/acme/
func (o IssuerSpecAcmeOutput) Solvers() IssuerSpecAcmeSolversArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcme) []IssuerSpecAcmeSolvers { return v.Solvers }).(IssuerSpecAcmeSolversArrayOutput)
}

type IssuerSpecAcmePtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcme)(nil)).Elem()
}

func (o IssuerSpecAcmePtrOutput) ToIssuerSpecAcmePtrOutput() IssuerSpecAcmePtrOutput {
	return o
}

func (o IssuerSpecAcmePtrOutput) ToIssuerSpecAcmePtrOutputWithContext(ctx context.Context) IssuerSpecAcmePtrOutput {
	return o
}

func (o IssuerSpecAcmePtrOutput) Elem() IssuerSpecAcmeOutput {
	return o.ApplyT(func(v *IssuerSpecAcme) IssuerSpecAcme {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcme
		return ret
	}).(IssuerSpecAcmeOutput)
}

// Base64-encoded bundle of PEM CAs which can be used to validate the certificate
// chain presented by the ACME server.
// Mutually exclusive with SkipTLSVerify; prefer using CABundle to prevent various
// kinds of security vulnerabilities.
// If CABundle and SkipTLSVerify are unset, the system certificate bundle inside
// the container is used to validate the TLS connection.
func (o IssuerSpecAcmePtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcme) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

// Enables or disables generating a new ACME account key.
// If true, the Issuer resource will *not* request a new account but will expect
// the account key to be supplied via an existing secret.
// If false, the cert-manager system will generate a new ACME account key
// for the Issuer.
// Defaults to false.
func (o IssuerSpecAcmePtrOutput) DisableAccountKeyGeneration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcme) *bool {
		if v == nil {
			return nil
		}
		return v.DisableAccountKeyGeneration
	}).(pulumi.BoolPtrOutput)
}

// Email is the email address to be associated with the ACME account.
// This field is optional, but it is strongly recommended to be set.
// It will be used to contact you in case of issues with your account or
// certificates, including expiry notification emails.
// This field may be updated after the account is initially registered.
func (o IssuerSpecAcmePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcme) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// Enables requesting a Not After date on certificates that matches the
// duration of the certificate. This is not supported by all ACME servers
// like Let's Encrypt. If set to true when the ACME server does not support
// it, it will create an error on the Order.
// Defaults to false.
func (o IssuerSpecAcmePtrOutput) EnableDurationFeature() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcme) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDurationFeature
	}).(pulumi.BoolPtrOutput)
}

// ExternalAccountBinding is a reference to a CA external account of the ACME
// server.
// If set, upon registration cert-manager will attempt to associate the given
// external account credentials with the registered ACME account.
func (o IssuerSpecAcmePtrOutput) ExternalAccountBinding() IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcme) *IssuerSpecAcmeExternalAccountBinding {
		if v == nil {
			return nil
		}
		return v.ExternalAccountBinding
	}).(IssuerSpecAcmeExternalAccountBindingPtrOutput)
}

// PreferredChain is the chain to use if the ACME server outputs multiple.
// PreferredChain is no guarantee that this one gets delivered by the ACME
// endpoint.
// For example, for Let's Encrypt's DST crosssign you would use:
// "DST Root CA X3" or "ISRG Root X1" for the newer Let's Encrypt root CA.
// This value picks the first certificate bundle in the combined set of
// ACME default and alternative chains that has a root-most certificate with
// this value as its issuer's commonname.
func (o IssuerSpecAcmePtrOutput) PreferredChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcme) *string {
		if v == nil {
			return nil
		}
		return v.PreferredChain
	}).(pulumi.StringPtrOutput)
}

// PrivateKey is the name of a Kubernetes Secret resource that will be used to
// store the automatically generated ACME account private key.
// Optionally, a `key` may be specified to select a specific entry within
// the named Secret resource.
// If `key` is not specified, a default of `tls.key` will be used.
func (o IssuerSpecAcmePtrOutput) PrivateKeySecretRef() IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcme) *IssuerSpecAcmePrivateKeySecretRef {
		if v == nil {
			return nil
		}
		return &v.PrivateKeySecretRef
	}).(IssuerSpecAcmePrivateKeySecretRefPtrOutput)
}

// Server is the URL used to access the ACME server's 'directory' endpoint.
// For example, for Let's Encrypt's staging endpoint, you would use:
// "https://acme-staging-v02.api.letsencrypt.org/directory".
// Only ACME v2 endpoints (i.e. RFC 8555) are supported.
func (o IssuerSpecAcmePtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcme) *string {
		if v == nil {
			return nil
		}
		return &v.Server
	}).(pulumi.StringPtrOutput)
}

// INSECURE: Enables or disables validation of the ACME server TLS certificate.
// If true, requests to the ACME server will not have the TLS certificate chain
// validated.
// Mutually exclusive with CABundle; prefer using CABundle to prevent various
// kinds of security vulnerabilities.
// Only enable this option in development environments.
// If CABundle and SkipTLSVerify are unset, the system certificate bundle inside
// the container is used to validate the TLS connection.
// Defaults to false.
func (o IssuerSpecAcmePtrOutput) SkipTLSVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcme) *bool {
		if v == nil {
			return nil
		}
		return v.SkipTLSVerify
	}).(pulumi.BoolPtrOutput)
}

// Solvers is a list of challenge solvers that will be used to solve
// ACME challenges for the matching domains.
// Solver configurations must be provided in order to obtain certificates
// from an ACME server.
// For more information, see: https://cert-manager.io/docs/configuration/acme/
func (o IssuerSpecAcmePtrOutput) Solvers() IssuerSpecAcmeSolversArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcme) []IssuerSpecAcmeSolvers {
		if v == nil {
			return nil
		}
		return v.Solvers
	}).(IssuerSpecAcmeSolversArrayOutput)
}

// ExternalAccountBinding is a reference to a CA external account of the ACME
// server.
// If set, upon registration cert-manager will attempt to associate the given
// external account credentials with the registered ACME account.
type IssuerSpecAcmeExternalAccountBinding struct {
	// Deprecated: keyAlgorithm field exists for historical compatibility
	// reasons and should not be used. The algorithm is now hardcoded to HS256
	// in golang/x/crypto/acme.
	KeyAlgorithm *string `pulumi:"keyAlgorithm"`
	// keyID is the ID of the CA key that the External Account is bound to.
	KeyID string `pulumi:"keyID"`
	// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes
	// Secret which holds the symmetric MAC key of the External Account Binding.
	// The `key` is the index string that is paired with the key data in the
	// Secret and should not be confused with the key data itself, or indeed with
	// the External Account Binding keyID above.
	// The secret key stored in the Secret **must** be un-padded, base64 URL
	// encoded data.
	KeySecretRef IssuerSpecAcmeExternalAccountBindingKeySecretRef `pulumi:"keySecretRef"`
}

// IssuerSpecAcmeExternalAccountBindingInput is an input type that accepts IssuerSpecAcmeExternalAccountBindingArgs and IssuerSpecAcmeExternalAccountBindingOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeExternalAccountBindingInput` via:
//
//	IssuerSpecAcmeExternalAccountBindingArgs{...}
type IssuerSpecAcmeExternalAccountBindingInput interface {
	pulumi.Input

	ToIssuerSpecAcmeExternalAccountBindingOutput() IssuerSpecAcmeExternalAccountBindingOutput
	ToIssuerSpecAcmeExternalAccountBindingOutputWithContext(context.Context) IssuerSpecAcmeExternalAccountBindingOutput
}

// ExternalAccountBinding is a reference to a CA external account of the ACME
// server.
// If set, upon registration cert-manager will attempt to associate the given
// external account credentials with the registered ACME account.
type IssuerSpecAcmeExternalAccountBindingArgs struct {
	// Deprecated: keyAlgorithm field exists for historical compatibility
	// reasons and should not be used. The algorithm is now hardcoded to HS256
	// in golang/x/crypto/acme.
	KeyAlgorithm pulumi.StringPtrInput `pulumi:"keyAlgorithm"`
	// keyID is the ID of the CA key that the External Account is bound to.
	KeyID pulumi.StringInput `pulumi:"keyID"`
	// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes
	// Secret which holds the symmetric MAC key of the External Account Binding.
	// The `key` is the index string that is paired with the key data in the
	// Secret and should not be confused with the key data itself, or indeed with
	// the External Account Binding keyID above.
	// The secret key stored in the Secret **must** be un-padded, base64 URL
	// encoded data.
	KeySecretRef IssuerSpecAcmeExternalAccountBindingKeySecretRefInput `pulumi:"keySecretRef"`
}

func (IssuerSpecAcmeExternalAccountBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeExternalAccountBinding)(nil)).Elem()
}

func (i IssuerSpecAcmeExternalAccountBindingArgs) ToIssuerSpecAcmeExternalAccountBindingOutput() IssuerSpecAcmeExternalAccountBindingOutput {
	return i.ToIssuerSpecAcmeExternalAccountBindingOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeExternalAccountBindingArgs) ToIssuerSpecAcmeExternalAccountBindingOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeExternalAccountBindingOutput)
}

func (i IssuerSpecAcmeExternalAccountBindingArgs) ToIssuerSpecAcmeExternalAccountBindingPtrOutput() IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return i.ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeExternalAccountBindingArgs) ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeExternalAccountBindingOutput).ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeExternalAccountBindingPtrInput is an input type that accepts IssuerSpecAcmeExternalAccountBindingArgs, IssuerSpecAcmeExternalAccountBindingPtr and IssuerSpecAcmeExternalAccountBindingPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeExternalAccountBindingPtrInput` via:
//
//	        IssuerSpecAcmeExternalAccountBindingArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeExternalAccountBindingPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeExternalAccountBindingPtrOutput() IssuerSpecAcmeExternalAccountBindingPtrOutput
	ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(context.Context) IssuerSpecAcmeExternalAccountBindingPtrOutput
}

type issuerSpecAcmeExternalAccountBindingPtrType IssuerSpecAcmeExternalAccountBindingArgs

func IssuerSpecAcmeExternalAccountBindingPtr(v *IssuerSpecAcmeExternalAccountBindingArgs) IssuerSpecAcmeExternalAccountBindingPtrInput {
	return (*issuerSpecAcmeExternalAccountBindingPtrType)(v)
}

func (*issuerSpecAcmeExternalAccountBindingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeExternalAccountBinding)(nil)).Elem()
}

func (i *issuerSpecAcmeExternalAccountBindingPtrType) ToIssuerSpecAcmeExternalAccountBindingPtrOutput() IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return i.ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeExternalAccountBindingPtrType) ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeExternalAccountBindingPtrOutput)
}

// ExternalAccountBinding is a reference to a CA external account of the ACME
// server.
// If set, upon registration cert-manager will attempt to associate the given
// external account credentials with the registered ACME account.
type IssuerSpecAcmeExternalAccountBindingOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeExternalAccountBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeExternalAccountBinding)(nil)).Elem()
}

func (o IssuerSpecAcmeExternalAccountBindingOutput) ToIssuerSpecAcmeExternalAccountBindingOutput() IssuerSpecAcmeExternalAccountBindingOutput {
	return o
}

func (o IssuerSpecAcmeExternalAccountBindingOutput) ToIssuerSpecAcmeExternalAccountBindingOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingOutput {
	return o
}

func (o IssuerSpecAcmeExternalAccountBindingOutput) ToIssuerSpecAcmeExternalAccountBindingPtrOutput() IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o.ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeExternalAccountBindingOutput) ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeExternalAccountBinding) *IssuerSpecAcmeExternalAccountBinding {
		return &v
	}).(IssuerSpecAcmeExternalAccountBindingPtrOutput)
}

// Deprecated: keyAlgorithm field exists for historical compatibility
// reasons and should not be used. The algorithm is now hardcoded to HS256
// in golang/x/crypto/acme.
func (o IssuerSpecAcmeExternalAccountBindingOutput) KeyAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeExternalAccountBinding) *string { return v.KeyAlgorithm }).(pulumi.StringPtrOutput)
}

// keyID is the ID of the CA key that the External Account is bound to.
func (o IssuerSpecAcmeExternalAccountBindingOutput) KeyID() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeExternalAccountBinding) string { return v.KeyID }).(pulumi.StringOutput)
}

// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes
// Secret which holds the symmetric MAC key of the External Account Binding.
// The `key` is the index string that is paired with the key data in the
// Secret and should not be confused with the key data itself, or indeed with
// the External Account Binding keyID above.
// The secret key stored in the Secret **must** be un-padded, base64 URL
// encoded data.
func (o IssuerSpecAcmeExternalAccountBindingOutput) KeySecretRef() IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return o.ApplyT(func(v IssuerSpecAcmeExternalAccountBinding) IssuerSpecAcmeExternalAccountBindingKeySecretRef {
		return v.KeySecretRef
	}).(IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput)
}

type IssuerSpecAcmeExternalAccountBindingPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeExternalAccountBindingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeExternalAccountBinding)(nil)).Elem()
}

func (o IssuerSpecAcmeExternalAccountBindingPtrOutput) ToIssuerSpecAcmeExternalAccountBindingPtrOutput() IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o
}

func (o IssuerSpecAcmeExternalAccountBindingPtrOutput) ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o
}

func (o IssuerSpecAcmeExternalAccountBindingPtrOutput) Elem() IssuerSpecAcmeExternalAccountBindingOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeExternalAccountBinding) IssuerSpecAcmeExternalAccountBinding {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeExternalAccountBinding
		return ret
	}).(IssuerSpecAcmeExternalAccountBindingOutput)
}

// Deprecated: keyAlgorithm field exists for historical compatibility
// reasons and should not be used. The algorithm is now hardcoded to HS256
// in golang/x/crypto/acme.
func (o IssuerSpecAcmeExternalAccountBindingPtrOutput) KeyAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeExternalAccountBinding) *string {
		if v == nil {
			return nil
		}
		return v.KeyAlgorithm
	}).(pulumi.StringPtrOutput)
}

// keyID is the ID of the CA key that the External Account is bound to.
func (o IssuerSpecAcmeExternalAccountBindingPtrOutput) KeyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeExternalAccountBinding) *string {
		if v == nil {
			return nil
		}
		return &v.KeyID
	}).(pulumi.StringPtrOutput)
}

// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes
// Secret which holds the symmetric MAC key of the External Account Binding.
// The `key` is the index string that is paired with the key data in the
// Secret and should not be confused with the key data itself, or indeed with
// the External Account Binding keyID above.
// The secret key stored in the Secret **must** be un-padded, base64 URL
// encoded data.
func (o IssuerSpecAcmeExternalAccountBindingPtrOutput) KeySecretRef() IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeExternalAccountBinding) *IssuerSpecAcmeExternalAccountBindingKeySecretRef {
		if v == nil {
			return nil
		}
		return &v.KeySecretRef
	}).(IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput)
}

// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes
// Secret which holds the symmetric MAC key of the External Account Binding.
// The `key` is the index string that is paired with the key data in the
// Secret and should not be confused with the key data itself, or indeed with
// the External Account Binding keyID above.
// The secret key stored in the Secret **must** be un-padded, base64 URL
// encoded data.
type IssuerSpecAcmeExternalAccountBindingKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeExternalAccountBindingKeySecretRefInput is an input type that accepts IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs and IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeExternalAccountBindingKeySecretRefInput` via:
//
//	IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs{...}
type IssuerSpecAcmeExternalAccountBindingKeySecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput() IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput
	ToIssuerSpecAcmeExternalAccountBindingKeySecretRefOutputWithContext(context.Context) IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput
}

// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes
// Secret which holds the symmetric MAC key of the External Account Binding.
// The `key` is the index string that is paired with the key data in the
// Secret and should not be confused with the key data itself, or indeed with
// the External Account Binding keyID above.
// The secret key stored in the Secret **must** be un-padded, base64 URL
// encoded data.
type IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeExternalAccountBindingKeySecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput() IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return i.ToIssuerSpecAcmeExternalAccountBindingKeySecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput)
}

func (i IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput() IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return i.ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput).ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrInput is an input type that accepts IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs, IssuerSpecAcmeExternalAccountBindingKeySecretRefPtr and IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrInput` via:
//
//	        IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput() IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput
	ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput
}

type issuerSpecAcmeExternalAccountBindingKeySecretRefPtrType IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs

func IssuerSpecAcmeExternalAccountBindingKeySecretRefPtr(v *IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrInput {
	return (*issuerSpecAcmeExternalAccountBindingKeySecretRefPtrType)(v)
}

func (*issuerSpecAcmeExternalAccountBindingKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeExternalAccountBindingKeySecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeExternalAccountBindingKeySecretRefPtrType) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput() IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return i.ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeExternalAccountBindingKeySecretRefPtrType) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput)
}

// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes
// Secret which holds the symmetric MAC key of the External Account Binding.
// The `key` is the index string that is paired with the key data in the
// Secret and should not be confused with the key data itself, or indeed with
// the External Account Binding keyID above.
// The secret key stored in the Secret **must** be un-padded, base64 URL
// encoded data.
type IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeExternalAccountBindingKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput() IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return o
}

func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return o
}

func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput() IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return o.ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeExternalAccountBindingKeySecretRef) *IssuerSpecAcmeExternalAccountBindingKeySecretRef {
		return &v
	}).(IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeExternalAccountBindingKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeExternalAccountBindingKeySecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeExternalAccountBindingKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput() IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) Elem() IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeExternalAccountBindingKeySecretRef) IssuerSpecAcmeExternalAccountBindingKeySecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeExternalAccountBindingKeySecretRef
		return ret
	}).(IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeExternalAccountBindingKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeExternalAccountBindingKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// PrivateKey is the name of a Kubernetes Secret resource that will be used to
// store the automatically generated ACME account private key.
// Optionally, a `key` may be specified to select a specific entry within
// the named Secret resource.
// If `key` is not specified, a default of `tls.key` will be used.
type IssuerSpecAcmePrivateKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmePrivateKeySecretRefInput is an input type that accepts IssuerSpecAcmePrivateKeySecretRefArgs and IssuerSpecAcmePrivateKeySecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmePrivateKeySecretRefInput` via:
//
//	IssuerSpecAcmePrivateKeySecretRefArgs{...}
type IssuerSpecAcmePrivateKeySecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmePrivateKeySecretRefOutput() IssuerSpecAcmePrivateKeySecretRefOutput
	ToIssuerSpecAcmePrivateKeySecretRefOutputWithContext(context.Context) IssuerSpecAcmePrivateKeySecretRefOutput
}

// PrivateKey is the name of a Kubernetes Secret resource that will be used to
// store the automatically generated ACME account private key.
// Optionally, a `key` may be specified to select a specific entry within
// the named Secret resource.
// If `key` is not specified, a default of `tls.key` will be used.
type IssuerSpecAcmePrivateKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmePrivateKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmePrivateKeySecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmePrivateKeySecretRefArgs) ToIssuerSpecAcmePrivateKeySecretRefOutput() IssuerSpecAcmePrivateKeySecretRefOutput {
	return i.ToIssuerSpecAcmePrivateKeySecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmePrivateKeySecretRefArgs) ToIssuerSpecAcmePrivateKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmePrivateKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmePrivateKeySecretRefOutput)
}

func (i IssuerSpecAcmePrivateKeySecretRefArgs) ToIssuerSpecAcmePrivateKeySecretRefPtrOutput() IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return i.ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmePrivateKeySecretRefArgs) ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmePrivateKeySecretRefOutput).ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmePrivateKeySecretRefPtrInput is an input type that accepts IssuerSpecAcmePrivateKeySecretRefArgs, IssuerSpecAcmePrivateKeySecretRefPtr and IssuerSpecAcmePrivateKeySecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmePrivateKeySecretRefPtrInput` via:
//
//	        IssuerSpecAcmePrivateKeySecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmePrivateKeySecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmePrivateKeySecretRefPtrOutput() IssuerSpecAcmePrivateKeySecretRefPtrOutput
	ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmePrivateKeySecretRefPtrOutput
}

type issuerSpecAcmePrivateKeySecretRefPtrType IssuerSpecAcmePrivateKeySecretRefArgs

func IssuerSpecAcmePrivateKeySecretRefPtr(v *IssuerSpecAcmePrivateKeySecretRefArgs) IssuerSpecAcmePrivateKeySecretRefPtrInput {
	return (*issuerSpecAcmePrivateKeySecretRefPtrType)(v)
}

func (*issuerSpecAcmePrivateKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmePrivateKeySecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmePrivateKeySecretRefPtrType) ToIssuerSpecAcmePrivateKeySecretRefPtrOutput() IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return i.ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmePrivateKeySecretRefPtrType) ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmePrivateKeySecretRefPtrOutput)
}

// PrivateKey is the name of a Kubernetes Secret resource that will be used to
// store the automatically generated ACME account private key.
// Optionally, a `key` may be specified to select a specific entry within
// the named Secret resource.
// If `key` is not specified, a default of `tls.key` will be used.
type IssuerSpecAcmePrivateKeySecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmePrivateKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmePrivateKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmePrivateKeySecretRefOutput) ToIssuerSpecAcmePrivateKeySecretRefOutput() IssuerSpecAcmePrivateKeySecretRefOutput {
	return o
}

func (o IssuerSpecAcmePrivateKeySecretRefOutput) ToIssuerSpecAcmePrivateKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmePrivateKeySecretRefOutput {
	return o
}

func (o IssuerSpecAcmePrivateKeySecretRefOutput) ToIssuerSpecAcmePrivateKeySecretRefPtrOutput() IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return o.ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmePrivateKeySecretRefOutput) ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmePrivateKeySecretRef) *IssuerSpecAcmePrivateKeySecretRef {
		return &v
	}).(IssuerSpecAcmePrivateKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmePrivateKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmePrivateKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmePrivateKeySecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmePrivateKeySecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmePrivateKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmePrivateKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmePrivateKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmePrivateKeySecretRefPtrOutput) ToIssuerSpecAcmePrivateKeySecretRefPtrOutput() IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmePrivateKeySecretRefPtrOutput) ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmePrivateKeySecretRefPtrOutput) Elem() IssuerSpecAcmePrivateKeySecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmePrivateKeySecretRef) IssuerSpecAcmePrivateKeySecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmePrivateKeySecretRef
		return ret
	}).(IssuerSpecAcmePrivateKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmePrivateKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmePrivateKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmePrivateKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmePrivateKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// An ACMEChallengeSolver describes how to solve ACME challenges for the issuer it is part of.
// A selector may be provided to use different solving strategies for different DNS names.
// Only one of HTTP01 or DNS01 must be provided.
type IssuerSpecAcmeSolvers struct {
	// Configures cert-manager to attempt to complete authorizations by
	// performing the DNS01 challenge flow.
	Dns01 *IssuerSpecAcmeSolversDns01 `pulumi:"dns01"`
	// Configures cert-manager to attempt to complete authorizations by
	// performing the HTTP01 challenge flow.
	// It is not possible to obtain certificates for wildcard domain names
	// (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
	Http01 *IssuerSpecAcmeSolversHttp01 `pulumi:"http01"`
	// Selector selects a set of DNSNames on the Certificate resource that
	// should be solved using this challenge solver.
	// If not specified, the solver will be treated as the 'default' solver
	// with the lowest priority, i.e. if any other solver has a more specific
	// match, it will be used instead.
	Selector *IssuerSpecAcmeSolversSelector `pulumi:"selector"`
}

// IssuerSpecAcmeSolversInput is an input type that accepts IssuerSpecAcmeSolversArgs and IssuerSpecAcmeSolversOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversInput` via:
//
//	IssuerSpecAcmeSolversArgs{...}
type IssuerSpecAcmeSolversInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversOutput() IssuerSpecAcmeSolversOutput
	ToIssuerSpecAcmeSolversOutputWithContext(context.Context) IssuerSpecAcmeSolversOutput
}

// An ACMEChallengeSolver describes how to solve ACME challenges for the issuer it is part of.
// A selector may be provided to use different solving strategies for different DNS names.
// Only one of HTTP01 or DNS01 must be provided.
type IssuerSpecAcmeSolversArgs struct {
	// Configures cert-manager to attempt to complete authorizations by
	// performing the DNS01 challenge flow.
	Dns01 IssuerSpecAcmeSolversDns01PtrInput `pulumi:"dns01"`
	// Configures cert-manager to attempt to complete authorizations by
	// performing the HTTP01 challenge flow.
	// It is not possible to obtain certificates for wildcard domain names
	// (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
	Http01 IssuerSpecAcmeSolversHttp01PtrInput `pulumi:"http01"`
	// Selector selects a set of DNSNames on the Certificate resource that
	// should be solved using this challenge solver.
	// If not specified, the solver will be treated as the 'default' solver
	// with the lowest priority, i.e. if any other solver has a more specific
	// match, it will be used instead.
	Selector IssuerSpecAcmeSolversSelectorPtrInput `pulumi:"selector"`
}

func (IssuerSpecAcmeSolversArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolvers)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversArgs) ToIssuerSpecAcmeSolversOutput() IssuerSpecAcmeSolversOutput {
	return i.ToIssuerSpecAcmeSolversOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversArgs) ToIssuerSpecAcmeSolversOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversOutput)
}

// IssuerSpecAcmeSolversArrayInput is an input type that accepts IssuerSpecAcmeSolversArray and IssuerSpecAcmeSolversArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversArrayInput` via:
//
//	IssuerSpecAcmeSolversArray{ IssuerSpecAcmeSolversArgs{...} }
type IssuerSpecAcmeSolversArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversArrayOutput() IssuerSpecAcmeSolversArrayOutput
	ToIssuerSpecAcmeSolversArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversArrayOutput
}

type IssuerSpecAcmeSolversArray []IssuerSpecAcmeSolversInput

func (IssuerSpecAcmeSolversArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolvers)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversArray) ToIssuerSpecAcmeSolversArrayOutput() IssuerSpecAcmeSolversArrayOutput {
	return i.ToIssuerSpecAcmeSolversArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversArray) ToIssuerSpecAcmeSolversArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversArrayOutput)
}

// An ACMEChallengeSolver describes how to solve ACME challenges for the issuer it is part of.
// A selector may be provided to use different solving strategies for different DNS names.
// Only one of HTTP01 or DNS01 must be provided.
type IssuerSpecAcmeSolversOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolvers)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversOutput) ToIssuerSpecAcmeSolversOutput() IssuerSpecAcmeSolversOutput {
	return o
}

func (o IssuerSpecAcmeSolversOutput) ToIssuerSpecAcmeSolversOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversOutput {
	return o
}

// Configures cert-manager to attempt to complete authorizations by
// performing the DNS01 challenge flow.
func (o IssuerSpecAcmeSolversOutput) Dns01() IssuerSpecAcmeSolversDns01PtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolvers) *IssuerSpecAcmeSolversDns01 { return v.Dns01 }).(IssuerSpecAcmeSolversDns01PtrOutput)
}

// Configures cert-manager to attempt to complete authorizations by
// performing the HTTP01 challenge flow.
// It is not possible to obtain certificates for wildcard domain names
// (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
func (o IssuerSpecAcmeSolversOutput) Http01() IssuerSpecAcmeSolversHttp01PtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolvers) *IssuerSpecAcmeSolversHttp01 { return v.Http01 }).(IssuerSpecAcmeSolversHttp01PtrOutput)
}

// Selector selects a set of DNSNames on the Certificate resource that
// should be solved using this challenge solver.
// If not specified, the solver will be treated as the 'default' solver
// with the lowest priority, i.e. if any other solver has a more specific
// match, it will be used instead.
func (o IssuerSpecAcmeSolversOutput) Selector() IssuerSpecAcmeSolversSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolvers) *IssuerSpecAcmeSolversSelector { return v.Selector }).(IssuerSpecAcmeSolversSelectorPtrOutput)
}

type IssuerSpecAcmeSolversArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolvers)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversArrayOutput) ToIssuerSpecAcmeSolversArrayOutput() IssuerSpecAcmeSolversArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversArrayOutput) ToIssuerSpecAcmeSolversArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolvers {
		return vs[0].([]IssuerSpecAcmeSolvers)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversOutput)
}

// Configures cert-manager to attempt to complete authorizations by
// performing the DNS01 challenge flow.
type IssuerSpecAcmeSolversDns01 struct {
	// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage
	// DNS01 challenge records.
	AcmeDNS *IssuerSpecAcmeSolversDns01AcmeDns `pulumi:"acmeDNS"`
	// Use the Akamai DNS zone management API to manage DNS01 challenge records.
	Akamai *IssuerSpecAcmeSolversDns01Akamai `pulumi:"akamai"`
	// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
	AzureDNS *IssuerSpecAcmeSolversDns01AzureDns `pulumi:"azureDNS"`
	// Use the Google Cloud DNS API to manage DNS01 challenge records.
	CloudDNS *IssuerSpecAcmeSolversDns01CloudDns `pulumi:"cloudDNS"`
	// Use the Cloudflare API to manage DNS01 challenge records.
	Cloudflare *IssuerSpecAcmeSolversDns01Cloudflare `pulumi:"cloudflare"`
	// CNAMEStrategy configures how the DNS01 provider should handle CNAME
	// records when found in DNS zones.
	CnameStrategy *string `pulumi:"cnameStrategy"`
	// Use the DigitalOcean DNS API to manage DNS01 challenge records.
	Digitalocean *IssuerSpecAcmeSolversDns01Digitalocean `pulumi:"digitalocean"`
	// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
	// to manage DNS01 challenge records.
	Rfc2136 *IssuerSpecAcmeSolversDns01Rfc2136 `pulumi:"rfc2136"`
	// Use the AWS Route53 API to manage DNS01 challenge records.
	Route53 *IssuerSpecAcmeSolversDns01Route53 `pulumi:"route53"`
	// Configure an external webhook based DNS01 challenge solver to manage
	// DNS01 challenge records.
	Webhook *IssuerSpecAcmeSolversDns01Webhook `pulumi:"webhook"`
}

// IssuerSpecAcmeSolversDns01Input is an input type that accepts IssuerSpecAcmeSolversDns01Args and IssuerSpecAcmeSolversDns01Output values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Input` via:
//
//	IssuerSpecAcmeSolversDns01Args{...}
type IssuerSpecAcmeSolversDns01Input interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Output() IssuerSpecAcmeSolversDns01Output
	ToIssuerSpecAcmeSolversDns01OutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Output
}

// Configures cert-manager to attempt to complete authorizations by
// performing the DNS01 challenge flow.
type IssuerSpecAcmeSolversDns01Args struct {
	// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage
	// DNS01 challenge records.
	AcmeDNS IssuerSpecAcmeSolversDns01AcmeDnsPtrInput `pulumi:"acmeDNS"`
	// Use the Akamai DNS zone management API to manage DNS01 challenge records.
	Akamai IssuerSpecAcmeSolversDns01AkamaiPtrInput `pulumi:"akamai"`
	// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
	AzureDNS IssuerSpecAcmeSolversDns01AzureDnsPtrInput `pulumi:"azureDNS"`
	// Use the Google Cloud DNS API to manage DNS01 challenge records.
	CloudDNS IssuerSpecAcmeSolversDns01CloudDnsPtrInput `pulumi:"cloudDNS"`
	// Use the Cloudflare API to manage DNS01 challenge records.
	Cloudflare IssuerSpecAcmeSolversDns01CloudflarePtrInput `pulumi:"cloudflare"`
	// CNAMEStrategy configures how the DNS01 provider should handle CNAME
	// records when found in DNS zones.
	CnameStrategy pulumi.StringPtrInput `pulumi:"cnameStrategy"`
	// Use the DigitalOcean DNS API to manage DNS01 challenge records.
	Digitalocean IssuerSpecAcmeSolversDns01DigitaloceanPtrInput `pulumi:"digitalocean"`
	// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
	// to manage DNS01 challenge records.
	Rfc2136 IssuerSpecAcmeSolversDns01Rfc2136PtrInput `pulumi:"rfc2136"`
	// Use the AWS Route53 API to manage DNS01 challenge records.
	Route53 IssuerSpecAcmeSolversDns01Route53PtrInput `pulumi:"route53"`
	// Configure an external webhook based DNS01 challenge solver to manage
	// DNS01 challenge records.
	Webhook IssuerSpecAcmeSolversDns01WebhookPtrInput `pulumi:"webhook"`
}

func (IssuerSpecAcmeSolversDns01Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01Args) ToIssuerSpecAcmeSolversDns01Output() IssuerSpecAcmeSolversDns01Output {
	return i.ToIssuerSpecAcmeSolversDns01OutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Args) ToIssuerSpecAcmeSolversDns01OutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Output {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Output)
}

func (i IssuerSpecAcmeSolversDns01Args) ToIssuerSpecAcmeSolversDns01PtrOutput() IssuerSpecAcmeSolversDns01PtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Args) ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Output).ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01PtrInput is an input type that accepts IssuerSpecAcmeSolversDns01Args, IssuerSpecAcmeSolversDns01Ptr and IssuerSpecAcmeSolversDns01PtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01PtrInput` via:
//
//	        IssuerSpecAcmeSolversDns01Args{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversDns01PtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01PtrOutput() IssuerSpecAcmeSolversDns01PtrOutput
	ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01PtrOutput
}

type issuerSpecAcmeSolversDns01PtrType IssuerSpecAcmeSolversDns01Args

func IssuerSpecAcmeSolversDns01Ptr(v *IssuerSpecAcmeSolversDns01Args) IssuerSpecAcmeSolversDns01PtrInput {
	return (*issuerSpecAcmeSolversDns01PtrType)(v)
}

func (*issuerSpecAcmeSolversDns01PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01PtrType) ToIssuerSpecAcmeSolversDns01PtrOutput() IssuerSpecAcmeSolversDns01PtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01PtrType) ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01PtrOutput)
}

// Configures cert-manager to attempt to complete authorizations by
// performing the DNS01 challenge flow.
type IssuerSpecAcmeSolversDns01Output struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Output) ToIssuerSpecAcmeSolversDns01Output() IssuerSpecAcmeSolversDns01Output {
	return o
}

func (o IssuerSpecAcmeSolversDns01Output) ToIssuerSpecAcmeSolversDns01OutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Output {
	return o
}

func (o IssuerSpecAcmeSolversDns01Output) ToIssuerSpecAcmeSolversDns01PtrOutput() IssuerSpecAcmeSolversDns01PtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01Output) ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01 {
		return &v
	}).(IssuerSpecAcmeSolversDns01PtrOutput)
}

// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage
// DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) AcmeDNS() IssuerSpecAcmeSolversDns01AcmeDnsPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01AcmeDns { return v.AcmeDNS }).(IssuerSpecAcmeSolversDns01AcmeDnsPtrOutput)
}

// Use the Akamai DNS zone management API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) Akamai() IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Akamai { return v.Akamai }).(IssuerSpecAcmeSolversDns01AkamaiPtrOutput)
}

// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) AzureDNS() IssuerSpecAcmeSolversDns01AzureDnsPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01AzureDns { return v.AzureDNS }).(IssuerSpecAcmeSolversDns01AzureDnsPtrOutput)
}

// Use the Google Cloud DNS API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) CloudDNS() IssuerSpecAcmeSolversDns01CloudDnsPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01CloudDns { return v.CloudDNS }).(IssuerSpecAcmeSolversDns01CloudDnsPtrOutput)
}

// Use the Cloudflare API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) Cloudflare() IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Cloudflare { return v.Cloudflare }).(IssuerSpecAcmeSolversDns01CloudflarePtrOutput)
}

// CNAMEStrategy configures how the DNS01 provider should handle CNAME
// records when found in DNS zones.
func (o IssuerSpecAcmeSolversDns01Output) CnameStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01) *string { return v.CnameStrategy }).(pulumi.StringPtrOutput)
}

// Use the DigitalOcean DNS API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) Digitalocean() IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Digitalocean { return v.Digitalocean }).(IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput)
}

// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
// to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) Rfc2136() IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Rfc2136 { return v.Rfc2136 }).(IssuerSpecAcmeSolversDns01Rfc2136PtrOutput)
}

// Use the AWS Route53 API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) Route53() IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Route53 { return v.Route53 }).(IssuerSpecAcmeSolversDns01Route53PtrOutput)
}

// Configure an external webhook based DNS01 challenge solver to manage
// DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) Webhook() IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Webhook { return v.Webhook }).(IssuerSpecAcmeSolversDns01WebhookPtrOutput)
}

type IssuerSpecAcmeSolversDns01PtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01PtrOutput) ToIssuerSpecAcmeSolversDns01PtrOutput() IssuerSpecAcmeSolversDns01PtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01PtrOutput) ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01PtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01PtrOutput) Elem() IssuerSpecAcmeSolversDns01Output {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01) IssuerSpecAcmeSolversDns01 {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversDns01
		return ret
	}).(IssuerSpecAcmeSolversDns01Output)
}

// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage
// DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) AcmeDNS() IssuerSpecAcmeSolversDns01AcmeDnsPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01AcmeDns {
		if v == nil {
			return nil
		}
		return v.AcmeDNS
	}).(IssuerSpecAcmeSolversDns01AcmeDnsPtrOutput)
}

// Use the Akamai DNS zone management API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) Akamai() IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Akamai {
		if v == nil {
			return nil
		}
		return v.Akamai
	}).(IssuerSpecAcmeSolversDns01AkamaiPtrOutput)
}

// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) AzureDNS() IssuerSpecAcmeSolversDns01AzureDnsPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01AzureDns {
		if v == nil {
			return nil
		}
		return v.AzureDNS
	}).(IssuerSpecAcmeSolversDns01AzureDnsPtrOutput)
}

// Use the Google Cloud DNS API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) CloudDNS() IssuerSpecAcmeSolversDns01CloudDnsPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01CloudDns {
		if v == nil {
			return nil
		}
		return v.CloudDNS
	}).(IssuerSpecAcmeSolversDns01CloudDnsPtrOutput)
}

// Use the Cloudflare API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) Cloudflare() IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Cloudflare {
		if v == nil {
			return nil
		}
		return v.Cloudflare
	}).(IssuerSpecAcmeSolversDns01CloudflarePtrOutput)
}

// CNAMEStrategy configures how the DNS01 provider should handle CNAME
// records when found in DNS zones.
func (o IssuerSpecAcmeSolversDns01PtrOutput) CnameStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01) *string {
		if v == nil {
			return nil
		}
		return v.CnameStrategy
	}).(pulumi.StringPtrOutput)
}

// Use the DigitalOcean DNS API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) Digitalocean() IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Digitalocean {
		if v == nil {
			return nil
		}
		return v.Digitalocean
	}).(IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput)
}

// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
// to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) Rfc2136() IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Rfc2136 {
		if v == nil {
			return nil
		}
		return v.Rfc2136
	}).(IssuerSpecAcmeSolversDns01Rfc2136PtrOutput)
}

// Use the AWS Route53 API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) Route53() IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Route53 {
		if v == nil {
			return nil
		}
		return v.Route53
	}).(IssuerSpecAcmeSolversDns01Route53PtrOutput)
}

// Configure an external webhook based DNS01 challenge solver to manage
// DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) Webhook() IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Webhook {
		if v == nil {
			return nil
		}
		return v.Webhook
	}).(IssuerSpecAcmeSolversDns01WebhookPtrOutput)
}

// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage
// DNS01 challenge records.
type IssuerSpecAcmeSolversDns01AcmeDns struct {
	// A reference to a specific 'key' within a Secret resource.
	// In some instances, `key` is a required field.
	AccountSecretRef IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRef `pulumi:"accountSecretRef"`
	Host             string                                            `pulumi:"host"`
}

// IssuerSpecAcmeSolversDns01AcmeDnsInput is an input type that accepts IssuerSpecAcmeSolversDns01AcmeDnsArgs and IssuerSpecAcmeSolversDns01AcmeDnsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AcmeDnsInput` via:
//
//	IssuerSpecAcmeSolversDns01AcmeDnsArgs{...}
type IssuerSpecAcmeSolversDns01AcmeDnsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AcmeDnsOutput() IssuerSpecAcmeSolversDns01AcmeDnsOutput
	ToIssuerSpecAcmeSolversDns01AcmeDnsOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AcmeDnsOutput
}

// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage
// DNS01 challenge records.
type IssuerSpecAcmeSolversDns01AcmeDnsArgs struct {
	// A reference to a specific 'key' within a Secret resource.
	// In some instances, `key` is a required field.
	AccountSecretRef IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefInput `pulumi:"accountSecretRef"`
	Host             pulumi.StringInput                                     `pulumi:"host"`
}

func (IssuerSpecAcmeSolversDns01AcmeDnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AcmeDns)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01AcmeDnsArgs) ToIssuerSpecAcmeSolversDns01AcmeDnsOutput() IssuerSpecAcmeSolversDns01AcmeDnsOutput {
	return i.ToIssuerSpecAcmeSolversDns01AcmeDnsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AcmeDnsArgs) ToIssuerSpecAcmeSolversDns01AcmeDnsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmeDnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AcmeDnsOutput)
}

func (i IssuerSpecAcmeSolversDns01AcmeDnsArgs) ToIssuerSpecAcmeSolversDns01AcmeDnsPtrOutput() IssuerSpecAcmeSolversDns01AcmeDnsPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AcmeDnsPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AcmeDnsArgs) ToIssuerSpecAcmeSolversDns01AcmeDnsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmeDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AcmeDnsOutput).ToIssuerSpecAcmeSolversDns01AcmeDnsPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01AcmeDnsPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01AcmeDnsArgs, IssuerSpecAcmeSolversDns01AcmeDnsPtr and IssuerSpecAcmeSolversDns01AcmeDnsPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AcmeDnsPtrInput` via:
//
//	        IssuerSpecAcmeSolversDns01AcmeDnsArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversDns01AcmeDnsPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AcmeDnsPtrOutput() IssuerSpecAcmeSolversDns01AcmeDnsPtrOutput
	ToIssuerSpecAcmeSolversDns01AcmeDnsPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AcmeDnsPtrOutput
}

type issuerSpecAcmeSolversDns01AcmeDnsPtrType IssuerSpecAcmeSolversDns01AcmeDnsArgs

func IssuerSpecAcmeSolversDns01AcmeDnsPtr(v *IssuerSpecAcmeSolversDns01AcmeDnsArgs) IssuerSpecAcmeSolversDns01AcmeDnsPtrInput {
	return (*issuerSpecAcmeSolversDns01AcmeDnsPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01AcmeDnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AcmeDns)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01AcmeDnsPtrType) ToIssuerSpecAcmeSolversDns01AcmeDnsPtrOutput() IssuerSpecAcmeSolversDns01AcmeDnsPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AcmeDnsPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01AcmeDnsPtrType) ToIssuerSpecAcmeSolversDns01AcmeDnsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmeDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AcmeDnsPtrOutput)
}

// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage
// DNS01 challenge records.
type IssuerSpecAcmeSolversDns01AcmeDnsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AcmeDnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AcmeDns)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AcmeDnsOutput) ToIssuerSpecAcmeSolversDns01AcmeDnsOutput() IssuerSpecAcmeSolversDns01AcmeDnsOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AcmeDnsOutput) ToIssuerSpecAcmeSolversDns01AcmeDnsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmeDnsOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AcmeDnsOutput) ToIssuerSpecAcmeSolversDns01AcmeDnsPtrOutput() IssuerSpecAcmeSolversDns01AcmeDnsPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01AcmeDnsPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01AcmeDnsOutput) ToIssuerSpecAcmeSolversDns01AcmeDnsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmeDnsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversDns01AcmeDns) *IssuerSpecAcmeSolversDns01AcmeDns {
		return &v
	}).(IssuerSpecAcmeSolversDns01AcmeDnsPtrOutput)
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01AcmeDnsOutput) AccountSecretRef() IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AcmeDns) IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRef {
		return v.AccountSecretRef
	}).(IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutput)
}

func (o IssuerSpecAcmeSolversDns01AcmeDnsOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AcmeDns) string { return v.Host }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01AcmeDnsPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AcmeDnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AcmeDns)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AcmeDnsPtrOutput) ToIssuerSpecAcmeSolversDns01AcmeDnsPtrOutput() IssuerSpecAcmeSolversDns01AcmeDnsPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AcmeDnsPtrOutput) ToIssuerSpecAcmeSolversDns01AcmeDnsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmeDnsPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AcmeDnsPtrOutput) Elem() IssuerSpecAcmeSolversDns01AcmeDnsOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AcmeDns) IssuerSpecAcmeSolversDns01AcmeDns {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversDns01AcmeDns
		return ret
	}).(IssuerSpecAcmeSolversDns01AcmeDnsOutput)
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01AcmeDnsPtrOutput) AccountSecretRef() IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AcmeDns) *IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRef {
		if v == nil {
			return nil
		}
		return &v.AccountSecretRef
	}).(IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput)
}

func (o IssuerSpecAcmeSolversDns01AcmeDnsPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AcmeDns) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefArgs and IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefInput` via:
//
//	IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutput() IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutput
	ToIssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefArgs) ToIssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutput() IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefArgs) ToIssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefArgs) ToIssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefArgs) ToIssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutput).ToIssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefArgs, IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtr and IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrInput` via:
//
//	        IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrType IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefArgs

func IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtr(v *IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefArgs) IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrInput {
	return (*issuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutput) ToIssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutput() IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutput) ToIssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutput) ToIssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutput) ToIssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRef) *IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRef) IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRef
		return ret
	}).(IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the Akamai DNS zone management API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Akamai struct {
	// A reference to a specific 'key' within a Secret resource.
	// In some instances, `key` is a required field.
	AccessTokenSecretRef IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef `pulumi:"accessTokenSecretRef"`
	// A reference to a specific 'key' within a Secret resource.
	// In some instances, `key` is a required field.
	ClientSecretSecretRef IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef `pulumi:"clientSecretSecretRef"`
	// A reference to a specific 'key' within a Secret resource.
	// In some instances, `key` is a required field.
	ClientTokenSecretRef  IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef `pulumi:"clientTokenSecretRef"`
	ServiceConsumerDomain string                                               `pulumi:"serviceConsumerDomain"`
}

// IssuerSpecAcmeSolversDns01AkamaiInput is an input type that accepts IssuerSpecAcmeSolversDns01AkamaiArgs and IssuerSpecAcmeSolversDns01AkamaiOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AkamaiInput` via:
//
//	IssuerSpecAcmeSolversDns01AkamaiArgs{...}
type IssuerSpecAcmeSolversDns01AkamaiInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AkamaiOutput() IssuerSpecAcmeSolversDns01AkamaiOutput
	ToIssuerSpecAcmeSolversDns01AkamaiOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AkamaiOutput
}

// Use the Akamai DNS zone management API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01AkamaiArgs struct {
	// A reference to a specific 'key' within a Secret resource.
	// In some instances, `key` is a required field.
	AccessTokenSecretRef IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefInput `pulumi:"accessTokenSecretRef"`
	// A reference to a specific 'key' within a Secret resource.
	// In some instances, `key` is a required field.
	ClientSecretSecretRef IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefInput `pulumi:"clientSecretSecretRef"`
	// A reference to a specific 'key' within a Secret resource.
	// In some instances, `key` is a required field.
	ClientTokenSecretRef  IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefInput `pulumi:"clientTokenSecretRef"`
	ServiceConsumerDomain pulumi.StringInput                                        `pulumi:"serviceConsumerDomain"`
}

func (IssuerSpecAcmeSolversDns01AkamaiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Akamai)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01AkamaiArgs) ToIssuerSpecAcmeSolversDns01AkamaiOutput() IssuerSpecAcmeSolversDns01AkamaiOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AkamaiArgs) ToIssuerSpecAcmeSolversDns01AkamaiOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiOutput)
}

func (i IssuerSpecAcmeSolversDns01AkamaiArgs) ToIssuerSpecAcmeSolversDns01AkamaiPtrOutput() IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AkamaiArgs) ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiOutput).ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01AkamaiPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01AkamaiArgs, IssuerSpecAcmeSolversDns01AkamaiPtr and IssuerSpecAcmeSolversDns01AkamaiPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AkamaiPtrInput` via:
//
//	        IssuerSpecAcmeSolversDns01AkamaiArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversDns01AkamaiPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AkamaiPtrOutput() IssuerSpecAcmeSolversDns01AkamaiPtrOutput
	ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AkamaiPtrOutput
}

type issuerSpecAcmeSolversDns01AkamaiPtrType IssuerSpecAcmeSolversDns01AkamaiArgs

func IssuerSpecAcmeSolversDns01AkamaiPtr(v *IssuerSpecAcmeSolversDns01AkamaiArgs) IssuerSpecAcmeSolversDns01AkamaiPtrInput {
	return (*issuerSpecAcmeSolversDns01AkamaiPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01AkamaiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Akamai)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01AkamaiPtrType) ToIssuerSpecAcmeSolversDns01AkamaiPtrOutput() IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01AkamaiPtrType) ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiPtrOutput)
}

// Use the Akamai DNS zone management API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01AkamaiOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AkamaiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Akamai)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AkamaiOutput) ToIssuerSpecAcmeSolversDns01AkamaiOutput() IssuerSpecAcmeSolversDns01AkamaiOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiOutput) ToIssuerSpecAcmeSolversDns01AkamaiOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiOutput) ToIssuerSpecAcmeSolversDns01AkamaiPtrOutput() IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01AkamaiOutput) ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversDns01Akamai) *IssuerSpecAcmeSolversDns01Akamai {
		return &v
	}).(IssuerSpecAcmeSolversDns01AkamaiPtrOutput)
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01AkamaiOutput) AccessTokenSecretRef() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Akamai) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef {
		return v.AccessTokenSecretRef
	}).(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput)
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01AkamaiOutput) ClientSecretSecretRef() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Akamai) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef {
		return v.ClientSecretSecretRef
	}).(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput)
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01AkamaiOutput) ClientTokenSecretRef() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Akamai) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef {
		return v.ClientTokenSecretRef
	}).(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput)
}

func (o IssuerSpecAcmeSolversDns01AkamaiOutput) ServiceConsumerDomain() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Akamai) string { return v.ServiceConsumerDomain }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01AkamaiPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AkamaiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Akamai)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AkamaiPtrOutput) ToIssuerSpecAcmeSolversDns01AkamaiPtrOutput() IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiPtrOutput) ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiPtrOutput) Elem() IssuerSpecAcmeSolversDns01AkamaiOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Akamai) IssuerSpecAcmeSolversDns01Akamai {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversDns01Akamai
		return ret
	}).(IssuerSpecAcmeSolversDns01AkamaiOutput)
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01AkamaiPtrOutput) AccessTokenSecretRef() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Akamai) *IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef {
		if v == nil {
			return nil
		}
		return &v.AccessTokenSecretRef
	}).(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01AkamaiPtrOutput) ClientSecretSecretRef() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Akamai) *IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef {
		if v == nil {
			return nil
		}
		return &v.ClientSecretSecretRef
	}).(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01AkamaiPtrOutput) ClientTokenSecretRef() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Akamai) *IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef {
		if v == nil {
			return nil
		}
		return &v.ClientTokenSecretRef
	}).(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput)
}

func (o IssuerSpecAcmeSolversDns01AkamaiPtrOutput) ServiceConsumerDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Akamai) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceConsumerDomain
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs and IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefInput` via:
//
//	IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput
	ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput).ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs, IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtr and IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrInput` via:
//
//	        IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrType IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs

func IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtr(v *IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrInput {
	return (*issuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) *IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef
		return ret
	}).(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs and IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefInput` via:
//
//	IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput
	ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput).ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs, IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtr and IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrInput` via:
//
//	        IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrType IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs

func IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtr(v *IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrInput {
	return (*issuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) *IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef
		return ret
	}).(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs and IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefInput` via:
//
//	IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput
	ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput).ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs, IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtr and IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrInput` via:
//
//	        IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrType IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs

func IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtr(v *IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrInput {
	return (*issuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) *IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef
		return ret
	}).(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01AzureDns struct {
	// Auth: Azure Service Principal:
	// The ClientID of the Azure Service Principal used to authenticate with Azure DNS.
	// If set, ClientSecret and TenantID must also be set.
	ClientID *string `pulumi:"clientID"`
	// Auth: Azure Service Principal:
	// A reference to a Secret containing the password associated with the Service Principal.
	// If set, ClientID and TenantID must also be set.
	ClientSecretSecretRef *IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRef `pulumi:"clientSecretSecretRef"`
	// name of the Azure environment (default AzurePublicCloud)
	Environment *string `pulumi:"environment"`
	// name of the DNS zone that should be used
	HostedZoneName *string `pulumi:"hostedZoneName"`
	// Auth: Azure Workload Identity or Azure Managed Service Identity:
	// Settings to enable Azure Workload Identity or Azure Managed Service Identity
	// If set, ClientID, ClientSecret and TenantID must not be set.
	ManagedIdentity *IssuerSpecAcmeSolversDns01AzureDnsManagedIdentity `pulumi:"managedIdentity"`
	// resource group the DNS zone is located in
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// ID of the Azure subscription
	SubscriptionID string `pulumi:"subscriptionID"`
	// Auth: Azure Service Principal:
	// The TenantID of the Azure Service Principal used to authenticate with Azure DNS.
	// If set, ClientID and ClientSecret must also be set.
	TenantID *string `pulumi:"tenantID"`
}

// IssuerSpecAcmeSolversDns01AzureDnsInput is an input type that accepts IssuerSpecAcmeSolversDns01AzureDnsArgs and IssuerSpecAcmeSolversDns01AzureDnsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AzureDnsInput` via:
//
//	IssuerSpecAcmeSolversDns01AzureDnsArgs{...}
type IssuerSpecAcmeSolversDns01AzureDnsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AzureDnsOutput() IssuerSpecAcmeSolversDns01AzureDnsOutput
	ToIssuerSpecAcmeSolversDns01AzureDnsOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AzureDnsOutput
}

// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01AzureDnsArgs struct {
	// Auth: Azure Service Principal:
	// The ClientID of the Azure Service Principal used to authenticate with Azure DNS.
	// If set, ClientSecret and TenantID must also be set.
	ClientID pulumi.StringPtrInput `pulumi:"clientID"`
	// Auth: Azure Service Principal:
	// A reference to a Secret containing the password associated with the Service Principal.
	// If set, ClientID and TenantID must also be set.
	ClientSecretSecretRef IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrInput `pulumi:"clientSecretSecretRef"`
	// name of the Azure environment (default AzurePublicCloud)
	Environment pulumi.StringPtrInput `pulumi:"environment"`
	// name of the DNS zone that should be used
	HostedZoneName pulumi.StringPtrInput `pulumi:"hostedZoneName"`
	// Auth: Azure Workload Identity or Azure Managed Service Identity:
	// Settings to enable Azure Workload Identity or Azure Managed Service Identity
	// If set, ClientID, ClientSecret and TenantID must not be set.
	ManagedIdentity IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrInput `pulumi:"managedIdentity"`
	// resource group the DNS zone is located in
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// ID of the Azure subscription
	SubscriptionID pulumi.StringInput `pulumi:"subscriptionID"`
	// Auth: Azure Service Principal:
	// The TenantID of the Azure Service Principal used to authenticate with Azure DNS.
	// If set, ClientID and ClientSecret must also be set.
	TenantID pulumi.StringPtrInput `pulumi:"tenantID"`
}

func (IssuerSpecAcmeSolversDns01AzureDnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AzureDns)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01AzureDnsArgs) ToIssuerSpecAcmeSolversDns01AzureDnsOutput() IssuerSpecAcmeSolversDns01AzureDnsOutput {
	return i.ToIssuerSpecAcmeSolversDns01AzureDnsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AzureDnsArgs) ToIssuerSpecAcmeSolversDns01AzureDnsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzureDnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AzureDnsOutput)
}

func (i IssuerSpecAcmeSolversDns01AzureDnsArgs) ToIssuerSpecAcmeSolversDns01AzureDnsPtrOutput() IssuerSpecAcmeSolversDns01AzureDnsPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AzureDnsPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AzureDnsArgs) ToIssuerSpecAcmeSolversDns01AzureDnsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzureDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AzureDnsOutput).ToIssuerSpecAcmeSolversDns01AzureDnsPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01AzureDnsPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01AzureDnsArgs, IssuerSpecAcmeSolversDns01AzureDnsPtr and IssuerSpecAcmeSolversDns01AzureDnsPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AzureDnsPtrInput` via:
//
//	        IssuerSpecAcmeSolversDns01AzureDnsArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversDns01AzureDnsPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AzureDnsPtrOutput() IssuerSpecAcmeSolversDns01AzureDnsPtrOutput
	ToIssuerSpecAcmeSolversDns01AzureDnsPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AzureDnsPtrOutput
}

type issuerSpecAcmeSolversDns01AzureDnsPtrType IssuerSpecAcmeSolversDns01AzureDnsArgs

func IssuerSpecAcmeSolversDns01AzureDnsPtr(v *IssuerSpecAcmeSolversDns01AzureDnsArgs) IssuerSpecAcmeSolversDns01AzureDnsPtrInput {
	return (*issuerSpecAcmeSolversDns01AzureDnsPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01AzureDnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AzureDns)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01AzureDnsPtrType) ToIssuerSpecAcmeSolversDns01AzureDnsPtrOutput() IssuerSpecAcmeSolversDns01AzureDnsPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AzureDnsPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01AzureDnsPtrType) ToIssuerSpecAcmeSolversDns01AzureDnsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzureDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AzureDnsPtrOutput)
}

// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01AzureDnsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AzureDnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AzureDns)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AzureDnsOutput) ToIssuerSpecAcmeSolversDns01AzureDnsOutput() IssuerSpecAcmeSolversDns01AzureDnsOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzureDnsOutput) ToIssuerSpecAcmeSolversDns01AzureDnsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzureDnsOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzureDnsOutput) ToIssuerSpecAcmeSolversDns01AzureDnsPtrOutput() IssuerSpecAcmeSolversDns01AzureDnsPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01AzureDnsPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01AzureDnsOutput) ToIssuerSpecAcmeSolversDns01AzureDnsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzureDnsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversDns01AzureDns) *IssuerSpecAcmeSolversDns01AzureDns {
		return &v
	}).(IssuerSpecAcmeSolversDns01AzureDnsPtrOutput)
}

// Auth: Azure Service Principal:
// The ClientID of the Azure Service Principal used to authenticate with Azure DNS.
// If set, ClientSecret and TenantID must also be set.
func (o IssuerSpecAcmeSolversDns01AzureDnsOutput) ClientID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AzureDns) *string { return v.ClientID }).(pulumi.StringPtrOutput)
}

// Auth: Azure Service Principal:
// A reference to a Secret containing the password associated with the Service Principal.
// If set, ClientID and TenantID must also be set.
func (o IssuerSpecAcmeSolversDns01AzureDnsOutput) ClientSecretSecretRef() IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AzureDns) *IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRef {
		return v.ClientSecretSecretRef
	}).(IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput)
}

// name of the Azure environment (default AzurePublicCloud)
func (o IssuerSpecAcmeSolversDns01AzureDnsOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AzureDns) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

// name of the DNS zone that should be used
func (o IssuerSpecAcmeSolversDns01AzureDnsOutput) HostedZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AzureDns) *string { return v.HostedZoneName }).(pulumi.StringPtrOutput)
}

// Auth: Azure Workload Identity or Azure Managed Service Identity:
// Settings to enable Azure Workload Identity or Azure Managed Service Identity
// If set, ClientID, ClientSecret and TenantID must not be set.
func (o IssuerSpecAcmeSolversDns01AzureDnsOutput) ManagedIdentity() IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AzureDns) *IssuerSpecAcmeSolversDns01AzureDnsManagedIdentity {
		return v.ManagedIdentity
	}).(IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput)
}

// resource group the DNS zone is located in
func (o IssuerSpecAcmeSolversDns01AzureDnsOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AzureDns) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// ID of the Azure subscription
func (o IssuerSpecAcmeSolversDns01AzureDnsOutput) SubscriptionID() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AzureDns) string { return v.SubscriptionID }).(pulumi.StringOutput)
}

// Auth: Azure Service Principal:
// The TenantID of the Azure Service Principal used to authenticate with Azure DNS.
// If set, ClientID and ClientSecret must also be set.
func (o IssuerSpecAcmeSolversDns01AzureDnsOutput) TenantID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AzureDns) *string { return v.TenantID }).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversDns01AzureDnsPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AzureDnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AzureDns)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AzureDnsPtrOutput) ToIssuerSpecAcmeSolversDns01AzureDnsPtrOutput() IssuerSpecAcmeSolversDns01AzureDnsPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzureDnsPtrOutput) ToIssuerSpecAcmeSolversDns01AzureDnsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzureDnsPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzureDnsPtrOutput) Elem() IssuerSpecAcmeSolversDns01AzureDnsOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AzureDns) IssuerSpecAcmeSolversDns01AzureDns {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversDns01AzureDns
		return ret
	}).(IssuerSpecAcmeSolversDns01AzureDnsOutput)
}

// Auth: Azure Service Principal:
// The ClientID of the Azure Service Principal used to authenticate with Azure DNS.
// If set, ClientSecret and TenantID must also be set.
func (o IssuerSpecAcmeSolversDns01AzureDnsPtrOutput) ClientID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AzureDns) *string {
		if v == nil {
			return nil
		}
		return v.ClientID
	}).(pulumi.StringPtrOutput)
}

// Auth: Azure Service Principal:
// A reference to a Secret containing the password associated with the Service Principal.
// If set, ClientID and TenantID must also be set.
func (o IssuerSpecAcmeSolversDns01AzureDnsPtrOutput) ClientSecretSecretRef() IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AzureDns) *IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRef {
		if v == nil {
			return nil
		}
		return v.ClientSecretSecretRef
	}).(IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput)
}

// name of the Azure environment (default AzurePublicCloud)
func (o IssuerSpecAcmeSolversDns01AzureDnsPtrOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AzureDns) *string {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(pulumi.StringPtrOutput)
}

// name of the DNS zone that should be used
func (o IssuerSpecAcmeSolversDns01AzureDnsPtrOutput) HostedZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AzureDns) *string {
		if v == nil {
			return nil
		}
		return v.HostedZoneName
	}).(pulumi.StringPtrOutput)
}

// Auth: Azure Workload Identity or Azure Managed Service Identity:
// Settings to enable Azure Workload Identity or Azure Managed Service Identity
// If set, ClientID, ClientSecret and TenantID must not be set.
func (o IssuerSpecAcmeSolversDns01AzureDnsPtrOutput) ManagedIdentity() IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AzureDns) *IssuerSpecAcmeSolversDns01AzureDnsManagedIdentity {
		if v == nil {
			return nil
		}
		return v.ManagedIdentity
	}).(IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput)
}

// resource group the DNS zone is located in
func (o IssuerSpecAcmeSolversDns01AzureDnsPtrOutput) ResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AzureDns) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGroupName
	}).(pulumi.StringPtrOutput)
}

// ID of the Azure subscription
func (o IssuerSpecAcmeSolversDns01AzureDnsPtrOutput) SubscriptionID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AzureDns) *string {
		if v == nil {
			return nil
		}
		return &v.SubscriptionID
	}).(pulumi.StringPtrOutput)
}

// Auth: Azure Service Principal:
// The TenantID of the Azure Service Principal used to authenticate with Azure DNS.
// If set, ClientID and ClientSecret must also be set.
func (o IssuerSpecAcmeSolversDns01AzureDnsPtrOutput) TenantID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AzureDns) *string {
		if v == nil {
			return nil
		}
		return v.TenantID
	}).(pulumi.StringPtrOutput)
}

// Auth: Azure Service Principal:
// A reference to a Secret containing the password associated with the Service Principal.
// If set, ClientID and TenantID must also be set.
type IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefArgs and IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefInput` via:
//
//	IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutput() IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutput
	ToIssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutput
}

// Auth: Azure Service Principal:
// A reference to a Secret containing the password associated with the Service Principal.
// If set, ClientID and TenantID must also be set.
type IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutput() IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutput).ToIssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefArgs, IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtr and IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrInput` via:
//
//	        IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrType IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefArgs

func IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtr(v *IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefArgs) IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrInput {
	return (*issuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput)
}

// Auth: Azure Service Principal:
// A reference to a Secret containing the password associated with the Service Principal.
// If set, ClientID and TenantID must also be set.
type IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutput() IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRef) *IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRef) IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRef
		return ret
	}).(IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Auth: Azure Workload Identity or Azure Managed Service Identity:
// Settings to enable Azure Workload Identity or Azure Managed Service Identity
// If set, ClientID, ClientSecret and TenantID must not be set.
type IssuerSpecAcmeSolversDns01AzureDnsManagedIdentity struct {
	// client ID of the managed identity, can not be used at the same time as resourceID
	ClientID *string `pulumi:"clientID"`
	// resource ID of the managed identity, can not be used at the same time as clientID
	// Cannot be used for Azure Managed Service Identity
	ResourceID *string `pulumi:"resourceID"`
}

// IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityInput is an input type that accepts IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityArgs and IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityInput` via:
//
//	IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityArgs{...}
type IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutput() IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutput
	ToIssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutput
}

// Auth: Azure Workload Identity or Azure Managed Service Identity:
// Settings to enable Azure Workload Identity or Azure Managed Service Identity
// If set, ClientID, ClientSecret and TenantID must not be set.
type IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityArgs struct {
	// client ID of the managed identity, can not be used at the same time as resourceID
	ClientID pulumi.StringPtrInput `pulumi:"clientID"`
	// resource ID of the managed identity, can not be used at the same time as clientID
	// Cannot be used for Azure Managed Service Identity
	ResourceID pulumi.StringPtrInput `pulumi:"resourceID"`
}

func (IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AzureDnsManagedIdentity)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityArgs) ToIssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutput() IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutput {
	return i.ToIssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityArgs) ToIssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutput)
}

func (i IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityArgs) ToIssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput() IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityArgs) ToIssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutput).ToIssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityArgs, IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtr and IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrInput` via:
//
//	        IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput() IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput
	ToIssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput
}

type issuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrType IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityArgs

func IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtr(v *IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityArgs) IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrInput {
	return (*issuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AzureDnsManagedIdentity)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrType) ToIssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput() IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrType) ToIssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput)
}

// Auth: Azure Workload Identity or Azure Managed Service Identity:
// Settings to enable Azure Workload Identity or Azure Managed Service Identity
// If set, ClientID, ClientSecret and TenantID must not be set.
type IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AzureDnsManagedIdentity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutput) ToIssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutput() IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutput) ToIssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutput) ToIssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput() IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutput) ToIssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversDns01AzureDnsManagedIdentity) *IssuerSpecAcmeSolversDns01AzureDnsManagedIdentity {
		return &v
	}).(IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput)
}

// client ID of the managed identity, can not be used at the same time as resourceID
func (o IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutput) ClientID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AzureDnsManagedIdentity) *string { return v.ClientID }).(pulumi.StringPtrOutput)
}

// resource ID of the managed identity, can not be used at the same time as clientID
// Cannot be used for Azure Managed Service Identity
func (o IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutput) ResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AzureDnsManagedIdentity) *string { return v.ResourceID }).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AzureDnsManagedIdentity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput) ToIssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput() IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput) ToIssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput) Elem() IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AzureDnsManagedIdentity) IssuerSpecAcmeSolversDns01AzureDnsManagedIdentity {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversDns01AzureDnsManagedIdentity
		return ret
	}).(IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutput)
}

// client ID of the managed identity, can not be used at the same time as resourceID
func (o IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput) ClientID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AzureDnsManagedIdentity) *string {
		if v == nil {
			return nil
		}
		return v.ClientID
	}).(pulumi.StringPtrOutput)
}

// resource ID of the managed identity, can not be used at the same time as clientID
// Cannot be used for Azure Managed Service Identity
func (o IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput) ResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AzureDnsManagedIdentity) *string {
		if v == nil {
			return nil
		}
		return v.ResourceID
	}).(pulumi.StringPtrOutput)
}

// Use the Google Cloud DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01CloudDns struct {
	// HostedZoneName is an optional field that tells cert-manager in which
	// Cloud DNS zone the challenge record has to be created.
	// If left empty cert-manager will automatically choose a zone.
	HostedZoneName *string `pulumi:"hostedZoneName"`
	Project        string  `pulumi:"project"`
	// A reference to a specific 'key' within a Secret resource.
	// In some instances, `key` is a required field.
	ServiceAccountSecretRef *IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRef `pulumi:"serviceAccountSecretRef"`
}

// IssuerSpecAcmeSolversDns01CloudDnsInput is an input type that accepts IssuerSpecAcmeSolversDns01CloudDnsArgs and IssuerSpecAcmeSolversDns01CloudDnsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01CloudDnsInput` via:
//
//	IssuerSpecAcmeSolversDns01CloudDnsArgs{...}
type IssuerSpecAcmeSolversDns01CloudDnsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01CloudDnsOutput() IssuerSpecAcmeSolversDns01CloudDnsOutput
	ToIssuerSpecAcmeSolversDns01CloudDnsOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01CloudDnsOutput
}

// Use the Google Cloud DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01CloudDnsArgs struct {
	// HostedZoneName is an optional field that tells cert-manager in which
	// Cloud DNS zone the challenge record has to be created.
	// If left empty cert-manager will automatically choose a zone.
	HostedZoneName pulumi.StringPtrInput `pulumi:"hostedZoneName"`
	Project        pulumi.StringInput    `pulumi:"project"`
	// A reference to a specific 'key' within a Secret resource.
	// In some instances, `key` is a required field.
	ServiceAccountSecretRef IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrInput `pulumi:"serviceAccountSecretRef"`
}

func (IssuerSpecAcmeSolversDns01CloudDnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01CloudDns)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01CloudDnsArgs) ToIssuerSpecAcmeSolversDns01CloudDnsOutput() IssuerSpecAcmeSolversDns01CloudDnsOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudDnsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01CloudDnsArgs) ToIssuerSpecAcmeSolversDns01CloudDnsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudDnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudDnsOutput)
}

func (i IssuerSpecAcmeSolversDns01CloudDnsArgs) ToIssuerSpecAcmeSolversDns01CloudDnsPtrOutput() IssuerSpecAcmeSolversDns01CloudDnsPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudDnsPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01CloudDnsArgs) ToIssuerSpecAcmeSolversDns01CloudDnsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudDnsOutput).ToIssuerSpecAcmeSolversDns01CloudDnsPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01CloudDnsPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01CloudDnsArgs, IssuerSpecAcmeSolversDns01CloudDnsPtr and IssuerSpecAcmeSolversDns01CloudDnsPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01CloudDnsPtrInput` via:
//
//	        IssuerSpecAcmeSolversDns01CloudDnsArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversDns01CloudDnsPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01CloudDnsPtrOutput() IssuerSpecAcmeSolversDns01CloudDnsPtrOutput
	ToIssuerSpecAcmeSolversDns01CloudDnsPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01CloudDnsPtrOutput
}

type issuerSpecAcmeSolversDns01CloudDnsPtrType IssuerSpecAcmeSolversDns01CloudDnsArgs

func IssuerSpecAcmeSolversDns01CloudDnsPtr(v *IssuerSpecAcmeSolversDns01CloudDnsArgs) IssuerSpecAcmeSolversDns01CloudDnsPtrInput {
	return (*issuerSpecAcmeSolversDns01CloudDnsPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01CloudDnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01CloudDns)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01CloudDnsPtrType) ToIssuerSpecAcmeSolversDns01CloudDnsPtrOutput() IssuerSpecAcmeSolversDns01CloudDnsPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudDnsPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01CloudDnsPtrType) ToIssuerSpecAcmeSolversDns01CloudDnsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudDnsPtrOutput)
}

// Use the Google Cloud DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01CloudDnsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01CloudDnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01CloudDns)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01CloudDnsOutput) ToIssuerSpecAcmeSolversDns01CloudDnsOutput() IssuerSpecAcmeSolversDns01CloudDnsOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudDnsOutput) ToIssuerSpecAcmeSolversDns01CloudDnsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudDnsOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudDnsOutput) ToIssuerSpecAcmeSolversDns01CloudDnsPtrOutput() IssuerSpecAcmeSolversDns01CloudDnsPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01CloudDnsPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01CloudDnsOutput) ToIssuerSpecAcmeSolversDns01CloudDnsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudDnsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversDns01CloudDns) *IssuerSpecAcmeSolversDns01CloudDns {
		return &v
	}).(IssuerSpecAcmeSolversDns01CloudDnsPtrOutput)
}

// HostedZoneName is an optional field that tells cert-manager in which
// Cloud DNS zone the challenge record has to be created.
// If left empty cert-manager will automatically choose a zone.
func (o IssuerSpecAcmeSolversDns01CloudDnsOutput) HostedZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01CloudDns) *string { return v.HostedZoneName }).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversDns01CloudDnsOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01CloudDns) string { return v.Project }).(pulumi.StringOutput)
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01CloudDnsOutput) ServiceAccountSecretRef() IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01CloudDns) *IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRef {
		return v.ServiceAccountSecretRef
	}).(IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput)
}

type IssuerSpecAcmeSolversDns01CloudDnsPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01CloudDnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01CloudDns)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01CloudDnsPtrOutput) ToIssuerSpecAcmeSolversDns01CloudDnsPtrOutput() IssuerSpecAcmeSolversDns01CloudDnsPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudDnsPtrOutput) ToIssuerSpecAcmeSolversDns01CloudDnsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudDnsPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudDnsPtrOutput) Elem() IssuerSpecAcmeSolversDns01CloudDnsOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01CloudDns) IssuerSpecAcmeSolversDns01CloudDns {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversDns01CloudDns
		return ret
	}).(IssuerSpecAcmeSolversDns01CloudDnsOutput)
}

// HostedZoneName is an optional field that tells cert-manager in which
// Cloud DNS zone the challenge record has to be created.
// If left empty cert-manager will automatically choose a zone.
func (o IssuerSpecAcmeSolversDns01CloudDnsPtrOutput) HostedZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01CloudDns) *string {
		if v == nil {
			return nil
		}
		return v.HostedZoneName
	}).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversDns01CloudDnsPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01CloudDns) *string {
		if v == nil {
			return nil
		}
		return &v.Project
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01CloudDnsPtrOutput) ServiceAccountSecretRef() IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01CloudDns) *IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRef {
		if v == nil {
			return nil
		}
		return v.ServiceAccountSecretRef
	}).(IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefArgs and IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefInput` via:
//
//	IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutput() IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutput
	ToIssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutput() IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutput).ToIssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefArgs, IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtr and IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrInput` via:
//
//	        IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrType IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefArgs

func IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtr(v *IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefArgs) IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrInput {
	return (*issuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrType) ToIssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrType) ToIssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutput() IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRef) *IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRef) IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRef
		return ret
	}).(IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the Cloudflare API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Cloudflare struct {
	// API key to use to authenticate with Cloudflare.
	// Note: using an API token to authenticate is now the recommended method
	// as it allows greater control of permissions.
	ApiKeySecretRef *IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef `pulumi:"apiKeySecretRef"`
	// API token used to authenticate with Cloudflare.
	ApiTokenSecretRef *IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef `pulumi:"apiTokenSecretRef"`
	// Email of the account, only required when using API key based authentication.
	Email *string `pulumi:"email"`
}

// IssuerSpecAcmeSolversDns01CloudflareInput is an input type that accepts IssuerSpecAcmeSolversDns01CloudflareArgs and IssuerSpecAcmeSolversDns01CloudflareOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01CloudflareInput` via:
//
//	IssuerSpecAcmeSolversDns01CloudflareArgs{...}
type IssuerSpecAcmeSolversDns01CloudflareInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01CloudflareOutput() IssuerSpecAcmeSolversDns01CloudflareOutput
	ToIssuerSpecAcmeSolversDns01CloudflareOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01CloudflareOutput
}

// Use the Cloudflare API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01CloudflareArgs struct {
	// API key to use to authenticate with Cloudflare.
	// Note: using an API token to authenticate is now the recommended method
	// as it allows greater control of permissions.
	ApiKeySecretRef IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrInput `pulumi:"apiKeySecretRef"`
	// API token used to authenticate with Cloudflare.
	ApiTokenSecretRef IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrInput `pulumi:"apiTokenSecretRef"`
	// Email of the account, only required when using API key based authentication.
	Email pulumi.StringPtrInput `pulumi:"email"`
}

func (IssuerSpecAcmeSolversDns01CloudflareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Cloudflare)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01CloudflareArgs) ToIssuerSpecAcmeSolversDns01CloudflareOutput() IssuerSpecAcmeSolversDns01CloudflareOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflareOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01CloudflareArgs) ToIssuerSpecAcmeSolversDns01CloudflareOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflareOutput)
}

func (i IssuerSpecAcmeSolversDns01CloudflareArgs) ToIssuerSpecAcmeSolversDns01CloudflarePtrOutput() IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01CloudflareArgs) ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflareOutput).ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01CloudflarePtrInput is an input type that accepts IssuerSpecAcmeSolversDns01CloudflareArgs, IssuerSpecAcmeSolversDns01CloudflarePtr and IssuerSpecAcmeSolversDns01CloudflarePtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01CloudflarePtrInput` via:
//
//	        IssuerSpecAcmeSolversDns01CloudflareArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversDns01CloudflarePtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01CloudflarePtrOutput() IssuerSpecAcmeSolversDns01CloudflarePtrOutput
	ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01CloudflarePtrOutput
}

type issuerSpecAcmeSolversDns01CloudflarePtrType IssuerSpecAcmeSolversDns01CloudflareArgs

func IssuerSpecAcmeSolversDns01CloudflarePtr(v *IssuerSpecAcmeSolversDns01CloudflareArgs) IssuerSpecAcmeSolversDns01CloudflarePtrInput {
	return (*issuerSpecAcmeSolversDns01CloudflarePtrType)(v)
}

func (*issuerSpecAcmeSolversDns01CloudflarePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Cloudflare)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01CloudflarePtrType) ToIssuerSpecAcmeSolversDns01CloudflarePtrOutput() IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01CloudflarePtrType) ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflarePtrOutput)
}

// Use the Cloudflare API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01CloudflareOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01CloudflareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Cloudflare)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01CloudflareOutput) ToIssuerSpecAcmeSolversDns01CloudflareOutput() IssuerSpecAcmeSolversDns01CloudflareOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareOutput) ToIssuerSpecAcmeSolversDns01CloudflareOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareOutput) ToIssuerSpecAcmeSolversDns01CloudflarePtrOutput() IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01CloudflareOutput) ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversDns01Cloudflare) *IssuerSpecAcmeSolversDns01Cloudflare {
		return &v
	}).(IssuerSpecAcmeSolversDns01CloudflarePtrOutput)
}

// API key to use to authenticate with Cloudflare.
// Note: using an API token to authenticate is now the recommended method
// as it allows greater control of permissions.
func (o IssuerSpecAcmeSolversDns01CloudflareOutput) ApiKeySecretRef() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Cloudflare) *IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef {
		return v.ApiKeySecretRef
	}).(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput)
}

// API token used to authenticate with Cloudflare.
func (o IssuerSpecAcmeSolversDns01CloudflareOutput) ApiTokenSecretRef() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Cloudflare) *IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef {
		return v.ApiTokenSecretRef
	}).(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput)
}

// Email of the account, only required when using API key based authentication.
func (o IssuerSpecAcmeSolversDns01CloudflareOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Cloudflare) *string { return v.Email }).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversDns01CloudflarePtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01CloudflarePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Cloudflare)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01CloudflarePtrOutput) ToIssuerSpecAcmeSolversDns01CloudflarePtrOutput() IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflarePtrOutput) ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflarePtrOutput) Elem() IssuerSpecAcmeSolversDns01CloudflareOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Cloudflare) IssuerSpecAcmeSolversDns01Cloudflare {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversDns01Cloudflare
		return ret
	}).(IssuerSpecAcmeSolversDns01CloudflareOutput)
}

// API key to use to authenticate with Cloudflare.
// Note: using an API token to authenticate is now the recommended method
// as it allows greater control of permissions.
func (o IssuerSpecAcmeSolversDns01CloudflarePtrOutput) ApiKeySecretRef() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Cloudflare) *IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef {
		if v == nil {
			return nil
		}
		return v.ApiKeySecretRef
	}).(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput)
}

// API token used to authenticate with Cloudflare.
func (o IssuerSpecAcmeSolversDns01CloudflarePtrOutput) ApiTokenSecretRef() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Cloudflare) *IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef {
		if v == nil {
			return nil
		}
		return v.ApiTokenSecretRef
	}).(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput)
}

// Email of the account, only required when using API key based authentication.
func (o IssuerSpecAcmeSolversDns01CloudflarePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Cloudflare) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// API key to use to authenticate with Cloudflare.
// Note: using an API token to authenticate is now the recommended method
// as it allows greater control of permissions.
type IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs and IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefInput` via:
//
//	IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs{...}
type IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput
	ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput
}

// API key to use to authenticate with Cloudflare.
// Note: using an API token to authenticate is now the recommended method
// as it allows greater control of permissions.
type IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput).ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs, IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtr and IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrInput` via:
//
//	        IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrType IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs

func IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtr(v *IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrInput {
	return (*issuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrType) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrType) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput)
}

// API key to use to authenticate with Cloudflare.
// Note: using an API token to authenticate is now the recommended method
// as it allows greater control of permissions.
type IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) *IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef
		return ret
	}).(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// API token used to authenticate with Cloudflare.
type IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs and IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefInput` via:
//
//	IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput
	ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput
}

// API token used to authenticate with Cloudflare.
type IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput).ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs, IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtr and IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrInput` via:
//
//	        IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrType IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs

func IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtr(v *IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrInput {
	return (*issuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrType) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrType) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput)
}

// API token used to authenticate with Cloudflare.
type IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) *IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef
		return ret
	}).(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the DigitalOcean DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Digitalocean struct {
	// A reference to a specific 'key' within a Secret resource.
	// In some instances, `key` is a required field.
	TokenSecretRef IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef `pulumi:"tokenSecretRef"`
}

// IssuerSpecAcmeSolversDns01DigitaloceanInput is an input type that accepts IssuerSpecAcmeSolversDns01DigitaloceanArgs and IssuerSpecAcmeSolversDns01DigitaloceanOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01DigitaloceanInput` via:
//
//	IssuerSpecAcmeSolversDns01DigitaloceanArgs{...}
type IssuerSpecAcmeSolversDns01DigitaloceanInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01DigitaloceanOutput() IssuerSpecAcmeSolversDns01DigitaloceanOutput
	ToIssuerSpecAcmeSolversDns01DigitaloceanOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01DigitaloceanOutput
}

// Use the DigitalOcean DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01DigitaloceanArgs struct {
	// A reference to a specific 'key' within a Secret resource.
	// In some instances, `key` is a required field.
	TokenSecretRef IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefInput `pulumi:"tokenSecretRef"`
}

func (IssuerSpecAcmeSolversDns01DigitaloceanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Digitalocean)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01DigitaloceanArgs) ToIssuerSpecAcmeSolversDns01DigitaloceanOutput() IssuerSpecAcmeSolversDns01DigitaloceanOutput {
	return i.ToIssuerSpecAcmeSolversDns01DigitaloceanOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01DigitaloceanArgs) ToIssuerSpecAcmeSolversDns01DigitaloceanOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01DigitaloceanOutput)
}

func (i IssuerSpecAcmeSolversDns01DigitaloceanArgs) ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01DigitaloceanArgs) ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01DigitaloceanOutput).ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01DigitaloceanPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01DigitaloceanArgs, IssuerSpecAcmeSolversDns01DigitaloceanPtr and IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01DigitaloceanPtrInput` via:
//
//	        IssuerSpecAcmeSolversDns01DigitaloceanArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversDns01DigitaloceanPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput
	ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput
}

type issuerSpecAcmeSolversDns01DigitaloceanPtrType IssuerSpecAcmeSolversDns01DigitaloceanArgs

func IssuerSpecAcmeSolversDns01DigitaloceanPtr(v *IssuerSpecAcmeSolversDns01DigitaloceanArgs) IssuerSpecAcmeSolversDns01DigitaloceanPtrInput {
	return (*issuerSpecAcmeSolversDns01DigitaloceanPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01DigitaloceanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Digitalocean)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01DigitaloceanPtrType) ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01DigitaloceanPtrType) ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput)
}

// Use the DigitalOcean DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01DigitaloceanOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01DigitaloceanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Digitalocean)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanOutput() IssuerSpecAcmeSolversDns01DigitaloceanOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversDns01Digitalocean) *IssuerSpecAcmeSolversDns01Digitalocean {
		return &v
	}).(IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput)
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01DigitaloceanOutput) TokenSecretRef() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Digitalocean) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef {
		return v.TokenSecretRef
	}).(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput)
}

type IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Digitalocean)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput) Elem() IssuerSpecAcmeSolversDns01DigitaloceanOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Digitalocean) IssuerSpecAcmeSolversDns01Digitalocean {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversDns01Digitalocean
		return ret
	}).(IssuerSpecAcmeSolversDns01DigitaloceanOutput)
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput) TokenSecretRef() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Digitalocean) *IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef {
		if v == nil {
			return nil
		}
		return &v.TokenSecretRef
	}).(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs and IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefInput` via:
//
//	IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput
	ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput).ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs, IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtr and IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrInput` via:
//
//	        IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrType IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs

func IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtr(v *IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrInput {
	return (*issuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrType) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrType) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) *IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef
		return ret
	}).(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
// to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Rfc2136 struct {
	// The IP address or hostname of an authoritative DNS server supporting
	// RFC2136 in the form host:port. If the host is an IPv6 address it must be
	// enclosed in square brackets (e.g [2001:db8::1]) ; port is optional.
	// This field is required.
	Nameserver string `pulumi:"nameserver"`
	// The TSIG Algorithm configured in the DNS supporting RFC2136. Used only
	// when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined.
	// Supported values are (case-insensitive): ``HMACMD5`` (default),
	// ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.
	TsigAlgorithm *string `pulumi:"tsigAlgorithm"`
	// The TSIG Key name configured in the DNS.
	// If ``tsigSecretSecretRef`` is defined, this field is required.
	TsigKeyName *string `pulumi:"tsigKeyName"`
	// The name of the secret containing the TSIG value.
	// If ``tsigKeyName`` is defined, this field is required.
	TsigSecretSecretRef *IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef `pulumi:"tsigSecretSecretRef"`
}

// IssuerSpecAcmeSolversDns01Rfc2136Input is an input type that accepts IssuerSpecAcmeSolversDns01Rfc2136Args and IssuerSpecAcmeSolversDns01Rfc2136Output values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Rfc2136Input` via:
//
//	IssuerSpecAcmeSolversDns01Rfc2136Args{...}
type IssuerSpecAcmeSolversDns01Rfc2136Input interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Rfc2136Output() IssuerSpecAcmeSolversDns01Rfc2136Output
	ToIssuerSpecAcmeSolversDns01Rfc2136OutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Rfc2136Output
}

// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
// to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Rfc2136Args struct {
	// The IP address or hostname of an authoritative DNS server supporting
	// RFC2136 in the form host:port. If the host is an IPv6 address it must be
	// enclosed in square brackets (e.g [2001:db8::1]) ; port is optional.
	// This field is required.
	Nameserver pulumi.StringInput `pulumi:"nameserver"`
	// The TSIG Algorithm configured in the DNS supporting RFC2136. Used only
	// when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined.
	// Supported values are (case-insensitive): ``HMACMD5`` (default),
	// ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.
	TsigAlgorithm pulumi.StringPtrInput `pulumi:"tsigAlgorithm"`
	// The TSIG Key name configured in the DNS.
	// If ``tsigSecretSecretRef`` is defined, this field is required.
	TsigKeyName pulumi.StringPtrInput `pulumi:"tsigKeyName"`
	// The name of the secret containing the TSIG value.
	// If ``tsigKeyName`` is defined, this field is required.
	TsigSecretSecretRef IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrInput `pulumi:"tsigSecretSecretRef"`
}

func (IssuerSpecAcmeSolversDns01Rfc2136Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Rfc2136)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01Rfc2136Args) ToIssuerSpecAcmeSolversDns01Rfc2136Output() IssuerSpecAcmeSolversDns01Rfc2136Output {
	return i.ToIssuerSpecAcmeSolversDns01Rfc2136OutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Rfc2136Args) ToIssuerSpecAcmeSolversDns01Rfc2136OutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136Output {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Rfc2136Output)
}

func (i IssuerSpecAcmeSolversDns01Rfc2136Args) ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutput() IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Rfc2136Args) ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Rfc2136Output).ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01Rfc2136PtrInput is an input type that accepts IssuerSpecAcmeSolversDns01Rfc2136Args, IssuerSpecAcmeSolversDns01Rfc2136Ptr and IssuerSpecAcmeSolversDns01Rfc2136PtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Rfc2136PtrInput` via:
//
//	        IssuerSpecAcmeSolversDns01Rfc2136Args{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversDns01Rfc2136PtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutput() IssuerSpecAcmeSolversDns01Rfc2136PtrOutput
	ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Rfc2136PtrOutput
}

type issuerSpecAcmeSolversDns01Rfc2136PtrType IssuerSpecAcmeSolversDns01Rfc2136Args

func IssuerSpecAcmeSolversDns01Rfc2136Ptr(v *IssuerSpecAcmeSolversDns01Rfc2136Args) IssuerSpecAcmeSolversDns01Rfc2136PtrInput {
	return (*issuerSpecAcmeSolversDns01Rfc2136PtrType)(v)
}

func (*issuerSpecAcmeSolversDns01Rfc2136PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Rfc2136)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01Rfc2136PtrType) ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutput() IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01Rfc2136PtrType) ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Rfc2136PtrOutput)
}

// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
// to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Rfc2136Output struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Rfc2136Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Rfc2136)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Rfc2136Output) ToIssuerSpecAcmeSolversDns01Rfc2136Output() IssuerSpecAcmeSolversDns01Rfc2136Output {
	return o
}

func (o IssuerSpecAcmeSolversDns01Rfc2136Output) ToIssuerSpecAcmeSolversDns01Rfc2136OutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136Output {
	return o
}

func (o IssuerSpecAcmeSolversDns01Rfc2136Output) ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutput() IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01Rfc2136Output) ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversDns01Rfc2136) *IssuerSpecAcmeSolversDns01Rfc2136 {
		return &v
	}).(IssuerSpecAcmeSolversDns01Rfc2136PtrOutput)
}

// The IP address or hostname of an authoritative DNS server supporting
// RFC2136 in the form host:port. If the host is an IPv6 address it must be
// enclosed in square brackets (e.g [2001:db8::1]) ; port is optional.
// This field is required.
func (o IssuerSpecAcmeSolversDns01Rfc2136Output) Nameserver() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Rfc2136) string { return v.Nameserver }).(pulumi.StringOutput)
}

// The TSIG Algorithm configured in the DNS supporting RFC2136. Used only
// when “tsigSecretSecretRef“ and “tsigKeyName“ are defined.
// Supported values are (case-insensitive): “HMACMD5“ (default),
// “HMACSHA1“, “HMACSHA256“ or “HMACSHA512“.
func (o IssuerSpecAcmeSolversDns01Rfc2136Output) TsigAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Rfc2136) *string { return v.TsigAlgorithm }).(pulumi.StringPtrOutput)
}

// The TSIG Key name configured in the DNS.
// If “tsigSecretSecretRef“ is defined, this field is required.
func (o IssuerSpecAcmeSolversDns01Rfc2136Output) TsigKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Rfc2136) *string { return v.TsigKeyName }).(pulumi.StringPtrOutput)
}

// The name of the secret containing the TSIG value.
// If “tsigKeyName“ is defined, this field is required.
func (o IssuerSpecAcmeSolversDns01Rfc2136Output) TsigSecretSecretRef() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Rfc2136) *IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef {
		return v.TsigSecretSecretRef
	}).(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput)
}

type IssuerSpecAcmeSolversDns01Rfc2136PtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Rfc2136PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Rfc2136)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Rfc2136PtrOutput) ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutput() IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Rfc2136PtrOutput) ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Rfc2136PtrOutput) Elem() IssuerSpecAcmeSolversDns01Rfc2136Output {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Rfc2136) IssuerSpecAcmeSolversDns01Rfc2136 {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversDns01Rfc2136
		return ret
	}).(IssuerSpecAcmeSolversDns01Rfc2136Output)
}

// The IP address or hostname of an authoritative DNS server supporting
// RFC2136 in the form host:port. If the host is an IPv6 address it must be
// enclosed in square brackets (e.g [2001:db8::1]) ; port is optional.
// This field is required.
func (o IssuerSpecAcmeSolversDns01Rfc2136PtrOutput) Nameserver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Rfc2136) *string {
		if v == nil {
			return nil
		}
		return &v.Nameserver
	}).(pulumi.StringPtrOutput)
}

// The TSIG Algorithm configured in the DNS supporting RFC2136. Used only
// when “tsigSecretSecretRef“ and “tsigKeyName“ are defined.
// Supported values are (case-insensitive): “HMACMD5“ (default),
// “HMACSHA1“, “HMACSHA256“ or “HMACSHA512“.
func (o IssuerSpecAcmeSolversDns01Rfc2136PtrOutput) TsigAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Rfc2136) *string {
		if v == nil {
			return nil
		}
		return v.TsigAlgorithm
	}).(pulumi.StringPtrOutput)
}

// The TSIG Key name configured in the DNS.
// If “tsigSecretSecretRef“ is defined, this field is required.
func (o IssuerSpecAcmeSolversDns01Rfc2136PtrOutput) TsigKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Rfc2136) *string {
		if v == nil {
			return nil
		}
		return v.TsigKeyName
	}).(pulumi.StringPtrOutput)
}

// The name of the secret containing the TSIG value.
// If “tsigKeyName“ is defined, this field is required.
func (o IssuerSpecAcmeSolversDns01Rfc2136PtrOutput) TsigSecretSecretRef() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Rfc2136) *IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef {
		if v == nil {
			return nil
		}
		return v.TsigSecretSecretRef
	}).(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput)
}

// The name of the secret containing the TSIG value.
// If “tsigKeyName“ is defined, this field is required.
type IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs and IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefInput` via:
//
//	IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput
	ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput
}

// The name of the secret containing the TSIG value.
// If “tsigKeyName“ is defined, this field is required.
type IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput).ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs, IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtr and IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrInput` via:
//
//	        IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrType IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs

func IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtr(v *IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrInput {
	return (*issuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrType) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrType) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput)
}

// The name of the secret containing the TSIG value.
// If “tsigKeyName“ is defined, this field is required.
type IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) *IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef
		return ret
	}).(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the AWS Route53 API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Route53 struct {
	// The AccessKeyID is used for authentication.
	// Cannot be set when SecretAccessKeyID is set.
	// If neither the Access Key nor Key ID are set, we fall-back to using env
	// vars, shared credentials file or AWS Instance metadata,
	// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	AccessKeyID *string `pulumi:"accessKeyID"`
	// The SecretAccessKey is used for authentication. If set, pull the AWS
	// access key ID from a key within a Kubernetes Secret.
	// Cannot be set when AccessKeyID is set.
	// If neither the Access Key nor Key ID are set, we fall-back to using env
	// vars, shared credentials file or AWS Instance metadata,
	// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	AccessKeyIDSecretRef *IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRef `pulumi:"accessKeyIDSecretRef"`
	// Auth configures how cert-manager authenticates.
	Auth *IssuerSpecAcmeSolversDns01Route53Auth `pulumi:"auth"`
	// If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
	HostedZoneID *string `pulumi:"hostedZoneID"`
	// Always set the region when using AccessKeyID and SecretAccessKey
	Region string `pulumi:"region"`
	// Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey
	// or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
	Role *string `pulumi:"role"`
	// The SecretAccessKey is used for authentication.
	// If neither the Access Key nor Key ID are set, we fall-back to using env
	// vars, shared credentials file or AWS Instance metadata,
	// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	SecretAccessKeySecretRef *IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef `pulumi:"secretAccessKeySecretRef"`
}

// IssuerSpecAcmeSolversDns01Route53Input is an input type that accepts IssuerSpecAcmeSolversDns01Route53Args and IssuerSpecAcmeSolversDns01Route53Output values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Route53Input` via:
//
//	IssuerSpecAcmeSolversDns01Route53Args{...}
type IssuerSpecAcmeSolversDns01Route53Input interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Route53Output() IssuerSpecAcmeSolversDns01Route53Output
	ToIssuerSpecAcmeSolversDns01Route53OutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Route53Output
}

// Use the AWS Route53 API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Route53Args struct {
	// The AccessKeyID is used for authentication.
	// Cannot be set when SecretAccessKeyID is set.
	// If neither the Access Key nor Key ID are set, we fall-back to using env
	// vars, shared credentials file or AWS Instance metadata,
	// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	AccessKeyID pulumi.StringPtrInput `pulumi:"accessKeyID"`
	// The SecretAccessKey is used for authentication. If set, pull the AWS
	// access key ID from a key within a Kubernetes Secret.
	// Cannot be set when AccessKeyID is set.
	// If neither the Access Key nor Key ID are set, we fall-back to using env
	// vars, shared credentials file or AWS Instance metadata,
	// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	AccessKeyIDSecretRef IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrInput `pulumi:"accessKeyIDSecretRef"`
	// Auth configures how cert-manager authenticates.
	Auth IssuerSpecAcmeSolversDns01Route53AuthPtrInput `pulumi:"auth"`
	// If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
	HostedZoneID pulumi.StringPtrInput `pulumi:"hostedZoneID"`
	// Always set the region when using AccessKeyID and SecretAccessKey
	Region pulumi.StringInput `pulumi:"region"`
	// Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey
	// or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
	Role pulumi.StringPtrInput `pulumi:"role"`
	// The SecretAccessKey is used for authentication.
	// If neither the Access Key nor Key ID are set, we fall-back to using env
	// vars, shared credentials file or AWS Instance metadata,
	// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	SecretAccessKeySecretRef IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrInput `pulumi:"secretAccessKeySecretRef"`
}

func (IssuerSpecAcmeSolversDns01Route53Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01Route53Args) ToIssuerSpecAcmeSolversDns01Route53Output() IssuerSpecAcmeSolversDns01Route53Output {
	return i.ToIssuerSpecAcmeSolversDns01Route53OutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Route53Args) ToIssuerSpecAcmeSolversDns01Route53OutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53Output {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53Output)
}

func (i IssuerSpecAcmeSolversDns01Route53Args) ToIssuerSpecAcmeSolversDns01Route53PtrOutput() IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Route53Args) ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53Output).ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01Route53PtrInput is an input type that accepts IssuerSpecAcmeSolversDns01Route53Args, IssuerSpecAcmeSolversDns01Route53Ptr and IssuerSpecAcmeSolversDns01Route53PtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Route53PtrInput` via:
//
//	        IssuerSpecAcmeSolversDns01Route53Args{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversDns01Route53PtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Route53PtrOutput() IssuerSpecAcmeSolversDns01Route53PtrOutput
	ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Route53PtrOutput
}

type issuerSpecAcmeSolversDns01Route53PtrType IssuerSpecAcmeSolversDns01Route53Args

func IssuerSpecAcmeSolversDns01Route53Ptr(v *IssuerSpecAcmeSolversDns01Route53Args) IssuerSpecAcmeSolversDns01Route53PtrInput {
	return (*issuerSpecAcmeSolversDns01Route53PtrType)(v)
}

func (*issuerSpecAcmeSolversDns01Route53PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Route53)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01Route53PtrType) ToIssuerSpecAcmeSolversDns01Route53PtrOutput() IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01Route53PtrType) ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53PtrOutput)
}

// Use the AWS Route53 API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Route53Output struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Route53Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Route53Output) ToIssuerSpecAcmeSolversDns01Route53Output() IssuerSpecAcmeSolversDns01Route53Output {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53Output) ToIssuerSpecAcmeSolversDns01Route53OutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53Output {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53Output) ToIssuerSpecAcmeSolversDns01Route53PtrOutput() IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01Route53Output) ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversDns01Route53) *IssuerSpecAcmeSolversDns01Route53 {
		return &v
	}).(IssuerSpecAcmeSolversDns01Route53PtrOutput)
}

// The AccessKeyID is used for authentication.
// Cannot be set when SecretAccessKeyID is set.
// If neither the Access Key nor Key ID are set, we fall-back to using env
// vars, shared credentials file or AWS Instance metadata,
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
func (o IssuerSpecAcmeSolversDns01Route53Output) AccessKeyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Route53) *string { return v.AccessKeyID }).(pulumi.StringPtrOutput)
}

// The SecretAccessKey is used for authentication. If set, pull the AWS
// access key ID from a key within a Kubernetes Secret.
// Cannot be set when AccessKeyID is set.
// If neither the Access Key nor Key ID are set, we fall-back to using env
// vars, shared credentials file or AWS Instance metadata,
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
func (o IssuerSpecAcmeSolversDns01Route53Output) AccessKeyIDSecretRef() IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Route53) *IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRef {
		return v.AccessKeyIDSecretRef
	}).(IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput)
}

// Auth configures how cert-manager authenticates.
func (o IssuerSpecAcmeSolversDns01Route53Output) Auth() IssuerSpecAcmeSolversDns01Route53AuthPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Route53) *IssuerSpecAcmeSolversDns01Route53Auth { return v.Auth }).(IssuerSpecAcmeSolversDns01Route53AuthPtrOutput)
}

// If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
func (o IssuerSpecAcmeSolversDns01Route53Output) HostedZoneID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Route53) *string { return v.HostedZoneID }).(pulumi.StringPtrOutput)
}

// Always set the region when using AccessKeyID and SecretAccessKey
func (o IssuerSpecAcmeSolversDns01Route53Output) Region() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Route53) string { return v.Region }).(pulumi.StringOutput)
}

// Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey
// or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
func (o IssuerSpecAcmeSolversDns01Route53Output) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Route53) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// The SecretAccessKey is used for authentication.
// If neither the Access Key nor Key ID are set, we fall-back to using env
// vars, shared credentials file or AWS Instance metadata,
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
func (o IssuerSpecAcmeSolversDns01Route53Output) SecretAccessKeySecretRef() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Route53) *IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef {
		return v.SecretAccessKeySecretRef
	}).(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput)
}

type IssuerSpecAcmeSolversDns01Route53PtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Route53PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Route53)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Route53PtrOutput) ToIssuerSpecAcmeSolversDns01Route53PtrOutput() IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53PtrOutput) ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53PtrOutput) Elem() IssuerSpecAcmeSolversDns01Route53Output {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53) IssuerSpecAcmeSolversDns01Route53 {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversDns01Route53
		return ret
	}).(IssuerSpecAcmeSolversDns01Route53Output)
}

// The AccessKeyID is used for authentication.
// Cannot be set when SecretAccessKeyID is set.
// If neither the Access Key nor Key ID are set, we fall-back to using env
// vars, shared credentials file or AWS Instance metadata,
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
func (o IssuerSpecAcmeSolversDns01Route53PtrOutput) AccessKeyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53) *string {
		if v == nil {
			return nil
		}
		return v.AccessKeyID
	}).(pulumi.StringPtrOutput)
}

// The SecretAccessKey is used for authentication. If set, pull the AWS
// access key ID from a key within a Kubernetes Secret.
// Cannot be set when AccessKeyID is set.
// If neither the Access Key nor Key ID are set, we fall-back to using env
// vars, shared credentials file or AWS Instance metadata,
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
func (o IssuerSpecAcmeSolversDns01Route53PtrOutput) AccessKeyIDSecretRef() IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53) *IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRef {
		if v == nil {
			return nil
		}
		return v.AccessKeyIDSecretRef
	}).(IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput)
}

// Auth configures how cert-manager authenticates.
func (o IssuerSpecAcmeSolversDns01Route53PtrOutput) Auth() IssuerSpecAcmeSolversDns01Route53AuthPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53) *IssuerSpecAcmeSolversDns01Route53Auth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(IssuerSpecAcmeSolversDns01Route53AuthPtrOutput)
}

// If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
func (o IssuerSpecAcmeSolversDns01Route53PtrOutput) HostedZoneID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53) *string {
		if v == nil {
			return nil
		}
		return v.HostedZoneID
	}).(pulumi.StringPtrOutput)
}

// Always set the region when using AccessKeyID and SecretAccessKey
func (o IssuerSpecAcmeSolversDns01Route53PtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

// Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey
// or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
func (o IssuerSpecAcmeSolversDns01Route53PtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

// The SecretAccessKey is used for authentication.
// If neither the Access Key nor Key ID are set, we fall-back to using env
// vars, shared credentials file or AWS Instance metadata,
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
func (o IssuerSpecAcmeSolversDns01Route53PtrOutput) SecretAccessKeySecretRef() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53) *IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef {
		if v == nil {
			return nil
		}
		return v.SecretAccessKeySecretRef
	}).(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication. If set, pull the AWS
// access key ID from a key within a Kubernetes Secret.
// Cannot be set when AccessKeyID is set.
// If neither the Access Key nor Key ID are set, we fall-back to using env
// vars, shared credentials file or AWS Instance metadata,
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefArgs and IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefInput` via:
//
//	IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefArgs{...}
type IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutput() IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutput
	ToIssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutput
}

// The SecretAccessKey is used for authentication. If set, pull the AWS
// access key ID from a key within a Kubernetes Secret.
// Cannot be set when AccessKeyID is set.
// If neither the Access Key nor Key ID are set, we fall-back to using env
// vars, shared credentials file or AWS Instance metadata,
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefArgs) ToIssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutput() IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefArgs) ToIssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefArgs) ToIssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput() IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefArgs) ToIssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutput).ToIssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefArgs, IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtr and IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrInput` via:
//
//	        IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput() IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrType IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefArgs

func IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtr(v *IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefArgs) IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrInput {
	return (*issuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrType) ToIssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput() IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrType) ToIssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication. If set, pull the AWS
// access key ID from a key within a Kubernetes Secret.
// Cannot be set when AccessKeyID is set.
// If neither the Access Key nor Key ID are set, we fall-back to using env
// vars, shared credentials file or AWS Instance metadata,
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutput) ToIssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutput() IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutput) ToIssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutput) ToIssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput() IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutput) ToIssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRef) *IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput() IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRef) IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRef
		return ret
	}).(IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Auth configures how cert-manager authenticates.
type IssuerSpecAcmeSolversDns01Route53Auth struct {
	// Kubernetes authenticates with Route53 using AssumeRoleWithWebIdentity
	// by passing a bound ServiceAccount token.
	Kubernetes IssuerSpecAcmeSolversDns01Route53AuthKubernetes `pulumi:"kubernetes"`
}

// IssuerSpecAcmeSolversDns01Route53AuthInput is an input type that accepts IssuerSpecAcmeSolversDns01Route53AuthArgs and IssuerSpecAcmeSolversDns01Route53AuthOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Route53AuthInput` via:
//
//	IssuerSpecAcmeSolversDns01Route53AuthArgs{...}
type IssuerSpecAcmeSolversDns01Route53AuthInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Route53AuthOutput() IssuerSpecAcmeSolversDns01Route53AuthOutput
	ToIssuerSpecAcmeSolversDns01Route53AuthOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Route53AuthOutput
}

// Auth configures how cert-manager authenticates.
type IssuerSpecAcmeSolversDns01Route53AuthArgs struct {
	// Kubernetes authenticates with Route53 using AssumeRoleWithWebIdentity
	// by passing a bound ServiceAccount token.
	Kubernetes IssuerSpecAcmeSolversDns01Route53AuthKubernetesInput `pulumi:"kubernetes"`
}

func (IssuerSpecAcmeSolversDns01Route53AuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53Auth)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01Route53AuthArgs) ToIssuerSpecAcmeSolversDns01Route53AuthOutput() IssuerSpecAcmeSolversDns01Route53AuthOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53AuthOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Route53AuthArgs) ToIssuerSpecAcmeSolversDns01Route53AuthOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53AuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53AuthOutput)
}

func (i IssuerSpecAcmeSolversDns01Route53AuthArgs) ToIssuerSpecAcmeSolversDns01Route53AuthPtrOutput() IssuerSpecAcmeSolversDns01Route53AuthPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53AuthPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Route53AuthArgs) ToIssuerSpecAcmeSolversDns01Route53AuthPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53AuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53AuthOutput).ToIssuerSpecAcmeSolversDns01Route53AuthPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01Route53AuthPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01Route53AuthArgs, IssuerSpecAcmeSolversDns01Route53AuthPtr and IssuerSpecAcmeSolversDns01Route53AuthPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Route53AuthPtrInput` via:
//
//	        IssuerSpecAcmeSolversDns01Route53AuthArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversDns01Route53AuthPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Route53AuthPtrOutput() IssuerSpecAcmeSolversDns01Route53AuthPtrOutput
	ToIssuerSpecAcmeSolversDns01Route53AuthPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Route53AuthPtrOutput
}

type issuerSpecAcmeSolversDns01Route53AuthPtrType IssuerSpecAcmeSolversDns01Route53AuthArgs

func IssuerSpecAcmeSolversDns01Route53AuthPtr(v *IssuerSpecAcmeSolversDns01Route53AuthArgs) IssuerSpecAcmeSolversDns01Route53AuthPtrInput {
	return (*issuerSpecAcmeSolversDns01Route53AuthPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01Route53AuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Route53Auth)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01Route53AuthPtrType) ToIssuerSpecAcmeSolversDns01Route53AuthPtrOutput() IssuerSpecAcmeSolversDns01Route53AuthPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53AuthPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01Route53AuthPtrType) ToIssuerSpecAcmeSolversDns01Route53AuthPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53AuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53AuthPtrOutput)
}

// Auth configures how cert-manager authenticates.
type IssuerSpecAcmeSolversDns01Route53AuthOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Route53AuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53Auth)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Route53AuthOutput) ToIssuerSpecAcmeSolversDns01Route53AuthOutput() IssuerSpecAcmeSolversDns01Route53AuthOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53AuthOutput) ToIssuerSpecAcmeSolversDns01Route53AuthOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53AuthOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53AuthOutput) ToIssuerSpecAcmeSolversDns01Route53AuthPtrOutput() IssuerSpecAcmeSolversDns01Route53AuthPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01Route53AuthPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01Route53AuthOutput) ToIssuerSpecAcmeSolversDns01Route53AuthPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53AuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversDns01Route53Auth) *IssuerSpecAcmeSolversDns01Route53Auth {
		return &v
	}).(IssuerSpecAcmeSolversDns01Route53AuthPtrOutput)
}

// Kubernetes authenticates with Route53 using AssumeRoleWithWebIdentity
// by passing a bound ServiceAccount token.
func (o IssuerSpecAcmeSolversDns01Route53AuthOutput) Kubernetes() IssuerSpecAcmeSolversDns01Route53AuthKubernetesOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Route53Auth) IssuerSpecAcmeSolversDns01Route53AuthKubernetes {
		return v.Kubernetes
	}).(IssuerSpecAcmeSolversDns01Route53AuthKubernetesOutput)
}

type IssuerSpecAcmeSolversDns01Route53AuthPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Route53AuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Route53Auth)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Route53AuthPtrOutput) ToIssuerSpecAcmeSolversDns01Route53AuthPtrOutput() IssuerSpecAcmeSolversDns01Route53AuthPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53AuthPtrOutput) ToIssuerSpecAcmeSolversDns01Route53AuthPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53AuthPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53AuthPtrOutput) Elem() IssuerSpecAcmeSolversDns01Route53AuthOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53Auth) IssuerSpecAcmeSolversDns01Route53Auth {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversDns01Route53Auth
		return ret
	}).(IssuerSpecAcmeSolversDns01Route53AuthOutput)
}

// Kubernetes authenticates with Route53 using AssumeRoleWithWebIdentity
// by passing a bound ServiceAccount token.
func (o IssuerSpecAcmeSolversDns01Route53AuthPtrOutput) Kubernetes() IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53Auth) *IssuerSpecAcmeSolversDns01Route53AuthKubernetes {
		if v == nil {
			return nil
		}
		return &v.Kubernetes
	}).(IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput)
}

// Kubernetes authenticates with Route53 using AssumeRoleWithWebIdentity
// by passing a bound ServiceAccount token.
type IssuerSpecAcmeSolversDns01Route53AuthKubernetes struct {
	// A reference to a service account that will be used to request a bound
	// token (also known as "projected token"). To use this field, you must
	// configure an RBAC rule to let cert-manager request a token.
	ServiceAccountRef IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRef `pulumi:"serviceAccountRef"`
}

// IssuerSpecAcmeSolversDns01Route53AuthKubernetesInput is an input type that accepts IssuerSpecAcmeSolversDns01Route53AuthKubernetesArgs and IssuerSpecAcmeSolversDns01Route53AuthKubernetesOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Route53AuthKubernetesInput` via:
//
//	IssuerSpecAcmeSolversDns01Route53AuthKubernetesArgs{...}
type IssuerSpecAcmeSolversDns01Route53AuthKubernetesInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesOutput() IssuerSpecAcmeSolversDns01Route53AuthKubernetesOutput
	ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Route53AuthKubernetesOutput
}

// Kubernetes authenticates with Route53 using AssumeRoleWithWebIdentity
// by passing a bound ServiceAccount token.
type IssuerSpecAcmeSolversDns01Route53AuthKubernetesArgs struct {
	// A reference to a service account that will be used to request a bound
	// token (also known as "projected token"). To use this field, you must
	// configure an RBAC rule to let cert-manager request a token.
	ServiceAccountRef IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefInput `pulumi:"serviceAccountRef"`
}

func (IssuerSpecAcmeSolversDns01Route53AuthKubernetesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53AuthKubernetes)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01Route53AuthKubernetesArgs) ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesOutput() IssuerSpecAcmeSolversDns01Route53AuthKubernetesOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Route53AuthKubernetesArgs) ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53AuthKubernetesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53AuthKubernetesOutput)
}

func (i IssuerSpecAcmeSolversDns01Route53AuthKubernetesArgs) ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput() IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Route53AuthKubernetesArgs) ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53AuthKubernetesOutput).ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01Route53AuthKubernetesArgs, IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtr and IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrInput` via:
//
//	        IssuerSpecAcmeSolversDns01Route53AuthKubernetesArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput() IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput
	ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput
}

type issuerSpecAcmeSolversDns01Route53AuthKubernetesPtrType IssuerSpecAcmeSolversDns01Route53AuthKubernetesArgs

func IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtr(v *IssuerSpecAcmeSolversDns01Route53AuthKubernetesArgs) IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrInput {
	return (*issuerSpecAcmeSolversDns01Route53AuthKubernetesPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01Route53AuthKubernetesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Route53AuthKubernetes)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01Route53AuthKubernetesPtrType) ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput() IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01Route53AuthKubernetesPtrType) ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput)
}

// Kubernetes authenticates with Route53 using AssumeRoleWithWebIdentity
// by passing a bound ServiceAccount token.
type IssuerSpecAcmeSolversDns01Route53AuthKubernetesOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Route53AuthKubernetesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53AuthKubernetes)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Route53AuthKubernetesOutput) ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesOutput() IssuerSpecAcmeSolversDns01Route53AuthKubernetesOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53AuthKubernetesOutput) ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53AuthKubernetesOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53AuthKubernetesOutput) ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput() IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01Route53AuthKubernetesOutput) ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversDns01Route53AuthKubernetes) *IssuerSpecAcmeSolversDns01Route53AuthKubernetes {
		return &v
	}).(IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput)
}

// A reference to a service account that will be used to request a bound
// token (also known as "projected token"). To use this field, you must
// configure an RBAC rule to let cert-manager request a token.
func (o IssuerSpecAcmeSolversDns01Route53AuthKubernetesOutput) ServiceAccountRef() IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Route53AuthKubernetes) IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRef {
		return v.ServiceAccountRef
	}).(IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutput)
}

type IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Route53AuthKubernetes)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput) ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput() IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput) ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput) Elem() IssuerSpecAcmeSolversDns01Route53AuthKubernetesOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53AuthKubernetes) IssuerSpecAcmeSolversDns01Route53AuthKubernetes {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversDns01Route53AuthKubernetes
		return ret
	}).(IssuerSpecAcmeSolversDns01Route53AuthKubernetesOutput)
}

// A reference to a service account that will be used to request a bound
// token (also known as "projected token"). To use this field, you must
// configure an RBAC rule to let cert-manager request a token.
func (o IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput) ServiceAccountRef() IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53AuthKubernetes) *IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRef {
		if v == nil {
			return nil
		}
		return &v.ServiceAccountRef
	}).(IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput)
}

// A reference to a service account that will be used to request a bound
// token (also known as "projected token"). To use this field, you must
// configure an RBAC rule to let cert-manager request a token.
type IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRef struct {
	// TokenAudiences is an optional list of audiences to include in the
	// token passed to AWS. The default token consisting of the issuer's namespace
	// and name is always included.
	// If unset the audience defaults to `sts.amazonaws.com`.
	Audiences []string `pulumi:"audiences"`
	// Name of the ServiceAccount used to request a token.
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefInput is an input type that accepts IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefArgs and IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefInput` via:
//
//	IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefArgs{...}
type IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutput() IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutput
	ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutput
}

// A reference to a service account that will be used to request a bound
// token (also known as "projected token"). To use this field, you must
// configure an RBAC rule to let cert-manager request a token.
type IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefArgs struct {
	// TokenAudiences is an optional list of audiences to include in the
	// token passed to AWS. The default token consisting of the issuer's namespace
	// and name is always included.
	// If unset the audience defaults to `sts.amazonaws.com`.
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// Name of the ServiceAccount used to request a token.
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefArgs) ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutput() IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefArgs) ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutput)
}

func (i IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefArgs) ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput() IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefArgs) ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutput).ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefArgs, IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtr and IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrInput` via:
//
//	        IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput() IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput
	ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput
}

type issuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrType IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefArgs

func IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtr(v *IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefArgs) IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrInput {
	return (*issuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrType) ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput() IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrType) ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput)
}

// A reference to a service account that will be used to request a bound
// token (also known as "projected token"). To use this field, you must
// configure an RBAC rule to let cert-manager request a token.
type IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutput) ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutput() IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutput) ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutput) ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput() IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutput) ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRef) *IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput)
}

// TokenAudiences is an optional list of audiences to include in the
// token passed to AWS. The default token consisting of the issuer's namespace
// and name is always included.
// If unset the audience defaults to `sts.amazonaws.com`.
func (o IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRef) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// Name of the ServiceAccount used to request a token.
func (o IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput) ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput() IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput) ToIssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRef) IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRef
		return ret
	}).(IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutput)
}

// TokenAudiences is an optional list of audiences to include in the
// token passed to AWS. The default token consisting of the issuer's namespace
// and name is always included.
// If unset the audience defaults to `sts.amazonaws.com`.
func (o IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRef) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// Name of the ServiceAccount used to request a token.
func (o IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SecretAccessKey is used for authentication.
// If neither the Access Key nor Key ID are set, we fall-back to using env
// vars, shared credentials file or AWS Instance metadata,
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs and IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefInput` via:
//
//	IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs{...}
type IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput
	ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput
}

// The SecretAccessKey is used for authentication.
// If neither the Access Key nor Key ID are set, we fall-back to using env
// vars, shared credentials file or AWS Instance metadata,
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput).ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs, IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtr and IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrInput` via:
//
//	        IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrType IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs

func IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtr(v *IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrInput {
	return (*issuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrType) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrType) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication.
// If neither the Access Key nor Key ID are set, we fall-back to using env
// vars, shared credentials file or AWS Instance metadata,
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) *IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef
		return ret
	}).(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Configure an external webhook based DNS01 challenge solver to manage
// DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Webhook struct {
	// Additional configuration that should be passed to the webhook apiserver
	// when challenges are processed.
	// This can contain arbitrary JSON data.
	// Secret values should not be specified in this stanza.
	// If secret values are needed (e.g. credentials for a DNS service), you
	// should use a SecretKeySelector to reference a Secret resource.
	// For details on the schema of this field, consult the webhook provider
	// implementation's documentation.
	Config map[string]interface{} `pulumi:"config"`
	// The API group name that should be used when POSTing ChallengePayload
	// resources to the webhook apiserver.
	// This should be the same as the GroupName specified in the webhook
	// provider implementation.
	GroupName string `pulumi:"groupName"`
	// The name of the solver to use, as defined in the webhook provider
	// implementation.
	// This will typically be the name of the provider, e.g. 'cloudflare'.
	SolverName string `pulumi:"solverName"`
}

// IssuerSpecAcmeSolversDns01WebhookInput is an input type that accepts IssuerSpecAcmeSolversDns01WebhookArgs and IssuerSpecAcmeSolversDns01WebhookOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01WebhookInput` via:
//
//	IssuerSpecAcmeSolversDns01WebhookArgs{...}
type IssuerSpecAcmeSolversDns01WebhookInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01WebhookOutput() IssuerSpecAcmeSolversDns01WebhookOutput
	ToIssuerSpecAcmeSolversDns01WebhookOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01WebhookOutput
}

// Configure an external webhook based DNS01 challenge solver to manage
// DNS01 challenge records.
type IssuerSpecAcmeSolversDns01WebhookArgs struct {
	// Additional configuration that should be passed to the webhook apiserver
	// when challenges are processed.
	// This can contain arbitrary JSON data.
	// Secret values should not be specified in this stanza.
	// If secret values are needed (e.g. credentials for a DNS service), you
	// should use a SecretKeySelector to reference a Secret resource.
	// For details on the schema of this field, consult the webhook provider
	// implementation's documentation.
	Config pulumi.MapInput `pulumi:"config"`
	// The API group name that should be used when POSTing ChallengePayload
	// resources to the webhook apiserver.
	// This should be the same as the GroupName specified in the webhook
	// provider implementation.
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// The name of the solver to use, as defined in the webhook provider
	// implementation.
	// This will typically be the name of the provider, e.g. 'cloudflare'.
	SolverName pulumi.StringInput `pulumi:"solverName"`
}

func (IssuerSpecAcmeSolversDns01WebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Webhook)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01WebhookArgs) ToIssuerSpecAcmeSolversDns01WebhookOutput() IssuerSpecAcmeSolversDns01WebhookOutput {
	return i.ToIssuerSpecAcmeSolversDns01WebhookOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01WebhookArgs) ToIssuerSpecAcmeSolversDns01WebhookOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01WebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01WebhookOutput)
}

func (i IssuerSpecAcmeSolversDns01WebhookArgs) ToIssuerSpecAcmeSolversDns01WebhookPtrOutput() IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01WebhookArgs) ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01WebhookOutput).ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01WebhookPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01WebhookArgs, IssuerSpecAcmeSolversDns01WebhookPtr and IssuerSpecAcmeSolversDns01WebhookPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01WebhookPtrInput` via:
//
//	        IssuerSpecAcmeSolversDns01WebhookArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversDns01WebhookPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01WebhookPtrOutput() IssuerSpecAcmeSolversDns01WebhookPtrOutput
	ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01WebhookPtrOutput
}

type issuerSpecAcmeSolversDns01WebhookPtrType IssuerSpecAcmeSolversDns01WebhookArgs

func IssuerSpecAcmeSolversDns01WebhookPtr(v *IssuerSpecAcmeSolversDns01WebhookArgs) IssuerSpecAcmeSolversDns01WebhookPtrInput {
	return (*issuerSpecAcmeSolversDns01WebhookPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01WebhookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Webhook)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01WebhookPtrType) ToIssuerSpecAcmeSolversDns01WebhookPtrOutput() IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01WebhookPtrType) ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01WebhookPtrOutput)
}

// Configure an external webhook based DNS01 challenge solver to manage
// DNS01 challenge records.
type IssuerSpecAcmeSolversDns01WebhookOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01WebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Webhook)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01WebhookOutput) ToIssuerSpecAcmeSolversDns01WebhookOutput() IssuerSpecAcmeSolversDns01WebhookOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01WebhookOutput) ToIssuerSpecAcmeSolversDns01WebhookOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01WebhookOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01WebhookOutput) ToIssuerSpecAcmeSolversDns01WebhookPtrOutput() IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01WebhookOutput) ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversDns01Webhook) *IssuerSpecAcmeSolversDns01Webhook {
		return &v
	}).(IssuerSpecAcmeSolversDns01WebhookPtrOutput)
}

// Additional configuration that should be passed to the webhook apiserver
// when challenges are processed.
// This can contain arbitrary JSON data.
// Secret values should not be specified in this stanza.
// If secret values are needed (e.g. credentials for a DNS service), you
// should use a SecretKeySelector to reference a Secret resource.
// For details on the schema of this field, consult the webhook provider
// implementation's documentation.
func (o IssuerSpecAcmeSolversDns01WebhookOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Webhook) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// The API group name that should be used when POSTing ChallengePayload
// resources to the webhook apiserver.
// This should be the same as the GroupName specified in the webhook
// provider implementation.
func (o IssuerSpecAcmeSolversDns01WebhookOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Webhook) string { return v.GroupName }).(pulumi.StringOutput)
}

// The name of the solver to use, as defined in the webhook provider
// implementation.
// This will typically be the name of the provider, e.g. 'cloudflare'.
func (o IssuerSpecAcmeSolversDns01WebhookOutput) SolverName() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Webhook) string { return v.SolverName }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01WebhookPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01WebhookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Webhook)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01WebhookPtrOutput) ToIssuerSpecAcmeSolversDns01WebhookPtrOutput() IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01WebhookPtrOutput) ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01WebhookPtrOutput) Elem() IssuerSpecAcmeSolversDns01WebhookOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Webhook) IssuerSpecAcmeSolversDns01Webhook {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversDns01Webhook
		return ret
	}).(IssuerSpecAcmeSolversDns01WebhookOutput)
}

// Additional configuration that should be passed to the webhook apiserver
// when challenges are processed.
// This can contain arbitrary JSON data.
// Secret values should not be specified in this stanza.
// If secret values are needed (e.g. credentials for a DNS service), you
// should use a SecretKeySelector to reference a Secret resource.
// For details on the schema of this field, consult the webhook provider
// implementation's documentation.
func (o IssuerSpecAcmeSolversDns01WebhookPtrOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Webhook) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Config
	}).(pulumi.MapOutput)
}

// The API group name that should be used when POSTing ChallengePayload
// resources to the webhook apiserver.
// This should be the same as the GroupName specified in the webhook
// provider implementation.
func (o IssuerSpecAcmeSolversDns01WebhookPtrOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Webhook) *string {
		if v == nil {
			return nil
		}
		return &v.GroupName
	}).(pulumi.StringPtrOutput)
}

// The name of the solver to use, as defined in the webhook provider
// implementation.
// This will typically be the name of the provider, e.g. 'cloudflare'.
func (o IssuerSpecAcmeSolversDns01WebhookPtrOutput) SolverName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Webhook) *string {
		if v == nil {
			return nil
		}
		return &v.SolverName
	}).(pulumi.StringPtrOutput)
}

// Configures cert-manager to attempt to complete authorizations by
// performing the HTTP01 challenge flow.
// It is not possible to obtain certificates for wildcard domain names
// (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
type IssuerSpecAcmeSolversHttp01 struct {
	// The Gateway API is a sig-network community API that models service networking
	// in Kubernetes (https://gateway-api.sigs.k8s.io/). The Gateway solver will
	// create HTTPRoutes with the specified labels in the same namespace as the challenge.
	// This solver is experimental, and fields / behaviour may change in the future.
	GatewayHTTPRoute *IssuerSpecAcmeSolversHttp01GatewayHttproute `pulumi:"gatewayHTTPRoute"`
	// The ingress based HTTP01 challenge solver will solve challenges by
	// creating or modifying Ingress resources in order to route requests for
	// '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are
	// provisioned by cert-manager for each Challenge to be completed.
	Ingress *IssuerSpecAcmeSolversHttp01Ingress `pulumi:"ingress"`
}

// IssuerSpecAcmeSolversHttp01Input is an input type that accepts IssuerSpecAcmeSolversHttp01Args and IssuerSpecAcmeSolversHttp01Output values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01Input` via:
//
//	IssuerSpecAcmeSolversHttp01Args{...}
type IssuerSpecAcmeSolversHttp01Input interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01Output() IssuerSpecAcmeSolversHttp01Output
	ToIssuerSpecAcmeSolversHttp01OutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01Output
}

// Configures cert-manager to attempt to complete authorizations by
// performing the HTTP01 challenge flow.
// It is not possible to obtain certificates for wildcard domain names
// (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
type IssuerSpecAcmeSolversHttp01Args struct {
	// The Gateway API is a sig-network community API that models service networking
	// in Kubernetes (https://gateway-api.sigs.k8s.io/). The Gateway solver will
	// create HTTPRoutes with the specified labels in the same namespace as the challenge.
	// This solver is experimental, and fields / behaviour may change in the future.
	GatewayHTTPRoute IssuerSpecAcmeSolversHttp01GatewayHttproutePtrInput `pulumi:"gatewayHTTPRoute"`
	// The ingress based HTTP01 challenge solver will solve challenges by
	// creating or modifying Ingress resources in order to route requests for
	// '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are
	// provisioned by cert-manager for each Challenge to be completed.
	Ingress IssuerSpecAcmeSolversHttp01IngressPtrInput `pulumi:"ingress"`
}

func (IssuerSpecAcmeSolversHttp01Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01Args) ToIssuerSpecAcmeSolversHttp01Output() IssuerSpecAcmeSolversHttp01Output {
	return i.ToIssuerSpecAcmeSolversHttp01OutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01Args) ToIssuerSpecAcmeSolversHttp01OutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01Output {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01Output)
}

func (i IssuerSpecAcmeSolversHttp01Args) ToIssuerSpecAcmeSolversHttp01PtrOutput() IssuerSpecAcmeSolversHttp01PtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01Args) ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01Output).ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01PtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01Args, IssuerSpecAcmeSolversHttp01Ptr and IssuerSpecAcmeSolversHttp01PtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01PtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01Args{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01PtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01PtrOutput() IssuerSpecAcmeSolversHttp01PtrOutput
	ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01PtrOutput
}

type issuerSpecAcmeSolversHttp01PtrType IssuerSpecAcmeSolversHttp01Args

func IssuerSpecAcmeSolversHttp01Ptr(v *IssuerSpecAcmeSolversHttp01Args) IssuerSpecAcmeSolversHttp01PtrInput {
	return (*issuerSpecAcmeSolversHttp01PtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01PtrType) ToIssuerSpecAcmeSolversHttp01PtrOutput() IssuerSpecAcmeSolversHttp01PtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01PtrType) ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01PtrOutput)
}

// Configures cert-manager to attempt to complete authorizations by
// performing the HTTP01 challenge flow.
// It is not possible to obtain certificates for wildcard domain names
// (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
type IssuerSpecAcmeSolversHttp01Output struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01Output) ToIssuerSpecAcmeSolversHttp01Output() IssuerSpecAcmeSolversHttp01Output {
	return o
}

func (o IssuerSpecAcmeSolversHttp01Output) ToIssuerSpecAcmeSolversHttp01OutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01Output {
	return o
}

func (o IssuerSpecAcmeSolversHttp01Output) ToIssuerSpecAcmeSolversHttp01PtrOutput() IssuerSpecAcmeSolversHttp01PtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01Output) ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01) *IssuerSpecAcmeSolversHttp01 {
		return &v
	}).(IssuerSpecAcmeSolversHttp01PtrOutput)
}

// The Gateway API is a sig-network community API that models service networking
// in Kubernetes (https://gateway-api.sigs.k8s.io/). The Gateway solver will
// create HTTPRoutes with the specified labels in the same namespace as the challenge.
// This solver is experimental, and fields / behaviour may change in the future.
func (o IssuerSpecAcmeSolversHttp01Output) GatewayHTTPRoute() IssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01) *IssuerSpecAcmeSolversHttp01GatewayHttproute {
		return v.GatewayHTTPRoute
	}).(IssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput)
}

// The ingress based HTTP01 challenge solver will solve challenges by
// creating or modifying Ingress resources in order to route requests for
// '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are
// provisioned by cert-manager for each Challenge to be completed.
func (o IssuerSpecAcmeSolversHttp01Output) Ingress() IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01) *IssuerSpecAcmeSolversHttp01Ingress { return v.Ingress }).(IssuerSpecAcmeSolversHttp01IngressPtrOutput)
}

type IssuerSpecAcmeSolversHttp01PtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01PtrOutput) ToIssuerSpecAcmeSolversHttp01PtrOutput() IssuerSpecAcmeSolversHttp01PtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01PtrOutput) ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01PtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01PtrOutput) Elem() IssuerSpecAcmeSolversHttp01Output {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01) IssuerSpecAcmeSolversHttp01 {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01
		return ret
	}).(IssuerSpecAcmeSolversHttp01Output)
}

// The Gateway API is a sig-network community API that models service networking
// in Kubernetes (https://gateway-api.sigs.k8s.io/). The Gateway solver will
// create HTTPRoutes with the specified labels in the same namespace as the challenge.
// This solver is experimental, and fields / behaviour may change in the future.
func (o IssuerSpecAcmeSolversHttp01PtrOutput) GatewayHTTPRoute() IssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01) *IssuerSpecAcmeSolversHttp01GatewayHttproute {
		if v == nil {
			return nil
		}
		return v.GatewayHTTPRoute
	}).(IssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput)
}

// The ingress based HTTP01 challenge solver will solve challenges by
// creating or modifying Ingress resources in order to route requests for
// '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are
// provisioned by cert-manager for each Challenge to be completed.
func (o IssuerSpecAcmeSolversHttp01PtrOutput) Ingress() IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01) *IssuerSpecAcmeSolversHttp01Ingress {
		if v == nil {
			return nil
		}
		return v.Ingress
	}).(IssuerSpecAcmeSolversHttp01IngressPtrOutput)
}

// The Gateway API is a sig-network community API that models service networking
// in Kubernetes (https://gateway-api.sigs.k8s.io/). The Gateway solver will
// create HTTPRoutes with the specified labels in the same namespace as the challenge.
// This solver is experimental, and fields / behaviour may change in the future.
type IssuerSpecAcmeSolversHttp01GatewayHttproute struct {
	// Custom labels that will be applied to HTTPRoutes created by cert-manager
	// while solving HTTP-01 challenges.
	Labels map[string]string `pulumi:"labels"`
	// When solving an HTTP-01 challenge, cert-manager creates an HTTPRoute.
	// cert-manager needs to know which parentRefs should be used when creating
	// the HTTPRoute. Usually, the parentRef references a Gateway. See:
	// https://gateway-api.sigs.k8s.io/api-types/httproute/#attaching-to-gateways
	ParentRefs []IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefs `pulumi:"parentRefs"`
	// Optional service type for Kubernetes solver service. Supported values
	// are NodePort or ClusterIP. If unset, defaults to NodePort.
	ServiceType *string `pulumi:"serviceType"`
}

// IssuerSpecAcmeSolversHttp01GatewayHttprouteInput is an input type that accepts IssuerSpecAcmeSolversHttp01GatewayHttprouteArgs and IssuerSpecAcmeSolversHttp01GatewayHttprouteOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01GatewayHttprouteInput` via:
//
//	IssuerSpecAcmeSolversHttp01GatewayHttprouteArgs{...}
type IssuerSpecAcmeSolversHttp01GatewayHttprouteInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01GatewayHttprouteOutput() IssuerSpecAcmeSolversHttp01GatewayHttprouteOutput
	ToIssuerSpecAcmeSolversHttp01GatewayHttprouteOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01GatewayHttprouteOutput
}

// The Gateway API is a sig-network community API that models service networking
// in Kubernetes (https://gateway-api.sigs.k8s.io/). The Gateway solver will
// create HTTPRoutes with the specified labels in the same namespace as the challenge.
// This solver is experimental, and fields / behaviour may change in the future.
type IssuerSpecAcmeSolversHttp01GatewayHttprouteArgs struct {
	// Custom labels that will be applied to HTTPRoutes created by cert-manager
	// while solving HTTP-01 challenges.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// When solving an HTTP-01 challenge, cert-manager creates an HTTPRoute.
	// cert-manager needs to know which parentRefs should be used when creating
	// the HTTPRoute. Usually, the parentRef references a Gateway. See:
	// https://gateway-api.sigs.k8s.io/api-types/httproute/#attaching-to-gateways
	ParentRefs IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayInput `pulumi:"parentRefs"`
	// Optional service type for Kubernetes solver service. Supported values
	// are NodePort or ClusterIP. If unset, defaults to NodePort.
	ServiceType pulumi.StringPtrInput `pulumi:"serviceType"`
}

func (IssuerSpecAcmeSolversHttp01GatewayHttprouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01GatewayHttproute)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01GatewayHttprouteArgs) ToIssuerSpecAcmeSolversHttp01GatewayHttprouteOutput() IssuerSpecAcmeSolversHttp01GatewayHttprouteOutput {
	return i.ToIssuerSpecAcmeSolversHttp01GatewayHttprouteOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01GatewayHttprouteArgs) ToIssuerSpecAcmeSolversHttp01GatewayHttprouteOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01GatewayHttprouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01GatewayHttprouteOutput)
}

func (i IssuerSpecAcmeSolversHttp01GatewayHttprouteArgs) ToIssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput() IssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01GatewayHttprouteArgs) ToIssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01GatewayHttprouteOutput).ToIssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01GatewayHttproutePtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01GatewayHttprouteArgs, IssuerSpecAcmeSolversHttp01GatewayHttproutePtr and IssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01GatewayHttproutePtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01GatewayHttprouteArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01GatewayHttproutePtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput() IssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput
	ToIssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput
}

type issuerSpecAcmeSolversHttp01GatewayHttproutePtrType IssuerSpecAcmeSolversHttp01GatewayHttprouteArgs

func IssuerSpecAcmeSolversHttp01GatewayHttproutePtr(v *IssuerSpecAcmeSolversHttp01GatewayHttprouteArgs) IssuerSpecAcmeSolversHttp01GatewayHttproutePtrInput {
	return (*issuerSpecAcmeSolversHttp01GatewayHttproutePtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01GatewayHttproutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01GatewayHttproute)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01GatewayHttproutePtrType) ToIssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput() IssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01GatewayHttproutePtrType) ToIssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput)
}

// The Gateway API is a sig-network community API that models service networking
// in Kubernetes (https://gateway-api.sigs.k8s.io/). The Gateway solver will
// create HTTPRoutes with the specified labels in the same namespace as the challenge.
// This solver is experimental, and fields / behaviour may change in the future.
type IssuerSpecAcmeSolversHttp01GatewayHttprouteOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01GatewayHttprouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01GatewayHttproute)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01GatewayHttprouteOutput) ToIssuerSpecAcmeSolversHttp01GatewayHttprouteOutput() IssuerSpecAcmeSolversHttp01GatewayHttprouteOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01GatewayHttprouteOutput) ToIssuerSpecAcmeSolversHttp01GatewayHttprouteOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01GatewayHttprouteOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01GatewayHttprouteOutput) ToIssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput() IssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01GatewayHttprouteOutput) ToIssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01GatewayHttproute) *IssuerSpecAcmeSolversHttp01GatewayHttproute {
		return &v
	}).(IssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput)
}

// Custom labels that will be applied to HTTPRoutes created by cert-manager
// while solving HTTP-01 challenges.
func (o IssuerSpecAcmeSolversHttp01GatewayHttprouteOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01GatewayHttproute) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// When solving an HTTP-01 challenge, cert-manager creates an HTTPRoute.
// cert-manager needs to know which parentRefs should be used when creating
// the HTTPRoute. Usually, the parentRef references a Gateway. See:
// https://gateway-api.sigs.k8s.io/api-types/httproute/#attaching-to-gateways
func (o IssuerSpecAcmeSolversHttp01GatewayHttprouteOutput) ParentRefs() IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01GatewayHttproute) []IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefs {
		return v.ParentRefs
	}).(IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayOutput)
}

// Optional service type for Kubernetes solver service. Supported values
// are NodePort or ClusterIP. If unset, defaults to NodePort.
func (o IssuerSpecAcmeSolversHttp01GatewayHttprouteOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01GatewayHttproute) *string { return v.ServiceType }).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01GatewayHttproute)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput) ToIssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput() IssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput) ToIssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput) Elem() IssuerSpecAcmeSolversHttp01GatewayHttprouteOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01GatewayHttproute) IssuerSpecAcmeSolversHttp01GatewayHttproute {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01GatewayHttproute
		return ret
	}).(IssuerSpecAcmeSolversHttp01GatewayHttprouteOutput)
}

// Custom labels that will be applied to HTTPRoutes created by cert-manager
// while solving HTTP-01 challenges.
func (o IssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01GatewayHttproute) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// When solving an HTTP-01 challenge, cert-manager creates an HTTPRoute.
// cert-manager needs to know which parentRefs should be used when creating
// the HTTPRoute. Usually, the parentRef references a Gateway. See:
// https://gateway-api.sigs.k8s.io/api-types/httproute/#attaching-to-gateways
func (o IssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput) ParentRefs() IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01GatewayHttproute) []IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefs {
		if v == nil {
			return nil
		}
		return v.ParentRefs
	}).(IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayOutput)
}

// Optional service type for Kubernetes solver service. Supported values
// are NodePort or ClusterIP. If unset, defaults to NodePort.
func (o IssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01GatewayHttproute) *string {
		if v == nil {
			return nil
		}
		return v.ServiceType
	}).(pulumi.StringPtrOutput)
}

// Custom labels that will be applied to HTTPRoutes created by cert-manager
// while solving HTTP-01 challenges.
type IssuerSpecAcmeSolversHttp01GatewayHttprouteLabels struct {
}

// ParentReference identifies an API object (usually a Gateway) that can be considered
// a parent of this resource (usually a route). There are two kinds of parent resources
// with "Core" support:
//
// * Gateway (Gateway conformance profile)
// * Service (Mesh conformance profile, ClusterIP Services only)
//
// This API may be extended in the future to support additional kinds of parent
// resources.
//
// The API object must be valid in the cluster; the Group and Kind must
// be registered in the cluster for this reference to be valid.
type IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefs struct {
	// Group is the group of the referent.
	// When unspecified, "gateway.networking.k8s.io" is inferred.
	// To set the core API group (such as for a "Service" kind referent),
	// Group must be explicitly set to "" (empty string).
	//
	// Support: Core
	Group *string `pulumi:"group"`
	// Kind is kind of the referent.
	//
	// There are two kinds of parent resources with "Core" support:
	//
	// * Gateway (Gateway conformance profile)
	// * Service (Mesh conformance profile, ClusterIP Services only)
	//
	// Support for other resources is Implementation-Specific.
	Kind *string `pulumi:"kind"`
	// Name is the name of the referent.
	//
	// Support: Core
	Name string `pulumi:"name"`
	// Namespace is the namespace of the referent. When unspecified, this refers
	// to the local namespace of the Route.
	//
	// Note that there are specific rules for ParentRefs which cross namespace
	// boundaries. Cross-namespace references are only valid if they are explicitly
	// allowed by something in the namespace they are referring to. For example:
	// Gateway has the AllowedRoutes field, and ReferenceGrant provides a
	// generic way to enable any other kind of cross-namespace reference.
	//
	// <gateway:experimental:description>
	// ParentRefs from a Route to a Service in the same namespace are "producer"
	// routes, which apply default routing rules to inbound connections from
	// any namespace to the Service.
	//
	// ParentRefs from a Route to a Service in a different namespace are
	// "consumer" routes, and these routing rules are only applied to outbound
	// connections originating from the same namespace as the Route, for which
	// the intended destination of the connections are a Service targeted as a
	// ParentRef of the Route.
	// </gateway:experimental:description>
	//
	// Support: Core
	Namespace *string `pulumi:"namespace"`
	// Port is the network port this Route targets. It can be interpreted
	// differently based on the type of parent resource.
	//
	// When the parent resource is a Gateway, this targets all listeners
	// listening on the specified port that also support this kind of Route(and
	// select this Route). It's not recommended to set `Port` unless the
	// networking behaviors specified in a Route must apply to a specific port
	// as opposed to a listener(s) whose port(s) may be changed. When both Port
	// and SectionName are specified, the name and port of the selected listener
	// must match both specified values.
	//
	// <gateway:experimental:description>
	// When the parent resource is a Service, this targets a specific port in the
	// Service spec. When both Port (experimental) and SectionName are specified,
	// the name and port of the selected port must match both specified values.
	// </gateway:experimental:description>
	//
	// Implementations MAY choose to support other parent resources.
	// Implementations supporting other types of parent resources MUST clearly
	// document how/if Port is interpreted.
	//
	// For the purpose of status, an attachment is considered successful as
	// long as the parent resource accepts it partially. For example, Gateway
	// listeners can restrict which Routes can attach to them by Route kind,
	// namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
	// from the referencing Route, the Route MUST be considered successfully
	// attached. If no Gateway listeners accept attachment from this Route,
	// the Route MUST be considered detached from the Gateway.
	//
	// Support: Extended
	Port *int `pulumi:"port"`
	// SectionName is the name of a section within the target resource. In the
	// following resources, SectionName is interpreted as the following:
	//
	// * Gateway: Listener name. When both Port (experimental) and SectionName
	//   are specified, the name and port of the selected listener must match
	//   both specified values.
	// * Service: Port name. When both Port (experimental) and SectionName
	//   are specified, the name and port of the selected listener must match
	//   both specified values.
	//
	// Implementations MAY choose to support attaching Routes to other resources.
	// If that is the case, they MUST clearly document how SectionName is
	// interpreted.
	//
	// When unspecified (empty string), this will reference the entire resource.
	// For the purpose of status, an attachment is considered successful if at
	// least one section in the parent resource accepts it. For example, Gateway
	// listeners can restrict which Routes can attach to them by Route kind,
	// namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
	// the referencing Route, the Route MUST be considered successfully
	// attached. If no Gateway listeners accept attachment from this Route, the
	// Route MUST be considered detached from the Gateway.
	//
	// Support: Core
	SectionName *string `pulumi:"sectionName"`
}

// Defaults sets the appropriate defaults for IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefs
func (val *IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefs) Defaults() *IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Group == nil {
		group_ := "gateway.networking.k8s.io"
		tmp.Group = &group_
	}
	if tmp.Kind == nil {
		kind_ := "Gateway"
		tmp.Kind = &kind_
	}
	return &tmp
}

// IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsInput is an input type that accepts IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArgs and IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsInput` via:
//
//	IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArgs{...}
type IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutput() IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutput
	ToIssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutput
}

// ParentReference identifies an API object (usually a Gateway) that can be considered
// a parent of this resource (usually a route). There are two kinds of parent resources
// with "Core" support:
//
// * Gateway (Gateway conformance profile)
// * Service (Mesh conformance profile, ClusterIP Services only)
//
// This API may be extended in the future to support additional kinds of parent
// resources.
//
// The API object must be valid in the cluster; the Group and Kind must
// be registered in the cluster for this reference to be valid.
type IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArgs struct {
	// Group is the group of the referent.
	// When unspecified, "gateway.networking.k8s.io" is inferred.
	// To set the core API group (such as for a "Service" kind referent),
	// Group must be explicitly set to "" (empty string).
	//
	// Support: Core
	Group pulumi.StringPtrInput `pulumi:"group"`
	// Kind is kind of the referent.
	//
	// There are two kinds of parent resources with "Core" support:
	//
	// * Gateway (Gateway conformance profile)
	// * Service (Mesh conformance profile, ClusterIP Services only)
	//
	// Support for other resources is Implementation-Specific.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the referent.
	//
	// Support: Core
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace is the namespace of the referent. When unspecified, this refers
	// to the local namespace of the Route.
	//
	// Note that there are specific rules for ParentRefs which cross namespace
	// boundaries. Cross-namespace references are only valid if they are explicitly
	// allowed by something in the namespace they are referring to. For example:
	// Gateway has the AllowedRoutes field, and ReferenceGrant provides a
	// generic way to enable any other kind of cross-namespace reference.
	//
	// <gateway:experimental:description>
	// ParentRefs from a Route to a Service in the same namespace are "producer"
	// routes, which apply default routing rules to inbound connections from
	// any namespace to the Service.
	//
	// ParentRefs from a Route to a Service in a different namespace are
	// "consumer" routes, and these routing rules are only applied to outbound
	// connections originating from the same namespace as the Route, for which
	// the intended destination of the connections are a Service targeted as a
	// ParentRef of the Route.
	// </gateway:experimental:description>
	//
	// Support: Core
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Port is the network port this Route targets. It can be interpreted
	// differently based on the type of parent resource.
	//
	// When the parent resource is a Gateway, this targets all listeners
	// listening on the specified port that also support this kind of Route(and
	// select this Route). It's not recommended to set `Port` unless the
	// networking behaviors specified in a Route must apply to a specific port
	// as opposed to a listener(s) whose port(s) may be changed. When both Port
	// and SectionName are specified, the name and port of the selected listener
	// must match both specified values.
	//
	// <gateway:experimental:description>
	// When the parent resource is a Service, this targets a specific port in the
	// Service spec. When both Port (experimental) and SectionName are specified,
	// the name and port of the selected port must match both specified values.
	// </gateway:experimental:description>
	//
	// Implementations MAY choose to support other parent resources.
	// Implementations supporting other types of parent resources MUST clearly
	// document how/if Port is interpreted.
	//
	// For the purpose of status, an attachment is considered successful as
	// long as the parent resource accepts it partially. For example, Gateway
	// listeners can restrict which Routes can attach to them by Route kind,
	// namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
	// from the referencing Route, the Route MUST be considered successfully
	// attached. If no Gateway listeners accept attachment from this Route,
	// the Route MUST be considered detached from the Gateway.
	//
	// Support: Extended
	Port pulumi.IntPtrInput `pulumi:"port"`
	// SectionName is the name of a section within the target resource. In the
	// following resources, SectionName is interpreted as the following:
	//
	// * Gateway: Listener name. When both Port (experimental) and SectionName
	//   are specified, the name and port of the selected listener must match
	//   both specified values.
	// * Service: Port name. When both Port (experimental) and SectionName
	//   are specified, the name and port of the selected listener must match
	//   both specified values.
	//
	// Implementations MAY choose to support attaching Routes to other resources.
	// If that is the case, they MUST clearly document how SectionName is
	// interpreted.
	//
	// When unspecified (empty string), this will reference the entire resource.
	// For the purpose of status, an attachment is considered successful if at
	// least one section in the parent resource accepts it. For example, Gateway
	// listeners can restrict which Routes can attach to them by Route kind,
	// namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
	// the referencing Route, the Route MUST be considered successfully
	// attached. If no Gateway listeners accept attachment from this Route, the
	// Route MUST be considered detached from the Gateway.
	//
	// Support: Core
	SectionName pulumi.StringPtrInput `pulumi:"sectionName"`
}

// Defaults sets the appropriate defaults for IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArgs
func (val *IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArgs) Defaults() *IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Group == nil {
		tmp.Group = pulumi.StringPtr("gateway.networking.k8s.io")
	}
	if tmp.Kind == nil {
		tmp.Kind = pulumi.StringPtr("Gateway")
	}
	return &tmp
}
func (IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefs)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArgs) ToIssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutput() IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArgs) ToIssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutput)
}

// IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArray and IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArray{ IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArgs{...} }
type IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayOutput() IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayOutput
	ToIssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayOutput
}

type IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArray []IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsInput

func (IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefs)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArray) ToIssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayOutput() IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArray) ToIssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayOutput)
}

// ParentReference identifies an API object (usually a Gateway) that can be considered
// a parent of this resource (usually a route). There are two kinds of parent resources
// with "Core" support:
//
// * Gateway (Gateway conformance profile)
// * Service (Mesh conformance profile, ClusterIP Services only)
//
// This API may be extended in the future to support additional kinds of parent
// resources.
//
// The API object must be valid in the cluster; the Group and Kind must
// be registered in the cluster for this reference to be valid.
type IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefs)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutput) ToIssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutput() IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutput) ToIssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutput {
	return o
}

// Group is the group of the referent.
// When unspecified, "gateway.networking.k8s.io" is inferred.
// To set the core API group (such as for a "Service" kind referent),
// Group must be explicitly set to "" (empty string).
//
// Support: Core
func (o IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefs) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// Kind is kind of the referent.
//
// There are two kinds of parent resources with "Core" support:
//
// * Gateway (Gateway conformance profile)
// * Service (Mesh conformance profile, ClusterIP Services only)
//
// Support for other resources is Implementation-Specific.
func (o IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefs) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the referent.
//
// Support: Core
func (o IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefs) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace is the namespace of the referent. When unspecified, this refers
// to the local namespace of the Route.
//
// Note that there are specific rules for ParentRefs which cross namespace
// boundaries. Cross-namespace references are only valid if they are explicitly
// allowed by something in the namespace they are referring to. For example:
// Gateway has the AllowedRoutes field, and ReferenceGrant provides a
// generic way to enable any other kind of cross-namespace reference.
//
// <gateway:experimental:description>
// ParentRefs from a Route to a Service in the same namespace are "producer"
// routes, which apply default routing rules to inbound connections from
// any namespace to the Service.
//
// ParentRefs from a Route to a Service in a different namespace are
// "consumer" routes, and these routing rules are only applied to outbound
// connections originating from the same namespace as the Route, for which
// the intended destination of the connections are a Service targeted as a
// ParentRef of the Route.
// </gateway:experimental:description>
//
// Support: Core
func (o IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefs) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Port is the network port this Route targets. It can be interpreted
// differently based on the type of parent resource.
//
// When the parent resource is a Gateway, this targets all listeners
// listening on the specified port that also support this kind of Route(and
// select this Route). It's not recommended to set `Port` unless the
// networking behaviors specified in a Route must apply to a specific port
// as opposed to a listener(s) whose port(s) may be changed. When both Port
// and SectionName are specified, the name and port of the selected listener
// must match both specified values.
//
// <gateway:experimental:description>
// When the parent resource is a Service, this targets a specific port in the
// Service spec. When both Port (experimental) and SectionName are specified,
// the name and port of the selected port must match both specified values.
// </gateway:experimental:description>
//
// Implementations MAY choose to support other parent resources.
// Implementations supporting other types of parent resources MUST clearly
// document how/if Port is interpreted.
//
// For the purpose of status, an attachment is considered successful as
// long as the parent resource accepts it partially. For example, Gateway
// listeners can restrict which Routes can attach to them by Route kind,
// namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
// from the referencing Route, the Route MUST be considered successfully
// attached. If no Gateway listeners accept attachment from this Route,
// the Route MUST be considered detached from the Gateway.
//
// Support: Extended
func (o IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefs) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// SectionName is the name of a section within the target resource. In the
// following resources, SectionName is interpreted as the following:
//
//   - Gateway: Listener name. When both Port (experimental) and SectionName
//     are specified, the name and port of the selected listener must match
//     both specified values.
//   - Service: Port name. When both Port (experimental) and SectionName
//     are specified, the name and port of the selected listener must match
//     both specified values.
//
// Implementations MAY choose to support attaching Routes to other resources.
// If that is the case, they MUST clearly document how SectionName is
// interpreted.
//
// When unspecified (empty string), this will reference the entire resource.
// For the purpose of status, an attachment is considered successful if at
// least one section in the parent resource accepts it. For example, Gateway
// listeners can restrict which Routes can attach to them by Route kind,
// namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
// the referencing Route, the Route MUST be considered successfully
// attached. If no Gateway listeners accept attachment from this Route, the
// Route MUST be considered detached from the Gateway.
//
// Support: Core
func (o IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutput) SectionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefs) *string { return v.SectionName }).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefs)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayOutput) ToIssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayOutput() IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayOutput) ToIssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefs {
		return vs[0].([]IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefs)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutput)
}

// The ingress based HTTP01 challenge solver will solve challenges by
// creating or modifying Ingress resources in order to route requests for
// '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are
// provisioned by cert-manager for each Challenge to be completed.
type IssuerSpecAcmeSolversHttp01Ingress struct {
	// This field configures the annotation `kubernetes.io/ingress.class` when
	// creating Ingress resources to solve ACME challenges that use this
	// challenge solver. Only one of `class`, `name` or `ingressClassName` may
	// be specified.
	Class *string `pulumi:"class"`
	// This field configures the field `ingressClassName` on the created Ingress
	// resources used to solve ACME challenges that use this challenge solver.
	// This is the recommended way of configuring the ingress class. Only one of
	// `class`, `name` or `ingressClassName` may be specified.
	IngressClassName *string `pulumi:"ingressClassName"`
	// Optional ingress template used to configure the ACME challenge solver
	// ingress used for HTTP01 challenges.
	IngressTemplate *IssuerSpecAcmeSolversHttp01IngressIngressTemplate `pulumi:"ingressTemplate"`
	// The name of the ingress resource that should have ACME challenge solving
	// routes inserted into it in order to solve HTTP01 challenges.
	// This is typically used in conjunction with ingress controllers like
	// ingress-gce, which maintains a 1:1 mapping between external IPs and
	// ingress resources. Only one of `class`, `name` or `ingressClassName` may
	// be specified.
	Name *string `pulumi:"name"`
	// Optional pod template used to configure the ACME challenge solver pods
	// used for HTTP01 challenges.
	PodTemplate *IssuerSpecAcmeSolversHttp01IngressPodTemplate `pulumi:"podTemplate"`
	// Optional service type for Kubernetes solver service. Supported values
	// are NodePort or ClusterIP. If unset, defaults to NodePort.
	ServiceType *string `pulumi:"serviceType"`
}

// IssuerSpecAcmeSolversHttp01IngressInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressArgs and IssuerSpecAcmeSolversHttp01IngressOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressArgs{...}
type IssuerSpecAcmeSolversHttp01IngressInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressOutput() IssuerSpecAcmeSolversHttp01IngressOutput
	ToIssuerSpecAcmeSolversHttp01IngressOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressOutput
}

// The ingress based HTTP01 challenge solver will solve challenges by
// creating or modifying Ingress resources in order to route requests for
// '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are
// provisioned by cert-manager for each Challenge to be completed.
type IssuerSpecAcmeSolversHttp01IngressArgs struct {
	// This field configures the annotation `kubernetes.io/ingress.class` when
	// creating Ingress resources to solve ACME challenges that use this
	// challenge solver. Only one of `class`, `name` or `ingressClassName` may
	// be specified.
	Class pulumi.StringPtrInput `pulumi:"class"`
	// This field configures the field `ingressClassName` on the created Ingress
	// resources used to solve ACME challenges that use this challenge solver.
	// This is the recommended way of configuring the ingress class. Only one of
	// `class`, `name` or `ingressClassName` may be specified.
	IngressClassName pulumi.StringPtrInput `pulumi:"ingressClassName"`
	// Optional ingress template used to configure the ACME challenge solver
	// ingress used for HTTP01 challenges.
	IngressTemplate IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput `pulumi:"ingressTemplate"`
	// The name of the ingress resource that should have ACME challenge solving
	// routes inserted into it in order to solve HTTP01 challenges.
	// This is typically used in conjunction with ingress controllers like
	// ingress-gce, which maintains a 1:1 mapping between external IPs and
	// ingress resources. Only one of `class`, `name` or `ingressClassName` may
	// be specified.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Optional pod template used to configure the ACME challenge solver pods
	// used for HTTP01 challenges.
	PodTemplate IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput `pulumi:"podTemplate"`
	// Optional service type for Kubernetes solver service. Supported values
	// are NodePort or ClusterIP. If unset, defaults to NodePort.
	ServiceType pulumi.StringPtrInput `pulumi:"serviceType"`
}

func (IssuerSpecAcmeSolversHttp01IngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01Ingress)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressArgs) ToIssuerSpecAcmeSolversHttp01IngressOutput() IssuerSpecAcmeSolversHttp01IngressOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressArgs) ToIssuerSpecAcmeSolversHttp01IngressOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressArgs) ToIssuerSpecAcmeSolversHttp01IngressPtrOutput() IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressArgs) ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressOutput).ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressArgs, IssuerSpecAcmeSolversHttp01IngressPtr and IssuerSpecAcmeSolversHttp01IngressPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPtrOutput() IssuerSpecAcmeSolversHttp01IngressPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPtrType IssuerSpecAcmeSolversHttp01IngressArgs

func IssuerSpecAcmeSolversHttp01IngressPtr(v *IssuerSpecAcmeSolversHttp01IngressArgs) IssuerSpecAcmeSolversHttp01IngressPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01Ingress)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPtrType) ToIssuerSpecAcmeSolversHttp01IngressPtrOutput() IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPtrType) ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPtrOutput)
}

// The ingress based HTTP01 challenge solver will solve challenges by
// creating or modifying Ingress resources in order to route requests for
// '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are
// provisioned by cert-manager for each Challenge to be completed.
type IssuerSpecAcmeSolversHttp01IngressOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01Ingress)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressOutput) ToIssuerSpecAcmeSolversHttp01IngressOutput() IssuerSpecAcmeSolversHttp01IngressOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressOutput) ToIssuerSpecAcmeSolversHttp01IngressOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressOutput) ToIssuerSpecAcmeSolversHttp01IngressPtrOutput() IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressOutput) ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01Ingress) *IssuerSpecAcmeSolversHttp01Ingress {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPtrOutput)
}

// This field configures the annotation `kubernetes.io/ingress.class` when
// creating Ingress resources to solve ACME challenges that use this
// challenge solver. Only one of `class`, `name` or `ingressClassName` may
// be specified.
func (o IssuerSpecAcmeSolversHttp01IngressOutput) Class() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01Ingress) *string { return v.Class }).(pulumi.StringPtrOutput)
}

// This field configures the field `ingressClassName` on the created Ingress
// resources used to solve ACME challenges that use this challenge solver.
// This is the recommended way of configuring the ingress class. Only one of
// `class`, `name` or `ingressClassName` may be specified.
func (o IssuerSpecAcmeSolversHttp01IngressOutput) IngressClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01Ingress) *string { return v.IngressClassName }).(pulumi.StringPtrOutput)
}

// Optional ingress template used to configure the ACME challenge solver
// ingress used for HTTP01 challenges.
func (o IssuerSpecAcmeSolversHttp01IngressOutput) IngressTemplate() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01Ingress) *IssuerSpecAcmeSolversHttp01IngressIngressTemplate {
		return v.IngressTemplate
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput)
}

// The name of the ingress resource that should have ACME challenge solving
// routes inserted into it in order to solve HTTP01 challenges.
// This is typically used in conjunction with ingress controllers like
// ingress-gce, which maintains a 1:1 mapping between external IPs and
// ingress resources. Only one of `class`, `name` or `ingressClassName` may
// be specified.
func (o IssuerSpecAcmeSolversHttp01IngressOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01Ingress) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Optional pod template used to configure the ACME challenge solver pods
// used for HTTP01 challenges.
func (o IssuerSpecAcmeSolversHttp01IngressOutput) PodTemplate() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01Ingress) *IssuerSpecAcmeSolversHttp01IngressPodTemplate {
		return v.PodTemplate
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput)
}

// Optional service type for Kubernetes solver service. Supported values
// are NodePort or ClusterIP. If unset, defaults to NodePort.
func (o IssuerSpecAcmeSolversHttp01IngressOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01Ingress) *string { return v.ServiceType }).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01Ingress)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPtrOutput() IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01Ingress) IssuerSpecAcmeSolversHttp01Ingress {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01Ingress
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressOutput)
}

// This field configures the annotation `kubernetes.io/ingress.class` when
// creating Ingress resources to solve ACME challenges that use this
// challenge solver. Only one of `class`, `name` or `ingressClassName` may
// be specified.
func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) Class() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01Ingress) *string {
		if v == nil {
			return nil
		}
		return v.Class
	}).(pulumi.StringPtrOutput)
}

// This field configures the field `ingressClassName` on the created Ingress
// resources used to solve ACME challenges that use this challenge solver.
// This is the recommended way of configuring the ingress class. Only one of
// `class`, `name` or `ingressClassName` may be specified.
func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) IngressClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01Ingress) *string {
		if v == nil {
			return nil
		}
		return v.IngressClassName
	}).(pulumi.StringPtrOutput)
}

// Optional ingress template used to configure the ACME challenge solver
// ingress used for HTTP01 challenges.
func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) IngressTemplate() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01Ingress) *IssuerSpecAcmeSolversHttp01IngressIngressTemplate {
		if v == nil {
			return nil
		}
		return v.IngressTemplate
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput)
}

// The name of the ingress resource that should have ACME challenge solving
// routes inserted into it in order to solve HTTP01 challenges.
// This is typically used in conjunction with ingress controllers like
// ingress-gce, which maintains a 1:1 mapping between external IPs and
// ingress resources. Only one of `class`, `name` or `ingressClassName` may
// be specified.
func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01Ingress) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Optional pod template used to configure the ACME challenge solver pods
// used for HTTP01 challenges.
func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) PodTemplate() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01Ingress) *IssuerSpecAcmeSolversHttp01IngressPodTemplate {
		if v == nil {
			return nil
		}
		return v.PodTemplate
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput)
}

// Optional service type for Kubernetes solver service. Supported values
// are NodePort or ClusterIP. If unset, defaults to NodePort.
func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01Ingress) *string {
		if v == nil {
			return nil
		}
		return v.ServiceType
	}).(pulumi.StringPtrOutput)
}

// Optional ingress template used to configure the ACME challenge solver
// ingress used for HTTP01 challenges.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplate struct {
	// ObjectMeta overrides for the ingress used to solve HTTP01 challenges.
	// Only the 'labels' and 'annotations' fields may be set.
	// If labels or annotations overlap with in-built values, the values here
	// will override the in-built values.
	Metadata *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata `pulumi:"metadata"`
}

// IssuerSpecAcmeSolversHttp01IngressIngressTemplateInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs and IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressIngressTemplateInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs{...}
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput
	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput
}

// Optional ingress template used to configure the ACME challenge solver
// ingress used for HTTP01 challenges.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs struct {
	// ObjectMeta overrides for the ingress used to solve HTTP01 challenges.
	// Only the 'labels' and 'annotations' fields may be set.
	// If labels or annotations overlap with in-built values, the values here
	// will override the in-built values.
	Metadata IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput `pulumi:"metadata"`
}

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplate)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput).ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs, IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtr and IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput
}

type issuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs

func IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtr(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressIngressTemplate)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput)
}

// Optional ingress template used to configure the ACME challenge solver
// ingress used for HTTP01 challenges.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplate)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressIngressTemplate) *IssuerSpecAcmeSolversHttp01IngressIngressTemplate {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput)
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges.
// Only the 'labels' and 'annotations' fields may be set.
// If labels or annotations overlap with in-built values, the values here
// will override the in-built values.
func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) Metadata() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressIngressTemplate) *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata {
		return v.Metadata
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressIngressTemplate)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplate) IssuerSpecAcmeSolversHttp01IngressIngressTemplate {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressIngressTemplate
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput)
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges.
// Only the 'labels' and 'annotations' fields may be set.
// If labels or annotations overlap with in-built values, the values here
// will override the in-built values.
func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) Metadata() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplate) *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput)
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges.
// Only the 'labels' and 'annotations' fields may be set.
// If labels or annotations overlap with in-built values, the values here
// will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata struct {
	// Annotations that should be added to the created ACME HTTP01 solver ingress.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver ingress.
	Labels map[string]string `pulumi:"labels"`
}

// IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs and IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs{...}
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput
	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges.
// Only the 'labels' and 'annotations' fields may be set.
// If labels or annotations overlap with in-built values, the values here
// will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs struct {
	// Annotations that should be added to the created ACME HTTP01 solver ingress.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver ingress.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput).ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs, IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtr and IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs

func IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtr(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput)
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges.
// Only the 'labels' and 'annotations' fields may be set.
// If labels or annotations overlap with in-built values, the values here
// will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput)
}

// Annotations that should be added to the created ACME HTTP01 solver ingress.
func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) map[string]string {
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver ingress.
func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput)
}

// Annotations that should be added to the created ACME HTTP01 solver ingress.
func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver ingress.
func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Annotations that should be added to the created ACME HTTP01 solver ingress.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotations struct {
}

// Labels that should be added to the created ACME HTTP01 solver ingress.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabels struct {
}

// Optional pod template used to configure the ACME challenge solver pods
// used for HTTP01 challenges.
type IssuerSpecAcmeSolversHttp01IngressPodTemplate struct {
	// ObjectMeta overrides for the pod used to solve HTTP01 challenges.
	// Only the 'labels' and 'annotations' fields may be set.
	// If labels or annotations overlap with in-built values, the values here
	// will override the in-built values.
	Metadata *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata `pulumi:"metadata"`
	// PodSpec defines overrides for the HTTP01 challenge solver pod.
	// Check ACMEChallengeSolverHTTP01IngressPodSpec to find out currently supported fields.
	// All other fields will be ignored.
	Spec *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec `pulumi:"spec"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput
}

// Optional pod template used to configure the ACME challenge solver pods
// used for HTTP01 challenges.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs struct {
	// ObjectMeta overrides for the pod used to solve HTTP01 challenges.
	// Only the 'labels' and 'annotations' fields may be set.
	// If labels or annotations overlap with in-built values, the values here
	// will override the in-built values.
	Metadata IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput `pulumi:"metadata"`
	// PodSpec defines overrides for the HTTP01 challenge solver pod.
	// Check ACMEChallengeSolverHTTP01IngressPodSpec to find out currently supported fields.
	// All other fields will be ignored.
	Spec IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput `pulumi:"spec"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplate)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplatePtr and IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplatePtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplatePtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplatePtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplate)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplatePtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplatePtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput)
}

// Optional pod template used to configure the ACME challenge solver pods
// used for HTTP01 challenges.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplate)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplate) *IssuerSpecAcmeSolversHttp01IngressPodTemplate {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput)
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges.
// Only the 'labels' and 'annotations' fields may be set.
// If labels or annotations overlap with in-built values, the values here
// will override the in-built values.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) Metadata() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplate) *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata {
		return v.Metadata
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput)
}

// PodSpec defines overrides for the HTTP01 challenge solver pod.
// Check ACMEChallengeSolverHTTP01IngressPodSpec to find out currently supported fields.
// All other fields will be ignored.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) Spec() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplate) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec {
		return v.Spec
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplate)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplate) IssuerSpecAcmeSolversHttp01IngressPodTemplate {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplate
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput)
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges.
// Only the 'labels' and 'annotations' fields may be set.
// If labels or annotations overlap with in-built values, the values here
// will override the in-built values.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) Metadata() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplate) *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput)
}

// PodSpec defines overrides for the HTTP01 challenge solver pod.
// Check ACMEChallengeSolverHTTP01IngressPodSpec to find out currently supported fields.
// All other fields will be ignored.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) Spec() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplate) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput)
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges.
// Only the 'labels' and 'annotations' fields may be set.
// If labels or annotations overlap with in-built values, the values here
// will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata struct {
	// Annotations that should be added to the create ACME HTTP01 solver pods.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver pods.
	Labels map[string]string `pulumi:"labels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges.
// Only the 'labels' and 'annotations' fields may be set.
// If labels or annotations overlap with in-built values, the values here
// will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs struct {
	// Annotations that should be added to the create ACME HTTP01 solver pods.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver pods.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput)
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges.
// Only the 'labels' and 'annotations' fields may be set.
// If labels or annotations overlap with in-built values, the values here
// will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput)
}

// Annotations that should be added to the create ACME HTTP01 solver pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput)
}

// Annotations that should be added to the create ACME HTTP01 solver pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Annotations that should be added to the create ACME HTTP01 solver pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotations struct {
}

// Labels that should be added to the created ACME HTTP01 solver pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabels struct {
}

// PodSpec defines overrides for the HTTP01 challenge solver pod.
// Check ACMEChallengeSolverHTTP01IngressPodSpec to find out currently supported fields.
// All other fields will be ignored.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec struct {
	// If specified, the pod's scheduling constraints
	Affinity *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity `pulumi:"affinity"`
	// If specified, the pod's imagePullSecrets
	ImagePullSecrets []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecrets `pulumi:"imagePullSecrets"`
	// NodeSelector is a selector which must be true for the pod to fit on a node.
	// Selector which must match a node's labels for the pod to be scheduled on that node.
	// More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
	NodeSelector map[string]string `pulumi:"nodeSelector"`
	// If specified, the pod's priorityClassName.
	PriorityClassName *string `pulumi:"priorityClassName"`
	// If specified, the pod's service account
	ServiceAccountName *string `pulumi:"serviceAccountName"`
	// If specified, the pod's tolerations.
	Tolerations []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations `pulumi:"tolerations"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput
}

// PodSpec defines overrides for the HTTP01 challenge solver pod.
// Check ACMEChallengeSolverHTTP01IngressPodSpec to find out currently supported fields.
// All other fields will be ignored.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs struct {
	// If specified, the pod's scheduling constraints
	Affinity IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput `pulumi:"affinity"`
	// If specified, the pod's imagePullSecrets
	ImagePullSecrets IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayInput `pulumi:"imagePullSecrets"`
	// NodeSelector is a selector which must be true for the pod to fit on a node.
	// Selector which must match a node's labels for the pod to be scheduled on that node.
	// More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
	NodeSelector pulumi.StringMapInput `pulumi:"nodeSelector"`
	// If specified, the pod's priorityClassName.
	PriorityClassName pulumi.StringPtrInput `pulumi:"priorityClassName"`
	// If specified, the pod's service account
	ServiceAccountName pulumi.StringPtrInput `pulumi:"serviceAccountName"`
	// If specified, the pod's tolerations.
	Tolerations IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayInput `pulumi:"tolerations"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput)
}

// PodSpec defines overrides for the HTTP01 challenge solver pod.
// Check ACMEChallengeSolverHTTP01IngressPodSpec to find out currently supported fields.
// All other fields will be ignored.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput)
}

// If specified, the pod's scheduling constraints
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) Affinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity {
		return v.Affinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput)
}

// If specified, the pod's imagePullSecrets
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ImagePullSecrets() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecrets {
		return v.ImagePullSecrets
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput)
}

// NodeSelector is a selector which must be true for the pod to fit on a node.
// Selector which must match a node's labels for the pod to be scheduled on that node.
// More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) NodeSelector() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) map[string]string { return v.NodeSelector }).(pulumi.StringMapOutput)
}

// If specified, the pod's priorityClassName.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) PriorityClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *string { return v.PriorityClassName }).(pulumi.StringPtrOutput)
}

// If specified, the pod's service account
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *string { return v.ServiceAccountName }).(pulumi.StringPtrOutput)
}

// If specified, the pod's tolerations.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) Tolerations() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations {
		return v.Tolerations
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput)
}

// If specified, the pod's scheduling constraints
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) Affinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity {
		if v == nil {
			return nil
		}
		return v.Affinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput)
}

// If specified, the pod's imagePullSecrets
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) ImagePullSecrets() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecrets {
		if v == nil {
			return nil
		}
		return v.ImagePullSecrets
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput)
}

// NodeSelector is a selector which must be true for the pod to fit on a node.
// Selector which must match a node's labels for the pod to be scheduled on that node.
// More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) NodeSelector() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) map[string]string {
		if v == nil {
			return nil
		}
		return v.NodeSelector
	}).(pulumi.StringMapOutput)
}

// If specified, the pod's priorityClassName.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) PriorityClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.PriorityClassName
	}).(pulumi.StringPtrOutput)
}

// If specified, the pod's service account
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountName
	}).(pulumi.StringPtrOutput)
}

// If specified, the pod's tolerations.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) Tolerations() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations {
		if v == nil {
			return nil
		}
		return v.Tolerations
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput)
}

// If specified, the pod's scheduling constraints
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity struct {
	// Describes node affinity scheduling rules for the pod.
	NodeAffinity *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity `pulumi:"nodeAffinity"`
	// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
	PodAffinity *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity `pulumi:"podAffinity"`
	// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
	PodAntiAffinity *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity `pulumi:"podAntiAffinity"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput
}

// If specified, the pod's scheduling constraints
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs struct {
	// Describes node affinity scheduling rules for the pod.
	NodeAffinity IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput `pulumi:"nodeAffinity"`
	// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
	PodAffinity IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput `pulumi:"podAffinity"`
	// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
	PodAntiAffinity IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput `pulumi:"podAntiAffinity"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput)
}

// If specified, the pod's scheduling constraints
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput)
}

// Describes node affinity scheduling rules for the pod.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) NodeAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity {
		return v.NodeAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) PodAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity {
		return v.PodAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) PodAntiAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity {
		return v.PodAntiAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput)
}

// Describes node affinity scheduling rules for the pod.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) NodeAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity {
		if v == nil {
			return nil
		}
		return v.NodeAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) PodAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity {
		if v == nil {
			return nil
		}
		return v.PodAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) PodAntiAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity {
		if v == nil {
			return nil
		}
		return v.PodAntiAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput)
}

// Describes node affinity scheduling rules for the pod.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy
	// the affinity expressions specified by this field, but it may choose
	// a node that violates one or more of the expressions. The node that is
	// most preferred is the one with the greatest sum of weights, i.e.
	// for each node that meets all of the scheduling requirements (resource
	// request, requiredDuringScheduling affinity expressions, etc.),
	// compute a sum by iterating through the elements of this field and adding
	// "weight" to the sum if the node matches the corresponding matchExpressions; the
	// node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at
	// scheduling time, the pod will not be scheduled onto the node.
	// If the affinity requirements specified by this field cease to be met
	// at some point during pod execution (e.g. due to an update), the system
	// may or may not try to eventually evict the pod from its node.
	RequiredDuringSchedulingIgnoredDuringExecution *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput
}

// Describes node affinity scheduling rules for the pod.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy
	// the affinity expressions specified by this field, but it may choose
	// a node that violates one or more of the expressions. The node that is
	// most preferred is the one with the greatest sum of weights, i.e.
	// for each node that meets all of the scheduling requirements (resource
	// request, requiredDuringScheduling affinity expressions, etc.),
	// compute a sum by iterating through the elements of this field and adding
	// "weight" to the sum if the node matches the corresponding matchExpressions; the
	// node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at
	// scheduling time, the pod will not be scheduled onto the node.
	// If the affinity requirements specified by this field cease to be met
	// at some point during pod execution (e.g. due to an update), the system
	// may or may not try to eventually evict the pod from its node.
	RequiredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput)
}

// Describes node affinity scheduling rules for the pod.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy
// the affinity expressions specified by this field, but it may choose
// a node that violates one or more of the expressions. The node that is
// most preferred is the one with the greatest sum of weights, i.e.
// for each node that meets all of the scheduling requirements (resource
// request, requiredDuringScheduling affinity expressions, etc.),
// compute a sum by iterating through the elements of this field and adding
// "weight" to the sum if the node matches the corresponding matchExpressions; the
// node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at
// scheduling time, the pod will not be scheduled onto the node.
// If the affinity requirements specified by this field cease to be met
// at some point during pod execution (e.g. due to an update), the system
// may or may not try to eventually evict the pod from its node.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy
// the affinity expressions specified by this field, but it may choose
// a node that violates one or more of the expressions. The node that is
// most preferred is the one with the greatest sum of weights, i.e.
// for each node that meets all of the scheduling requirements (resource
// request, requiredDuringScheduling affinity expressions, etc.),
// compute a sum by iterating through the elements of this field and adding
// "weight" to the sum if the node matches the corresponding matchExpressions; the
// node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at
// scheduling time, the pod will not be scheduled onto the node.
// If the affinity requirements specified by this field cease to be met
// at some point during pod execution (e.g. due to an update), the system
// may or may not try to eventually evict the pod from its node.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

// An empty preferred scheduling term matches all objects with implicit weight 0
// (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// A node selector term, associated with the corresponding weight.
	Preference IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference `pulumi:"preference"`
	// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
	Weight int `pulumi:"weight"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// An empty preferred scheduling term matches all objects with implicit weight 0
// (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// A node selector term, associated with the corresponding weight.
	Preference IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput `pulumi:"preference"`
	// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// An empty preferred scheduling term matches all objects with implicit weight 0
// (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// A node selector term, associated with the corresponding weight.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Preference() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
		return v.Preference
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput)
}

// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution) int {
		return v.Weight
	}).(pulumi.IntOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// A node selector term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields `pulumi:"matchFields"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput
}

// A node selector term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput `pulumi:"matchFields"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput)
}

// A node selector term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o
}

// A list of node selector requirements by node's labels.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput)
}

// A list of node selector requirements by node's fields.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) MatchFields() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
		return v.MatchFields
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. If the operator is Gt or Lt, the values
	// array must have a single element, which will be interpreted as an integer.
	// This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. If the operator is Gt or Lt, the values
	// array must have a single element, which will be interpreted as an integer.
	// This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return o
}

// The label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. If the operator is Gt or Lt, the values
// array must have a single element, which will be interpreted as an integer.
// This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. If the operator is Gt or Lt, the values
	// array must have a single element, which will be interpreted as an integer.
	// This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. If the operator is Gt or Lt, the values
	// array must have a single element, which will be interpreted as an integer.
	// This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return o
}

// The label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. If the operator is Gt or Lt, the values
// array must have a single element, which will be interpreted as an integer.
// This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput)
}

// If the affinity requirements specified by this field are not met at
// scheduling time, the pod will not be scheduled onto the node.
// If the affinity requirements specified by this field cease to be met
// at some point during pod execution (e.g. due to an update), the system
// may or may not try to eventually evict the pod from its node.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Required. A list of node selector terms. The terms are ORed.
	NodeSelectorTerms []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms `pulumi:"nodeSelectorTerms"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// If the affinity requirements specified by this field are not met at
// scheduling time, the pod will not be scheduled onto the node.
// If the affinity requirements specified by this field cease to be met
// at some point during pod execution (e.g. due to an update), the system
// may or may not try to eventually evict the pod from its node.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// Required. A list of node selector terms. The terms are ORed.
	NodeSelectorTerms IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput `pulumi:"nodeSelectorTerms"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

// If the affinity requirements specified by this field are not met at
// scheduling time, the pod will not be scheduled onto the node.
// If the affinity requirements specified by this field cease to be met
// at some point during pod execution (e.g. due to an update), the system
// may or may not try to eventually evict the pod from its node.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

// Required. A list of node selector terms. The terms are ORed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) NodeSelectorTerms() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		return v.NodeSelectorTerms
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// Required. A list of node selector terms. The terms are ORed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) NodeSelectorTerms() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		if v == nil {
			return nil
		}
		return v.NodeSelectorTerms
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

// A null or empty node selector term matches no objects. The requirements of
// them are ANDed.
// The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields `pulumi:"matchFields"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput
}

// A null or empty node selector term matches no objects. The requirements of
// them are ANDed.
// The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput `pulumi:"matchFields"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

// A null or empty node selector term matches no objects. The requirements of
// them are ANDed.
// The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return o
}

// A list of node selector requirements by node's labels.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput)
}

// A list of node selector requirements by node's fields.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) MatchFields() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
		return v.MatchFields
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. If the operator is Gt or Lt, the values
	// array must have a single element, which will be interpreted as an integer.
	// This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. If the operator is Gt or Lt, the values
	// array must have a single element, which will be interpreted as an integer.
	// This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return o
}

// The label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. If the operator is Gt or Lt, the values
// array must have a single element, which will be interpreted as an integer.
// This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. If the operator is Gt or Lt, the values
	// array must have a single element, which will be interpreted as an integer.
	// This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. If the operator is Gt or Lt, the values
	// array must have a single element, which will be interpreted as an integer.
	// This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return o
}

// The label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. If the operator is Gt or Lt, the values
// array must have a single element, which will be interpreted as an integer.
// This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy
	// the affinity expressions specified by this field, but it may choose
	// a node that violates one or more of the expressions. The node that is
	// most preferred is the one with the greatest sum of weights, i.e.
	// for each node that meets all of the scheduling requirements (resource
	// request, requiredDuringScheduling affinity expressions, etc.),
	// compute a sum by iterating through the elements of this field and adding
	// "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
	// node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at
	// scheduling time, the pod will not be scheduled onto the node.
	// If the affinity requirements specified by this field cease to be met
	// at some point during pod execution (e.g. due to a pod label update), the
	// system may or may not try to eventually evict the pod from its node.
	// When there are multiple elements, the lists of nodes corresponding to each
	// podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy
	// the affinity expressions specified by this field, but it may choose
	// a node that violates one or more of the expressions. The node that is
	// most preferred is the one with the greatest sum of weights, i.e.
	// for each node that meets all of the scheduling requirements (resource
	// request, requiredDuringScheduling affinity expressions, etc.),
	// compute a sum by iterating through the elements of this field and adding
	// "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
	// node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at
	// scheduling time, the pod will not be scheduled onto the node.
	// If the affinity requirements specified by this field cease to be met
	// at some point during pod execution (e.g. due to a pod label update), the
	// system may or may not try to eventually evict the pod from its node.
	// When there are multiple elements, the lists of nodes corresponding to each
	// podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy
// the affinity expressions specified by this field, but it may choose
// a node that violates one or more of the expressions. The node that is
// most preferred is the one with the greatest sum of weights, i.e.
// for each node that meets all of the scheduling requirements (resource
// request, requiredDuringScheduling affinity expressions, etc.),
// compute a sum by iterating through the elements of this field and adding
// "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
// node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at
// scheduling time, the pod will not be scheduled onto the node.
// If the affinity requirements specified by this field cease to be met
// at some point during pod execution (e.g. due to a pod label update), the
// system may or may not try to eventually evict the pod from its node.
// When there are multiple elements, the lists of nodes corresponding to each
// podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy
// the affinity expressions specified by this field, but it may choose
// a node that violates one or more of the expressions. The node that is
// most preferred is the one with the greatest sum of weights, i.e.
// for each node that meets all of the scheduling requirements (resource
// request, requiredDuringScheduling affinity expressions, etc.),
// compute a sum by iterating through the elements of this field and adding
// "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
// node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at
// scheduling time, the pod will not be scheduled onto the node.
// If the affinity requirements specified by this field cease to be met
// at some point during pod execution (e.g. due to a pod label update), the
// system may or may not try to eventually evict the pod from its node.
// When there are multiple elements, the lists of nodes corresponding to each
// podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm,
	// in the range 1-100.
	Weight int `pulumi:"weight"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm,
	// in the range 1-100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// Required. A pod affinity term, associated with the corresponding weight.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) PodAffinityTerm() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
		return v.PodAffinityTerm
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// weight associated with matching the corresponding podAffinityTerm,
// in the range 1-100.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution) int {
		return v.Weight
	}).(pulumi.IntOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// A label query over a set of resources, in this case pods.
	// If it's null, this PodAffinityTerm matches with no Pods.
	LabelSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `pulumi:"labelSelector"`
	// MatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
	// Also, matchLabelKeys cannot be set when labelSelector isn't set.
	// This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
	MatchLabelKeys []string `pulumi:"matchLabelKeys"`
	// MismatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
	// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
	// This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
	MismatchLabelKeys []string `pulumi:"mismatchLabelKeys"`
	// A label query over the set of namespaces that the term applies to.
	// The term is applied to the union of the namespaces selected by this field
	// and the ones listed in the namespaces field.
	// null selector and null or empty namespaces list means "this pod's namespace".
	// An empty selector ({}) matches all namespaces.
	NamespaceSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector `pulumi:"namespaceSelector"`
	// namespaces specifies a static list of namespace names that the term applies to.
	// The term is applied to the union of the namespaces listed in this field
	// and the ones selected by namespaceSelector.
	// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
	// the labelSelector in the specified namespaces, where co-located is defined as running on a node
	// whose value of the label with key topologyKey matches that of any node on which any of the
	// selected pods is running.
	// Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs struct {
	// A label query over a set of resources, in this case pods.
	// If it's null, this PodAffinityTerm matches with no Pods.
	LabelSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput `pulumi:"labelSelector"`
	// MatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
	// Also, matchLabelKeys cannot be set when labelSelector isn't set.
	// This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
	MatchLabelKeys pulumi.StringArrayInput `pulumi:"matchLabelKeys"`
	// MismatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
	// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
	// This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
	MismatchLabelKeys pulumi.StringArrayInput `pulumi:"mismatchLabelKeys"`
	// A label query over the set of namespaces that the term applies to.
	// The term is applied to the union of the namespaces selected by this field
	// and the ones listed in the namespaces field.
	// null selector and null or empty namespaces list means "this pod's namespace".
	// An empty selector ({}) matches all namespaces.
	NamespaceSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput `pulumi:"namespaceSelector"`
	// namespaces specifies a static list of namespace names that the term applies to.
	// The term is applied to the union of the namespaces listed in this field
	// and the ones selected by namespaceSelector.
	// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
	// the labelSelector in the specified namespaces, where co-located is defined as running on a node
	// whose value of the label with key topologyKey matches that of any node on which any of the
	// selected pods is running.
	// Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) LabelSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return v.LabelSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// MatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
// Also, matchLabelKeys cannot be set when labelSelector isn't set.
// This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

// MismatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
// This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) NamespaceSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
		return v.NamespaceSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput)
}

// namespaces specifies a static list of namespace names that the term applies to.
// The term is applied to the union of the namespaces listed in this field
// and the ones selected by namespaceSelector.
// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
// the labelSelector in the specified namespaces, where co-located is defined as running on a node
// whose value of the label with key topologyKey matches that of any node on which any of the
// selected pods is running.
// Empty topologyKey is not allowed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) string {
		return v.TopologyKey
	}).(pulumi.StringOutput)
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels struct {
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput)
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchLabels struct {
}

// Defines a set of pods (namely those matching the labelSelector
// relative to the given namespace(s)) that this pod should be
// co-located (affinity) or not co-located (anti-affinity) with,
// where co-located is defined as running on a node whose value of
// the label with key <topologyKey> matches that of any node on which
// a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// A label query over a set of resources, in this case pods.
	// If it's null, this PodAffinityTerm matches with no Pods.
	LabelSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `pulumi:"labelSelector"`
	// MatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
	// Also, matchLabelKeys cannot be set when labelSelector isn't set.
	// This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
	MatchLabelKeys []string `pulumi:"matchLabelKeys"`
	// MismatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
	// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
	// This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
	MismatchLabelKeys []string `pulumi:"mismatchLabelKeys"`
	// A label query over the set of namespaces that the term applies to.
	// The term is applied to the union of the namespaces selected by this field
	// and the ones listed in the namespaces field.
	// null selector and null or empty namespaces list means "this pod's namespace".
	// An empty selector ({}) matches all namespaces.
	NamespaceSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector `pulumi:"namespaceSelector"`
	// namespaces specifies a static list of namespace names that the term applies to.
	// The term is applied to the union of the namespaces listed in this field
	// and the ones selected by namespaceSelector.
	// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
	// the labelSelector in the specified namespaces, where co-located is defined as running on a node
	// whose value of the label with key topologyKey matches that of any node on which any of the
	// selected pods is running.
	// Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// Defines a set of pods (namely those matching the labelSelector
// relative to the given namespace(s)) that this pod should be
// co-located (affinity) or not co-located (anti-affinity) with,
// where co-located is defined as running on a node whose value of
// the label with key <topologyKey> matches that of any node on which
// a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// A label query over a set of resources, in this case pods.
	// If it's null, this PodAffinityTerm matches with no Pods.
	LabelSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput `pulumi:"labelSelector"`
	// MatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
	// Also, matchLabelKeys cannot be set when labelSelector isn't set.
	// This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
	MatchLabelKeys pulumi.StringArrayInput `pulumi:"matchLabelKeys"`
	// MismatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
	// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
	// This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
	MismatchLabelKeys pulumi.StringArrayInput `pulumi:"mismatchLabelKeys"`
	// A label query over the set of namespaces that the term applies to.
	// The term is applied to the union of the namespaces selected by this field
	// and the ones listed in the namespaces field.
	// null selector and null or empty namespaces list means "this pod's namespace".
	// An empty selector ({}) matches all namespaces.
	NamespaceSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput `pulumi:"namespaceSelector"`
	// namespaces specifies a static list of namespace names that the term applies to.
	// The term is applied to the union of the namespaces listed in this field
	// and the ones selected by namespaceSelector.
	// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
	// the labelSelector in the specified namespaces, where co-located is defined as running on a node
	// whose value of the label with key topologyKey matches that of any node on which any of the
	// selected pods is running.
	// Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// Defines a set of pods (namely those matching the labelSelector
// relative to the given namespace(s)) that this pod should be
// co-located (affinity) or not co-located (anti-affinity) with,
// where co-located is defined as running on a node whose value of
// the label with key <topologyKey> matches that of any node on which
// a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) LabelSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return v.LabelSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// MatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
// Also, matchLabelKeys cannot be set when labelSelector isn't set.
// This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

// MismatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
// This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) NamespaceSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
		return v.NamespaceSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput)
}

// namespaces specifies a static list of namespace names that the term applies to.
// The term is applied to the union of the namespaces listed in this field
// and the ones selected by namespaceSelector.
// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
// the labelSelector in the specified namespaces, where co-located is defined as running on a node
// whose value of the label with key topologyKey matches that of any node on which any of the
// selected pods is running.
// Empty topologyKey is not allowed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) string {
		return v.TopologyKey
	}).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels struct {
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput)
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchLabels struct {
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy
	// the anti-affinity expressions specified by this field, but it may choose
	// a node that violates one or more of the expressions. The node that is
	// most preferred is the one with the greatest sum of weights, i.e.
	// for each node that meets all of the scheduling requirements (resource
	// request, requiredDuringScheduling anti-affinity expressions, etc.),
	// compute a sum by iterating through the elements of this field and adding
	// "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
	// node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the anti-affinity requirements specified by this field are not met at
	// scheduling time, the pod will not be scheduled onto the node.
	// If the anti-affinity requirements specified by this field cease to be met
	// at some point during pod execution (e.g. due to a pod label update), the
	// system may or may not try to eventually evict the pod from its node.
	// When there are multiple elements, the lists of nodes corresponding to each
	// podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy
	// the anti-affinity expressions specified by this field, but it may choose
	// a node that violates one or more of the expressions. The node that is
	// most preferred is the one with the greatest sum of weights, i.e.
	// for each node that meets all of the scheduling requirements (resource
	// request, requiredDuringScheduling anti-affinity expressions, etc.),
	// compute a sum by iterating through the elements of this field and adding
	// "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
	// node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the anti-affinity requirements specified by this field are not met at
	// scheduling time, the pod will not be scheduled onto the node.
	// If the anti-affinity requirements specified by this field cease to be met
	// at some point during pod execution (e.g. due to a pod label update), the
	// system may or may not try to eventually evict the pod from its node.
	// When there are multiple elements, the lists of nodes corresponding to each
	// podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy
// the anti-affinity expressions specified by this field, but it may choose
// a node that violates one or more of the expressions. The node that is
// most preferred is the one with the greatest sum of weights, i.e.
// for each node that meets all of the scheduling requirements (resource
// request, requiredDuringScheduling anti-affinity expressions, etc.),
// compute a sum by iterating through the elements of this field and adding
// "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
// node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the anti-affinity requirements specified by this field are not met at
// scheduling time, the pod will not be scheduled onto the node.
// If the anti-affinity requirements specified by this field cease to be met
// at some point during pod execution (e.g. due to a pod label update), the
// system may or may not try to eventually evict the pod from its node.
// When there are multiple elements, the lists of nodes corresponding to each
// podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy
// the anti-affinity expressions specified by this field, but it may choose
// a node that violates one or more of the expressions. The node that is
// most preferred is the one with the greatest sum of weights, i.e.
// for each node that meets all of the scheduling requirements (resource
// request, requiredDuringScheduling anti-affinity expressions, etc.),
// compute a sum by iterating through the elements of this field and adding
// "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
// node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the anti-affinity requirements specified by this field are not met at
// scheduling time, the pod will not be scheduled onto the node.
// If the anti-affinity requirements specified by this field cease to be met
// at some point during pod execution (e.g. due to a pod label update), the
// system may or may not try to eventually evict the pod from its node.
// When there are multiple elements, the lists of nodes corresponding to each
// podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm,
	// in the range 1-100.
	Weight int `pulumi:"weight"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm,
	// in the range 1-100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// Required. A pod affinity term, associated with the corresponding weight.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) PodAffinityTerm() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
		return v.PodAffinityTerm
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// weight associated with matching the corresponding podAffinityTerm,
// in the range 1-100.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution) int {
		return v.Weight
	}).(pulumi.IntOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// A label query over a set of resources, in this case pods.
	// If it's null, this PodAffinityTerm matches with no Pods.
	LabelSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `pulumi:"labelSelector"`
	// MatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
	// Also, matchLabelKeys cannot be set when labelSelector isn't set.
	// This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
	MatchLabelKeys []string `pulumi:"matchLabelKeys"`
	// MismatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
	// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
	// This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
	MismatchLabelKeys []string `pulumi:"mismatchLabelKeys"`
	// A label query over the set of namespaces that the term applies to.
	// The term is applied to the union of the namespaces selected by this field
	// and the ones listed in the namespaces field.
	// null selector and null or empty namespaces list means "this pod's namespace".
	// An empty selector ({}) matches all namespaces.
	NamespaceSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector `pulumi:"namespaceSelector"`
	// namespaces specifies a static list of namespace names that the term applies to.
	// The term is applied to the union of the namespaces listed in this field
	// and the ones selected by namespaceSelector.
	// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
	// the labelSelector in the specified namespaces, where co-located is defined as running on a node
	// whose value of the label with key topologyKey matches that of any node on which any of the
	// selected pods is running.
	// Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs struct {
	// A label query over a set of resources, in this case pods.
	// If it's null, this PodAffinityTerm matches with no Pods.
	LabelSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput `pulumi:"labelSelector"`
	// MatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
	// Also, matchLabelKeys cannot be set when labelSelector isn't set.
	// This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
	MatchLabelKeys pulumi.StringArrayInput `pulumi:"matchLabelKeys"`
	// MismatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
	// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
	// This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
	MismatchLabelKeys pulumi.StringArrayInput `pulumi:"mismatchLabelKeys"`
	// A label query over the set of namespaces that the term applies to.
	// The term is applied to the union of the namespaces selected by this field
	// and the ones listed in the namespaces field.
	// null selector and null or empty namespaces list means "this pod's namespace".
	// An empty selector ({}) matches all namespaces.
	NamespaceSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput `pulumi:"namespaceSelector"`
	// namespaces specifies a static list of namespace names that the term applies to.
	// The term is applied to the union of the namespaces listed in this field
	// and the ones selected by namespaceSelector.
	// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
	// the labelSelector in the specified namespaces, where co-located is defined as running on a node
	// whose value of the label with key topologyKey matches that of any node on which any of the
	// selected pods is running.
	// Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) LabelSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return v.LabelSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// MatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
// Also, matchLabelKeys cannot be set when labelSelector isn't set.
// This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

// MismatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
// This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) NamespaceSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
		return v.NamespaceSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput)
}

// namespaces specifies a static list of namespace names that the term applies to.
// The term is applied to the union of the namespaces listed in this field
// and the ones selected by namespaceSelector.
// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
// the labelSelector in the specified namespaces, where co-located is defined as running on a node
// whose value of the label with key topologyKey matches that of any node on which any of the
// selected pods is running.
// Empty topologyKey is not allowed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) string {
		return v.TopologyKey
	}).(pulumi.StringOutput)
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels struct {
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput)
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchLabels struct {
}

// Defines a set of pods (namely those matching the labelSelector
// relative to the given namespace(s)) that this pod should be
// co-located (affinity) or not co-located (anti-affinity) with,
// where co-located is defined as running on a node whose value of
// the label with key <topologyKey> matches that of any node on which
// a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// A label query over a set of resources, in this case pods.
	// If it's null, this PodAffinityTerm matches with no Pods.
	LabelSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `pulumi:"labelSelector"`
	// MatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
	// Also, matchLabelKeys cannot be set when labelSelector isn't set.
	// This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
	MatchLabelKeys []string `pulumi:"matchLabelKeys"`
	// MismatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
	// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
	// This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
	MismatchLabelKeys []string `pulumi:"mismatchLabelKeys"`
	// A label query over the set of namespaces that the term applies to.
	// The term is applied to the union of the namespaces selected by this field
	// and the ones listed in the namespaces field.
	// null selector and null or empty namespaces list means "this pod's namespace".
	// An empty selector ({}) matches all namespaces.
	NamespaceSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector `pulumi:"namespaceSelector"`
	// namespaces specifies a static list of namespace names that the term applies to.
	// The term is applied to the union of the namespaces listed in this field
	// and the ones selected by namespaceSelector.
	// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
	// the labelSelector in the specified namespaces, where co-located is defined as running on a node
	// whose value of the label with key topologyKey matches that of any node on which any of the
	// selected pods is running.
	// Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// Defines a set of pods (namely those matching the labelSelector
// relative to the given namespace(s)) that this pod should be
// co-located (affinity) or not co-located (anti-affinity) with,
// where co-located is defined as running on a node whose value of
// the label with key <topologyKey> matches that of any node on which
// a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// A label query over a set of resources, in this case pods.
	// If it's null, this PodAffinityTerm matches with no Pods.
	LabelSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput `pulumi:"labelSelector"`
	// MatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
	// Also, matchLabelKeys cannot be set when labelSelector isn't set.
	// This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
	MatchLabelKeys pulumi.StringArrayInput `pulumi:"matchLabelKeys"`
	// MismatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
	// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
	// This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
	MismatchLabelKeys pulumi.StringArrayInput `pulumi:"mismatchLabelKeys"`
	// A label query over the set of namespaces that the term applies to.
	// The term is applied to the union of the namespaces selected by this field
	// and the ones listed in the namespaces field.
	// null selector and null or empty namespaces list means "this pod's namespace".
	// An empty selector ({}) matches all namespaces.
	NamespaceSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput `pulumi:"namespaceSelector"`
	// namespaces specifies a static list of namespace names that the term applies to.
	// The term is applied to the union of the namespaces listed in this field
	// and the ones selected by namespaceSelector.
	// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
	// the labelSelector in the specified namespaces, where co-located is defined as running on a node
	// whose value of the label with key topologyKey matches that of any node on which any of the
	// selected pods is running.
	// Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// Defines a set of pods (namely those matching the labelSelector
// relative to the given namespace(s)) that this pod should be
// co-located (affinity) or not co-located (anti-affinity) with,
// where co-located is defined as running on a node whose value of
// the label with key <topologyKey> matches that of any node on which
// a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) LabelSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return v.LabelSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// MatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
// Also, matchLabelKeys cannot be set when labelSelector isn't set.
// This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

// MismatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
// This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) NamespaceSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
		return v.NamespaceSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput)
}

// namespaces specifies a static list of namespace names that the term applies to.
// The term is applied to the union of the namespaces listed in this field
// and the ones selected by namespaceSelector.
// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
// the labelSelector in the specified namespaces, where co-located is defined as running on a node
// whose value of the label with key topologyKey matches that of any node on which any of the
// selected pods is running.
// Empty topologyKey is not allowed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) string {
		return v.TopologyKey
	}).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels struct {
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput)
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchLabels struct {
}

// LocalObjectReference contains enough information to let you locate the
// referenced object inside the same namespace.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecrets struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name *string `pulumi:"name"`
}

// Defaults sets the appropriate defaults for IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecrets
func (val *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecrets) Defaults() *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecrets {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		name_ := ""
		tmp.Name = &name_
	}
	return &tmp
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput
}

// LocalObjectReference contains enough information to let you locate the
// referenced object inside the same namespace.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

// Defaults sets the appropriate defaults for IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArgs
func (val *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArgs) Defaults() *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		tmp.Name = pulumi.StringPtr("")
	}
	return &tmp
}
func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecrets)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecrets)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput)
}

// LocalObjectReference contains enough information to let you locate the
// referenced object inside the same namespace.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecrets)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput {
	return o
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecrets) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecrets)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecrets {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecrets)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput)
}

// NodeSelector is a selector which must be true for the pod to fit on a node.
// Selector which must match a node's labels for the pod to be scheduled on that node.
// More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelector struct {
}

// The pod this Toleration is attached to tolerates any taint that matches
// the triple <key,value,effect> using the matching operator <operator>.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations struct {
	// Effect indicates the taint effect to match. Empty means match all taint effects.
	// When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect *string `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys.
	// If the key is empty, operator must be Exists; this combination means to match all values and all keys.
	Key *string `pulumi:"key"`
	// Operator represents a key's relationship to the value.
	// Valid operators are Exists and Equal. Defaults to Equal.
	// Exists is equivalent to wildcard for value, so that a pod can
	// tolerate all taints of a particular category.
	Operator *string `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be
	// of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
	// it is not set, which means tolerate the taint forever (do not evict). Zero and
	// negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds *int `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to.
	// If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value *string `pulumi:"value"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput
}

// The pod this Toleration is attached to tolerates any taint that matches
// the triple <key,value,effect> using the matching operator <operator>.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs struct {
	// Effect indicates the taint effect to match. Empty means match all taint effects.
	// When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys.
	// If the key is empty, operator must be Exists; this combination means to match all values and all keys.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Operator represents a key's relationship to the value.
	// Valid operators are Exists and Equal. Defaults to Equal.
	// Exists is equivalent to wildcard for value, so that a pod can
	// tolerate all taints of a particular category.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be
	// of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
	// it is not set, which means tolerate the taint forever (do not evict). Zero and
	// negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds pulumi.IntPtrInput `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to.
	// If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput)
}

// The pod this Toleration is attached to tolerates any taint that matches
// the triple <key,value,effect> using the matching operator <operator>.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return o
}

// Effect indicates the taint effect to match. Empty means match all taint effects.
// When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

// Key is the taint key that the toleration applies to. Empty means match all taint keys.
// If the key is empty, operator must be Exists; this combination means to match all values and all keys.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Operator represents a key's relationship to the value.
// Valid operators are Exists and Equal. Defaults to Equal.
// Exists is equivalent to wildcard for value, so that a pod can
// tolerate all taints of a particular category.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// TolerationSeconds represents the period of time the toleration (which must be
// of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
// it is not set, which means tolerate the taint forever (do not evict). Zero and
// negative values will be treated as 0 (evict immediately) by the system.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) TolerationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *int { return v.TolerationSeconds }).(pulumi.IntPtrOutput)
}

// Value is the taint value the toleration matches to.
// If the operator is Exists, the value should be empty, otherwise just a regular string.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput)
}

// Selector selects a set of DNSNames on the Certificate resource that
// should be solved using this challenge solver.
// If not specified, the solver will be treated as the 'default' solver
// with the lowest priority, i.e. if any other solver has a more specific
// match, it will be used instead.
type IssuerSpecAcmeSolversSelector struct {
	// List of DNSNames that this solver will be used to solve.
	// If specified and a match is found, a dnsNames selector will take
	// precedence over a dnsZones selector.
	// If multiple solvers match with the same dnsNames value, the solver
	// with the most matching labels in matchLabels will be selected.
	// If neither has more matches, the solver defined earlier in the list
	// will be selected.
	DnsNames []string `pulumi:"dnsNames"`
	// List of DNSZones that this solver will be used to solve.
	// The most specific DNS zone match specified here will take precedence
	// over other DNS zone matches, so a solver specifying sys.example.com
	// will be selected over one specifying example.com for the domain
	// www.sys.example.com.
	// If multiple solvers match with the same dnsZones value, the solver
	// with the most matching labels in matchLabels will be selected.
	// If neither has more matches, the solver defined earlier in the list
	// will be selected.
	DnsZones []string `pulumi:"dnsZones"`
	// A label selector that is used to refine the set of certificate's that
	// this challenge solver will apply to.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversSelectorInput is an input type that accepts IssuerSpecAcmeSolversSelectorArgs and IssuerSpecAcmeSolversSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversSelectorInput` via:
//
//	IssuerSpecAcmeSolversSelectorArgs{...}
type IssuerSpecAcmeSolversSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversSelectorOutput() IssuerSpecAcmeSolversSelectorOutput
	ToIssuerSpecAcmeSolversSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversSelectorOutput
}

// Selector selects a set of DNSNames on the Certificate resource that
// should be solved using this challenge solver.
// If not specified, the solver will be treated as the 'default' solver
// with the lowest priority, i.e. if any other solver has a more specific
// match, it will be used instead.
type IssuerSpecAcmeSolversSelectorArgs struct {
	// List of DNSNames that this solver will be used to solve.
	// If specified and a match is found, a dnsNames selector will take
	// precedence over a dnsZones selector.
	// If multiple solvers match with the same dnsNames value, the solver
	// with the most matching labels in matchLabels will be selected.
	// If neither has more matches, the solver defined earlier in the list
	// will be selected.
	DnsNames pulumi.StringArrayInput `pulumi:"dnsNames"`
	// List of DNSZones that this solver will be used to solve.
	// The most specific DNS zone match specified here will take precedence
	// over other DNS zone matches, so a solver specifying sys.example.com
	// will be selected over one specifying example.com for the domain
	// www.sys.example.com.
	// If multiple solvers match with the same dnsZones value, the solver
	// with the most matching labels in matchLabels will be selected.
	// If neither has more matches, the solver defined earlier in the list
	// will be selected.
	DnsZones pulumi.StringArrayInput `pulumi:"dnsZones"`
	// A label selector that is used to refine the set of certificate's that
	// this challenge solver will apply to.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversSelectorArgs) ToIssuerSpecAcmeSolversSelectorOutput() IssuerSpecAcmeSolversSelectorOutput {
	return i.ToIssuerSpecAcmeSolversSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversSelectorArgs) ToIssuerSpecAcmeSolversSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversSelectorOutput)
}

func (i IssuerSpecAcmeSolversSelectorArgs) ToIssuerSpecAcmeSolversSelectorPtrOutput() IssuerSpecAcmeSolversSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversSelectorArgs) ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversSelectorOutput).ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversSelectorArgs, IssuerSpecAcmeSolversSelectorPtr and IssuerSpecAcmeSolversSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversSelectorPtrInput` via:
//
//	        IssuerSpecAcmeSolversSelectorArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversSelectorPtrOutput() IssuerSpecAcmeSolversSelectorPtrOutput
	ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversSelectorPtrOutput
}

type issuerSpecAcmeSolversSelectorPtrType IssuerSpecAcmeSolversSelectorArgs

func IssuerSpecAcmeSolversSelectorPtr(v *IssuerSpecAcmeSolversSelectorArgs) IssuerSpecAcmeSolversSelectorPtrInput {
	return (*issuerSpecAcmeSolversSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversSelectorPtrType) ToIssuerSpecAcmeSolversSelectorPtrOutput() IssuerSpecAcmeSolversSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversSelectorPtrType) ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversSelectorPtrOutput)
}

// Selector selects a set of DNSNames on the Certificate resource that
// should be solved using this challenge solver.
// If not specified, the solver will be treated as the 'default' solver
// with the lowest priority, i.e. if any other solver has a more specific
// match, it will be used instead.
type IssuerSpecAcmeSolversSelectorOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversSelectorOutput) ToIssuerSpecAcmeSolversSelectorOutput() IssuerSpecAcmeSolversSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversSelectorOutput) ToIssuerSpecAcmeSolversSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversSelectorOutput) ToIssuerSpecAcmeSolversSelectorPtrOutput() IssuerSpecAcmeSolversSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversSelectorOutput) ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversSelector) *IssuerSpecAcmeSolversSelector {
		return &v
	}).(IssuerSpecAcmeSolversSelectorPtrOutput)
}

// List of DNSNames that this solver will be used to solve.
// If specified and a match is found, a dnsNames selector will take
// precedence over a dnsZones selector.
// If multiple solvers match with the same dnsNames value, the solver
// with the most matching labels in matchLabels will be selected.
// If neither has more matches, the solver defined earlier in the list
// will be selected.
func (o IssuerSpecAcmeSolversSelectorOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversSelector) []string { return v.DnsNames }).(pulumi.StringArrayOutput)
}

// List of DNSZones that this solver will be used to solve.
// The most specific DNS zone match specified here will take precedence
// over other DNS zone matches, so a solver specifying sys.example.com
// will be selected over one specifying example.com for the domain
// www.sys.example.com.
// If multiple solvers match with the same dnsZones value, the solver
// with the most matching labels in matchLabels will be selected.
// If neither has more matches, the solver defined earlier in the list
// will be selected.
func (o IssuerSpecAcmeSolversSelectorOutput) DnsZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversSelector) []string { return v.DnsZones }).(pulumi.StringArrayOutput)
}

// A label selector that is used to refine the set of certificate's that
// this challenge solver will apply to.
func (o IssuerSpecAcmeSolversSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversSelectorPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversSelectorPtrOutput) ToIssuerSpecAcmeSolversSelectorPtrOutput() IssuerSpecAcmeSolversSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversSelectorPtrOutput) ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversSelectorPtrOutput) Elem() IssuerSpecAcmeSolversSelectorOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversSelector) IssuerSpecAcmeSolversSelector {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversSelector
		return ret
	}).(IssuerSpecAcmeSolversSelectorOutput)
}

// List of DNSNames that this solver will be used to solve.
// If specified and a match is found, a dnsNames selector will take
// precedence over a dnsZones selector.
// If multiple solvers match with the same dnsNames value, the solver
// with the most matching labels in matchLabels will be selected.
// If neither has more matches, the solver defined earlier in the list
// will be selected.
func (o IssuerSpecAcmeSolversSelectorPtrOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversSelector) []string {
		if v == nil {
			return nil
		}
		return v.DnsNames
	}).(pulumi.StringArrayOutput)
}

// List of DNSZones that this solver will be used to solve.
// The most specific DNS zone match specified here will take precedence
// over other DNS zone matches, so a solver specifying sys.example.com
// will be selected over one specifying example.com for the domain
// www.sys.example.com.
// If multiple solvers match with the same dnsZones value, the solver
// with the most matching labels in matchLabels will be selected.
// If neither has more matches, the solver defined earlier in the list
// will be selected.
func (o IssuerSpecAcmeSolversSelectorPtrOutput) DnsZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversSelector) []string {
		if v == nil {
			return nil
		}
		return v.DnsZones
	}).(pulumi.StringArrayOutput)
}

// A label selector that is used to refine the set of certificate's that
// this challenge solver will apply to.
func (o IssuerSpecAcmeSolversSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector that is used to refine the set of certificate's that
// this challenge solver will apply to.
type IssuerSpecAcmeSolversSelectorMatchLabels struct {
}

// CA configures this issuer to sign certificates using a signing CA keypair
// stored in a Secret resource.
// This is used to build internal PKIs that are managed by cert-manager.
type IssuerSpecCa struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies
	// the location of the CRL from which the revocation of this certificate can be checked.
	// If not set, certificates will be issued without distribution points set.
	CrlDistributionPoints []string `pulumi:"crlDistributionPoints"`
	// IssuingCertificateURLs is a list of URLs which this issuer should embed into certificates
	// it creates. See https://www.rfc-editor.org/rfc/rfc5280#section-4.2.2.1 for more details.
	// As an example, such a URL might be "http://ca.domain.com/ca.crt".
	IssuingCertificateURLs []string `pulumi:"issuingCertificateURLs"`
	// The OCSP server list is an X.509 v3 extension that defines a list of
	// URLs of OCSP responders. The OCSP responders can be queried for the
	// revocation status of an issued certificate. If not set, the
	// certificate will be issued with no OCSP servers set. For example, an
	// OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
	OcspServers []string `pulumi:"ocspServers"`
	// SecretName is the name of the secret used to sign Certificates issued
	// by this Issuer.
	SecretName string `pulumi:"secretName"`
}

// IssuerSpecCaInput is an input type that accepts IssuerSpecCaArgs and IssuerSpecCaOutput values.
// You can construct a concrete instance of `IssuerSpecCaInput` via:
//
//	IssuerSpecCaArgs{...}
type IssuerSpecCaInput interface {
	pulumi.Input

	ToIssuerSpecCaOutput() IssuerSpecCaOutput
	ToIssuerSpecCaOutputWithContext(context.Context) IssuerSpecCaOutput
}

// CA configures this issuer to sign certificates using a signing CA keypair
// stored in a Secret resource.
// This is used to build internal PKIs that are managed by cert-manager.
type IssuerSpecCaArgs struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies
	// the location of the CRL from which the revocation of this certificate can be checked.
	// If not set, certificates will be issued without distribution points set.
	CrlDistributionPoints pulumi.StringArrayInput `pulumi:"crlDistributionPoints"`
	// IssuingCertificateURLs is a list of URLs which this issuer should embed into certificates
	// it creates. See https://www.rfc-editor.org/rfc/rfc5280#section-4.2.2.1 for more details.
	// As an example, such a URL might be "http://ca.domain.com/ca.crt".
	IssuingCertificateURLs pulumi.StringArrayInput `pulumi:"issuingCertificateURLs"`
	// The OCSP server list is an X.509 v3 extension that defines a list of
	// URLs of OCSP responders. The OCSP responders can be queried for the
	// revocation status of an issued certificate. If not set, the
	// certificate will be issued with no OCSP servers set. For example, an
	// OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
	OcspServers pulumi.StringArrayInput `pulumi:"ocspServers"`
	// SecretName is the name of the secret used to sign Certificates issued
	// by this Issuer.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (IssuerSpecCaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecCa)(nil)).Elem()
}

func (i IssuerSpecCaArgs) ToIssuerSpecCaOutput() IssuerSpecCaOutput {
	return i.ToIssuerSpecCaOutputWithContext(context.Background())
}

func (i IssuerSpecCaArgs) ToIssuerSpecCaOutputWithContext(ctx context.Context) IssuerSpecCaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecCaOutput)
}

func (i IssuerSpecCaArgs) ToIssuerSpecCaPtrOutput() IssuerSpecCaPtrOutput {
	return i.ToIssuerSpecCaPtrOutputWithContext(context.Background())
}

func (i IssuerSpecCaArgs) ToIssuerSpecCaPtrOutputWithContext(ctx context.Context) IssuerSpecCaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecCaOutput).ToIssuerSpecCaPtrOutputWithContext(ctx)
}

// IssuerSpecCaPtrInput is an input type that accepts IssuerSpecCaArgs, IssuerSpecCaPtr and IssuerSpecCaPtrOutput values.
// You can construct a concrete instance of `IssuerSpecCaPtrInput` via:
//
//	        IssuerSpecCaArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecCaPtrInput interface {
	pulumi.Input

	ToIssuerSpecCaPtrOutput() IssuerSpecCaPtrOutput
	ToIssuerSpecCaPtrOutputWithContext(context.Context) IssuerSpecCaPtrOutput
}

type issuerSpecCaPtrType IssuerSpecCaArgs

func IssuerSpecCaPtr(v *IssuerSpecCaArgs) IssuerSpecCaPtrInput {
	return (*issuerSpecCaPtrType)(v)
}

func (*issuerSpecCaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecCa)(nil)).Elem()
}

func (i *issuerSpecCaPtrType) ToIssuerSpecCaPtrOutput() IssuerSpecCaPtrOutput {
	return i.ToIssuerSpecCaPtrOutputWithContext(context.Background())
}

func (i *issuerSpecCaPtrType) ToIssuerSpecCaPtrOutputWithContext(ctx context.Context) IssuerSpecCaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecCaPtrOutput)
}

// CA configures this issuer to sign certificates using a signing CA keypair
// stored in a Secret resource.
// This is used to build internal PKIs that are managed by cert-manager.
type IssuerSpecCaOutput struct{ *pulumi.OutputState }

func (IssuerSpecCaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecCa)(nil)).Elem()
}

func (o IssuerSpecCaOutput) ToIssuerSpecCaOutput() IssuerSpecCaOutput {
	return o
}

func (o IssuerSpecCaOutput) ToIssuerSpecCaOutputWithContext(ctx context.Context) IssuerSpecCaOutput {
	return o
}

func (o IssuerSpecCaOutput) ToIssuerSpecCaPtrOutput() IssuerSpecCaPtrOutput {
	return o.ToIssuerSpecCaPtrOutputWithContext(context.Background())
}

func (o IssuerSpecCaOutput) ToIssuerSpecCaPtrOutputWithContext(ctx context.Context) IssuerSpecCaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecCa) *IssuerSpecCa {
		return &v
	}).(IssuerSpecCaPtrOutput)
}

// The CRL distribution points is an X.509 v3 certificate extension which identifies
// the location of the CRL from which the revocation of this certificate can be checked.
// If not set, certificates will be issued without distribution points set.
func (o IssuerSpecCaOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecCa) []string { return v.CrlDistributionPoints }).(pulumi.StringArrayOutput)
}

// IssuingCertificateURLs is a list of URLs which this issuer should embed into certificates
// it creates. See https://www.rfc-editor.org/rfc/rfc5280#section-4.2.2.1 for more details.
// As an example, such a URL might be "http://ca.domain.com/ca.crt".
func (o IssuerSpecCaOutput) IssuingCertificateURLs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecCa) []string { return v.IssuingCertificateURLs }).(pulumi.StringArrayOutput)
}

// The OCSP server list is an X.509 v3 extension that defines a list of
// URLs of OCSP responders. The OCSP responders can be queried for the
// revocation status of an issued certificate. If not set, the
// certificate will be issued with no OCSP servers set. For example, an
// OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
func (o IssuerSpecCaOutput) OcspServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecCa) []string { return v.OcspServers }).(pulumi.StringArrayOutput)
}

// SecretName is the name of the secret used to sign Certificates issued
// by this Issuer.
func (o IssuerSpecCaOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecCa) string { return v.SecretName }).(pulumi.StringOutput)
}

type IssuerSpecCaPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecCaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecCa)(nil)).Elem()
}

func (o IssuerSpecCaPtrOutput) ToIssuerSpecCaPtrOutput() IssuerSpecCaPtrOutput {
	return o
}

func (o IssuerSpecCaPtrOutput) ToIssuerSpecCaPtrOutputWithContext(ctx context.Context) IssuerSpecCaPtrOutput {
	return o
}

func (o IssuerSpecCaPtrOutput) Elem() IssuerSpecCaOutput {
	return o.ApplyT(func(v *IssuerSpecCa) IssuerSpecCa {
		if v != nil {
			return *v
		}
		var ret IssuerSpecCa
		return ret
	}).(IssuerSpecCaOutput)
}

// The CRL distribution points is an X.509 v3 certificate extension which identifies
// the location of the CRL from which the revocation of this certificate can be checked.
// If not set, certificates will be issued without distribution points set.
func (o IssuerSpecCaPtrOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecCa) []string {
		if v == nil {
			return nil
		}
		return v.CrlDistributionPoints
	}).(pulumi.StringArrayOutput)
}

// IssuingCertificateURLs is a list of URLs which this issuer should embed into certificates
// it creates. See https://www.rfc-editor.org/rfc/rfc5280#section-4.2.2.1 for more details.
// As an example, such a URL might be "http://ca.domain.com/ca.crt".
func (o IssuerSpecCaPtrOutput) IssuingCertificateURLs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecCa) []string {
		if v == nil {
			return nil
		}
		return v.IssuingCertificateURLs
	}).(pulumi.StringArrayOutput)
}

// The OCSP server list is an X.509 v3 extension that defines a list of
// URLs of OCSP responders. The OCSP responders can be queried for the
// revocation status of an issued certificate. If not set, the
// certificate will be issued with no OCSP servers set. For example, an
// OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
func (o IssuerSpecCaPtrOutput) OcspServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecCa) []string {
		if v == nil {
			return nil
		}
		return v.OcspServers
	}).(pulumi.StringArrayOutput)
}

// SecretName is the name of the secret used to sign Certificates issued
// by this Issuer.
func (o IssuerSpecCaPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecCa) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

// SelfSigned configures this issuer to 'self sign' certificates using the
// private key used to create the CertificateRequest object.
type IssuerSpecSelfSigned struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies
	// the location of the CRL from which the revocation of this certificate can be checked.
	// If not set certificate will be issued without CDP. Values are strings.
	CrlDistributionPoints []string `pulumi:"crlDistributionPoints"`
}

// IssuerSpecSelfSignedInput is an input type that accepts IssuerSpecSelfSignedArgs and IssuerSpecSelfSignedOutput values.
// You can construct a concrete instance of `IssuerSpecSelfSignedInput` via:
//
//	IssuerSpecSelfSignedArgs{...}
type IssuerSpecSelfSignedInput interface {
	pulumi.Input

	ToIssuerSpecSelfSignedOutput() IssuerSpecSelfSignedOutput
	ToIssuerSpecSelfSignedOutputWithContext(context.Context) IssuerSpecSelfSignedOutput
}

// SelfSigned configures this issuer to 'self sign' certificates using the
// private key used to create the CertificateRequest object.
type IssuerSpecSelfSignedArgs struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies
	// the location of the CRL from which the revocation of this certificate can be checked.
	// If not set certificate will be issued without CDP. Values are strings.
	CrlDistributionPoints pulumi.StringArrayInput `pulumi:"crlDistributionPoints"`
}

func (IssuerSpecSelfSignedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecSelfSigned)(nil)).Elem()
}

func (i IssuerSpecSelfSignedArgs) ToIssuerSpecSelfSignedOutput() IssuerSpecSelfSignedOutput {
	return i.ToIssuerSpecSelfSignedOutputWithContext(context.Background())
}

func (i IssuerSpecSelfSignedArgs) ToIssuerSpecSelfSignedOutputWithContext(ctx context.Context) IssuerSpecSelfSignedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecSelfSignedOutput)
}

func (i IssuerSpecSelfSignedArgs) ToIssuerSpecSelfSignedPtrOutput() IssuerSpecSelfSignedPtrOutput {
	return i.ToIssuerSpecSelfSignedPtrOutputWithContext(context.Background())
}

func (i IssuerSpecSelfSignedArgs) ToIssuerSpecSelfSignedPtrOutputWithContext(ctx context.Context) IssuerSpecSelfSignedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecSelfSignedOutput).ToIssuerSpecSelfSignedPtrOutputWithContext(ctx)
}

// IssuerSpecSelfSignedPtrInput is an input type that accepts IssuerSpecSelfSignedArgs, IssuerSpecSelfSignedPtr and IssuerSpecSelfSignedPtrOutput values.
// You can construct a concrete instance of `IssuerSpecSelfSignedPtrInput` via:
//
//	        IssuerSpecSelfSignedArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecSelfSignedPtrInput interface {
	pulumi.Input

	ToIssuerSpecSelfSignedPtrOutput() IssuerSpecSelfSignedPtrOutput
	ToIssuerSpecSelfSignedPtrOutputWithContext(context.Context) IssuerSpecSelfSignedPtrOutput
}

type issuerSpecSelfSignedPtrType IssuerSpecSelfSignedArgs

func IssuerSpecSelfSignedPtr(v *IssuerSpecSelfSignedArgs) IssuerSpecSelfSignedPtrInput {
	return (*issuerSpecSelfSignedPtrType)(v)
}

func (*issuerSpecSelfSignedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecSelfSigned)(nil)).Elem()
}

func (i *issuerSpecSelfSignedPtrType) ToIssuerSpecSelfSignedPtrOutput() IssuerSpecSelfSignedPtrOutput {
	return i.ToIssuerSpecSelfSignedPtrOutputWithContext(context.Background())
}

func (i *issuerSpecSelfSignedPtrType) ToIssuerSpecSelfSignedPtrOutputWithContext(ctx context.Context) IssuerSpecSelfSignedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecSelfSignedPtrOutput)
}

// SelfSigned configures this issuer to 'self sign' certificates using the
// private key used to create the CertificateRequest object.
type IssuerSpecSelfSignedOutput struct{ *pulumi.OutputState }

func (IssuerSpecSelfSignedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecSelfSigned)(nil)).Elem()
}

func (o IssuerSpecSelfSignedOutput) ToIssuerSpecSelfSignedOutput() IssuerSpecSelfSignedOutput {
	return o
}

func (o IssuerSpecSelfSignedOutput) ToIssuerSpecSelfSignedOutputWithContext(ctx context.Context) IssuerSpecSelfSignedOutput {
	return o
}

func (o IssuerSpecSelfSignedOutput) ToIssuerSpecSelfSignedPtrOutput() IssuerSpecSelfSignedPtrOutput {
	return o.ToIssuerSpecSelfSignedPtrOutputWithContext(context.Background())
}

func (o IssuerSpecSelfSignedOutput) ToIssuerSpecSelfSignedPtrOutputWithContext(ctx context.Context) IssuerSpecSelfSignedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecSelfSigned) *IssuerSpecSelfSigned {
		return &v
	}).(IssuerSpecSelfSignedPtrOutput)
}

// The CRL distribution points is an X.509 v3 certificate extension which identifies
// the location of the CRL from which the revocation of this certificate can be checked.
// If not set certificate will be issued without CDP. Values are strings.
func (o IssuerSpecSelfSignedOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecSelfSigned) []string { return v.CrlDistributionPoints }).(pulumi.StringArrayOutput)
}

type IssuerSpecSelfSignedPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecSelfSignedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecSelfSigned)(nil)).Elem()
}

func (o IssuerSpecSelfSignedPtrOutput) ToIssuerSpecSelfSignedPtrOutput() IssuerSpecSelfSignedPtrOutput {
	return o
}

func (o IssuerSpecSelfSignedPtrOutput) ToIssuerSpecSelfSignedPtrOutputWithContext(ctx context.Context) IssuerSpecSelfSignedPtrOutput {
	return o
}

func (o IssuerSpecSelfSignedPtrOutput) Elem() IssuerSpecSelfSignedOutput {
	return o.ApplyT(func(v *IssuerSpecSelfSigned) IssuerSpecSelfSigned {
		if v != nil {
			return *v
		}
		var ret IssuerSpecSelfSigned
		return ret
	}).(IssuerSpecSelfSignedOutput)
}

// The CRL distribution points is an X.509 v3 certificate extension which identifies
// the location of the CRL from which the revocation of this certificate can be checked.
// If not set certificate will be issued without CDP. Values are strings.
func (o IssuerSpecSelfSignedPtrOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecSelfSigned) []string {
		if v == nil {
			return nil
		}
		return v.CrlDistributionPoints
	}).(pulumi.StringArrayOutput)
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault
// PKI backend.
type IssuerSpecVault struct {
	// Auth configures how cert-manager authenticates with the Vault server.
	Auth IssuerSpecVaultAuth `pulumi:"auth"`
	// Base64-encoded bundle of PEM CAs which will be used to validate the certificate
	// chain presented by Vault. Only used if using HTTPS to connect to Vault and
	// ignored for HTTP connections.
	// Mutually exclusive with CABundleSecretRef.
	// If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
	// the cert-manager controller container is used to validate the TLS connection.
	CaBundle *string `pulumi:"caBundle"`
	// Reference to a Secret containing a bundle of PEM-encoded CAs to use when
	// verifying the certificate chain presented by Vault when using HTTPS.
	// Mutually exclusive with CABundle.
	// If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
	// the cert-manager controller container is used to validate the TLS connection.
	// If no key for the Secret is specified, cert-manager will default to 'ca.crt'.
	CaBundleSecretRef *IssuerSpecVaultCaBundleSecretRef `pulumi:"caBundleSecretRef"`
	// Reference to a Secret containing a PEM-encoded Client Certificate to use when the
	// Vault server requires mTLS.
	ClientCertSecretRef *IssuerSpecVaultClientCertSecretRef `pulumi:"clientCertSecretRef"`
	// Reference to a Secret containing a PEM-encoded Client Private Key to use when the
	// Vault server requires mTLS.
	ClientKeySecretRef *IssuerSpecVaultClientKeySecretRef `pulumi:"clientKeySecretRef"`
	// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1"
	// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
	Namespace *string `pulumi:"namespace"`
	// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g:
	// "my_pki_mount/sign/my-role-name".
	Path string `pulumi:"path"`
	// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
	Server string `pulumi:"server"`
}

// IssuerSpecVaultInput is an input type that accepts IssuerSpecVaultArgs and IssuerSpecVaultOutput values.
// You can construct a concrete instance of `IssuerSpecVaultInput` via:
//
//	IssuerSpecVaultArgs{...}
type IssuerSpecVaultInput interface {
	pulumi.Input

	ToIssuerSpecVaultOutput() IssuerSpecVaultOutput
	ToIssuerSpecVaultOutputWithContext(context.Context) IssuerSpecVaultOutput
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault
// PKI backend.
type IssuerSpecVaultArgs struct {
	// Auth configures how cert-manager authenticates with the Vault server.
	Auth IssuerSpecVaultAuthInput `pulumi:"auth"`
	// Base64-encoded bundle of PEM CAs which will be used to validate the certificate
	// chain presented by Vault. Only used if using HTTPS to connect to Vault and
	// ignored for HTTP connections.
	// Mutually exclusive with CABundleSecretRef.
	// If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
	// the cert-manager controller container is used to validate the TLS connection.
	CaBundle pulumi.StringPtrInput `pulumi:"caBundle"`
	// Reference to a Secret containing a bundle of PEM-encoded CAs to use when
	// verifying the certificate chain presented by Vault when using HTTPS.
	// Mutually exclusive with CABundle.
	// If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
	// the cert-manager controller container is used to validate the TLS connection.
	// If no key for the Secret is specified, cert-manager will default to 'ca.crt'.
	CaBundleSecretRef IssuerSpecVaultCaBundleSecretRefPtrInput `pulumi:"caBundleSecretRef"`
	// Reference to a Secret containing a PEM-encoded Client Certificate to use when the
	// Vault server requires mTLS.
	ClientCertSecretRef IssuerSpecVaultClientCertSecretRefPtrInput `pulumi:"clientCertSecretRef"`
	// Reference to a Secret containing a PEM-encoded Client Private Key to use when the
	// Vault server requires mTLS.
	ClientKeySecretRef IssuerSpecVaultClientKeySecretRefPtrInput `pulumi:"clientKeySecretRef"`
	// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1"
	// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g:
	// "my_pki_mount/sign/my-role-name".
	Path pulumi.StringInput `pulumi:"path"`
	// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
	Server pulumi.StringInput `pulumi:"server"`
}

func (IssuerSpecVaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVault)(nil)).Elem()
}

func (i IssuerSpecVaultArgs) ToIssuerSpecVaultOutput() IssuerSpecVaultOutput {
	return i.ToIssuerSpecVaultOutputWithContext(context.Background())
}

func (i IssuerSpecVaultArgs) ToIssuerSpecVaultOutputWithContext(ctx context.Context) IssuerSpecVaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultOutput)
}

func (i IssuerSpecVaultArgs) ToIssuerSpecVaultPtrOutput() IssuerSpecVaultPtrOutput {
	return i.ToIssuerSpecVaultPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultArgs) ToIssuerSpecVaultPtrOutputWithContext(ctx context.Context) IssuerSpecVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultOutput).ToIssuerSpecVaultPtrOutputWithContext(ctx)
}

// IssuerSpecVaultPtrInput is an input type that accepts IssuerSpecVaultArgs, IssuerSpecVaultPtr and IssuerSpecVaultPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultPtrInput` via:
//
//	        IssuerSpecVaultArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultPtrOutput() IssuerSpecVaultPtrOutput
	ToIssuerSpecVaultPtrOutputWithContext(context.Context) IssuerSpecVaultPtrOutput
}

type issuerSpecVaultPtrType IssuerSpecVaultArgs

func IssuerSpecVaultPtr(v *IssuerSpecVaultArgs) IssuerSpecVaultPtrInput {
	return (*issuerSpecVaultPtrType)(v)
}

func (*issuerSpecVaultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVault)(nil)).Elem()
}

func (i *issuerSpecVaultPtrType) ToIssuerSpecVaultPtrOutput() IssuerSpecVaultPtrOutput {
	return i.ToIssuerSpecVaultPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultPtrType) ToIssuerSpecVaultPtrOutputWithContext(ctx context.Context) IssuerSpecVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultPtrOutput)
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault
// PKI backend.
type IssuerSpecVaultOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVault)(nil)).Elem()
}

func (o IssuerSpecVaultOutput) ToIssuerSpecVaultOutput() IssuerSpecVaultOutput {
	return o
}

func (o IssuerSpecVaultOutput) ToIssuerSpecVaultOutputWithContext(ctx context.Context) IssuerSpecVaultOutput {
	return o
}

func (o IssuerSpecVaultOutput) ToIssuerSpecVaultPtrOutput() IssuerSpecVaultPtrOutput {
	return o.ToIssuerSpecVaultPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultOutput) ToIssuerSpecVaultPtrOutputWithContext(ctx context.Context) IssuerSpecVaultPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVault) *IssuerSpecVault {
		return &v
	}).(IssuerSpecVaultPtrOutput)
}

// Auth configures how cert-manager authenticates with the Vault server.
func (o IssuerSpecVaultOutput) Auth() IssuerSpecVaultAuthOutput {
	return o.ApplyT(func(v IssuerSpecVault) IssuerSpecVaultAuth { return v.Auth }).(IssuerSpecVaultAuthOutput)
}

// Base64-encoded bundle of PEM CAs which will be used to validate the certificate
// chain presented by Vault. Only used if using HTTPS to connect to Vault and
// ignored for HTTP connections.
// Mutually exclusive with CABundleSecretRef.
// If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
// the cert-manager controller container is used to validate the TLS connection.
func (o IssuerSpecVaultOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVault) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

// Reference to a Secret containing a bundle of PEM-encoded CAs to use when
// verifying the certificate chain presented by Vault when using HTTPS.
// Mutually exclusive with CABundle.
// If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
// the cert-manager controller container is used to validate the TLS connection.
// If no key for the Secret is specified, cert-manager will default to 'ca.crt'.
func (o IssuerSpecVaultOutput) CaBundleSecretRef() IssuerSpecVaultCaBundleSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVault) *IssuerSpecVaultCaBundleSecretRef { return v.CaBundleSecretRef }).(IssuerSpecVaultCaBundleSecretRefPtrOutput)
}

// Reference to a Secret containing a PEM-encoded Client Certificate to use when the
// Vault server requires mTLS.
func (o IssuerSpecVaultOutput) ClientCertSecretRef() IssuerSpecVaultClientCertSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVault) *IssuerSpecVaultClientCertSecretRef { return v.ClientCertSecretRef }).(IssuerSpecVaultClientCertSecretRefPtrOutput)
}

// Reference to a Secret containing a PEM-encoded Client Private Key to use when the
// Vault server requires mTLS.
func (o IssuerSpecVaultOutput) ClientKeySecretRef() IssuerSpecVaultClientKeySecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVault) *IssuerSpecVaultClientKeySecretRef { return v.ClientKeySecretRef }).(IssuerSpecVaultClientKeySecretRefPtrOutput)
}

// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1"
// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
func (o IssuerSpecVaultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVault) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g:
// "my_pki_mount/sign/my-role-name".
func (o IssuerSpecVaultOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVault) string { return v.Path }).(pulumi.StringOutput)
}

// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
func (o IssuerSpecVaultOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVault) string { return v.Server }).(pulumi.StringOutput)
}

type IssuerSpecVaultPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVault)(nil)).Elem()
}

func (o IssuerSpecVaultPtrOutput) ToIssuerSpecVaultPtrOutput() IssuerSpecVaultPtrOutput {
	return o
}

func (o IssuerSpecVaultPtrOutput) ToIssuerSpecVaultPtrOutputWithContext(ctx context.Context) IssuerSpecVaultPtrOutput {
	return o
}

func (o IssuerSpecVaultPtrOutput) Elem() IssuerSpecVaultOutput {
	return o.ApplyT(func(v *IssuerSpecVault) IssuerSpecVault {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVault
		return ret
	}).(IssuerSpecVaultOutput)
}

// Auth configures how cert-manager authenticates with the Vault server.
func (o IssuerSpecVaultPtrOutput) Auth() IssuerSpecVaultAuthPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVault) *IssuerSpecVaultAuth {
		if v == nil {
			return nil
		}
		return &v.Auth
	}).(IssuerSpecVaultAuthPtrOutput)
}

// Base64-encoded bundle of PEM CAs which will be used to validate the certificate
// chain presented by Vault. Only used if using HTTPS to connect to Vault and
// ignored for HTTP connections.
// Mutually exclusive with CABundleSecretRef.
// If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
// the cert-manager controller container is used to validate the TLS connection.
func (o IssuerSpecVaultPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVault) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

// Reference to a Secret containing a bundle of PEM-encoded CAs to use when
// verifying the certificate chain presented by Vault when using HTTPS.
// Mutually exclusive with CABundle.
// If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
// the cert-manager controller container is used to validate the TLS connection.
// If no key for the Secret is specified, cert-manager will default to 'ca.crt'.
func (o IssuerSpecVaultPtrOutput) CaBundleSecretRef() IssuerSpecVaultCaBundleSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVault) *IssuerSpecVaultCaBundleSecretRef {
		if v == nil {
			return nil
		}
		return v.CaBundleSecretRef
	}).(IssuerSpecVaultCaBundleSecretRefPtrOutput)
}

// Reference to a Secret containing a PEM-encoded Client Certificate to use when the
// Vault server requires mTLS.
func (o IssuerSpecVaultPtrOutput) ClientCertSecretRef() IssuerSpecVaultClientCertSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVault) *IssuerSpecVaultClientCertSecretRef {
		if v == nil {
			return nil
		}
		return v.ClientCertSecretRef
	}).(IssuerSpecVaultClientCertSecretRefPtrOutput)
}

// Reference to a Secret containing a PEM-encoded Client Private Key to use when the
// Vault server requires mTLS.
func (o IssuerSpecVaultPtrOutput) ClientKeySecretRef() IssuerSpecVaultClientKeySecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVault) *IssuerSpecVaultClientKeySecretRef {
		if v == nil {
			return nil
		}
		return v.ClientKeySecretRef
	}).(IssuerSpecVaultClientKeySecretRefPtrOutput)
}

// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1"
// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
func (o IssuerSpecVaultPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVault) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g:
// "my_pki_mount/sign/my-role-name".
func (o IssuerSpecVaultPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVault) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
func (o IssuerSpecVaultPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVault) *string {
		if v == nil {
			return nil
		}
		return &v.Server
	}).(pulumi.StringPtrOutput)
}

// Auth configures how cert-manager authenticates with the Vault server.
type IssuerSpecVaultAuth struct {
	// AppRole authenticates with Vault using the App Role auth mechanism,
	// with the role and secret stored in a Kubernetes Secret resource.
	AppRole *IssuerSpecVaultAuthAppRole `pulumi:"appRole"`
	// Kubernetes authenticates with Vault by passing the ServiceAccount
	// token stored in the named Secret resource to the Vault server.
	Kubernetes *IssuerSpecVaultAuthKubernetes `pulumi:"kubernetes"`
	// TokenSecretRef authenticates with Vault by presenting a token.
	TokenSecretRef *IssuerSpecVaultAuthTokenSecretRef `pulumi:"tokenSecretRef"`
}

// IssuerSpecVaultAuthInput is an input type that accepts IssuerSpecVaultAuthArgs and IssuerSpecVaultAuthOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthInput` via:
//
//	IssuerSpecVaultAuthArgs{...}
type IssuerSpecVaultAuthInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthOutput() IssuerSpecVaultAuthOutput
	ToIssuerSpecVaultAuthOutputWithContext(context.Context) IssuerSpecVaultAuthOutput
}

// Auth configures how cert-manager authenticates with the Vault server.
type IssuerSpecVaultAuthArgs struct {
	// AppRole authenticates with Vault using the App Role auth mechanism,
	// with the role and secret stored in a Kubernetes Secret resource.
	AppRole IssuerSpecVaultAuthAppRolePtrInput `pulumi:"appRole"`
	// Kubernetes authenticates with Vault by passing the ServiceAccount
	// token stored in the named Secret resource to the Vault server.
	Kubernetes IssuerSpecVaultAuthKubernetesPtrInput `pulumi:"kubernetes"`
	// TokenSecretRef authenticates with Vault by presenting a token.
	TokenSecretRef IssuerSpecVaultAuthTokenSecretRefPtrInput `pulumi:"tokenSecretRef"`
}

func (IssuerSpecVaultAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuth)(nil)).Elem()
}

func (i IssuerSpecVaultAuthArgs) ToIssuerSpecVaultAuthOutput() IssuerSpecVaultAuthOutput {
	return i.ToIssuerSpecVaultAuthOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthArgs) ToIssuerSpecVaultAuthOutputWithContext(ctx context.Context) IssuerSpecVaultAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthOutput)
}

func (i IssuerSpecVaultAuthArgs) ToIssuerSpecVaultAuthPtrOutput() IssuerSpecVaultAuthPtrOutput {
	return i.ToIssuerSpecVaultAuthPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthArgs) ToIssuerSpecVaultAuthPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthOutput).ToIssuerSpecVaultAuthPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthPtrInput is an input type that accepts IssuerSpecVaultAuthArgs, IssuerSpecVaultAuthPtr and IssuerSpecVaultAuthPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthPtrInput` via:
//
//	        IssuerSpecVaultAuthArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultAuthPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthPtrOutput() IssuerSpecVaultAuthPtrOutput
	ToIssuerSpecVaultAuthPtrOutputWithContext(context.Context) IssuerSpecVaultAuthPtrOutput
}

type issuerSpecVaultAuthPtrType IssuerSpecVaultAuthArgs

func IssuerSpecVaultAuthPtr(v *IssuerSpecVaultAuthArgs) IssuerSpecVaultAuthPtrInput {
	return (*issuerSpecVaultAuthPtrType)(v)
}

func (*issuerSpecVaultAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuth)(nil)).Elem()
}

func (i *issuerSpecVaultAuthPtrType) ToIssuerSpecVaultAuthPtrOutput() IssuerSpecVaultAuthPtrOutput {
	return i.ToIssuerSpecVaultAuthPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthPtrType) ToIssuerSpecVaultAuthPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthPtrOutput)
}

// Auth configures how cert-manager authenticates with the Vault server.
type IssuerSpecVaultAuthOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuth)(nil)).Elem()
}

func (o IssuerSpecVaultAuthOutput) ToIssuerSpecVaultAuthOutput() IssuerSpecVaultAuthOutput {
	return o
}

func (o IssuerSpecVaultAuthOutput) ToIssuerSpecVaultAuthOutputWithContext(ctx context.Context) IssuerSpecVaultAuthOutput {
	return o
}

func (o IssuerSpecVaultAuthOutput) ToIssuerSpecVaultAuthPtrOutput() IssuerSpecVaultAuthPtrOutput {
	return o.ToIssuerSpecVaultAuthPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthOutput) ToIssuerSpecVaultAuthPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultAuth) *IssuerSpecVaultAuth {
		return &v
	}).(IssuerSpecVaultAuthPtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
func (o IssuerSpecVaultAuthOutput) AppRole() IssuerSpecVaultAuthAppRolePtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuth) *IssuerSpecVaultAuthAppRole { return v.AppRole }).(IssuerSpecVaultAuthAppRolePtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
func (o IssuerSpecVaultAuthOutput) Kubernetes() IssuerSpecVaultAuthKubernetesPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuth) *IssuerSpecVaultAuthKubernetes { return v.Kubernetes }).(IssuerSpecVaultAuthKubernetesPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
func (o IssuerSpecVaultAuthOutput) TokenSecretRef() IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuth) *IssuerSpecVaultAuthTokenSecretRef { return v.TokenSecretRef }).(IssuerSpecVaultAuthTokenSecretRefPtrOutput)
}

type IssuerSpecVaultAuthPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuth)(nil)).Elem()
}

func (o IssuerSpecVaultAuthPtrOutput) ToIssuerSpecVaultAuthPtrOutput() IssuerSpecVaultAuthPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthPtrOutput) ToIssuerSpecVaultAuthPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthPtrOutput) Elem() IssuerSpecVaultAuthOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuth) IssuerSpecVaultAuth {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultAuth
		return ret
	}).(IssuerSpecVaultAuthOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
func (o IssuerSpecVaultAuthPtrOutput) AppRole() IssuerSpecVaultAuthAppRolePtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuth) *IssuerSpecVaultAuthAppRole {
		if v == nil {
			return nil
		}
		return v.AppRole
	}).(IssuerSpecVaultAuthAppRolePtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
func (o IssuerSpecVaultAuthPtrOutput) Kubernetes() IssuerSpecVaultAuthKubernetesPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuth) *IssuerSpecVaultAuthKubernetes {
		if v == nil {
			return nil
		}
		return v.Kubernetes
	}).(IssuerSpecVaultAuthKubernetesPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
func (o IssuerSpecVaultAuthPtrOutput) TokenSecretRef() IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuth) *IssuerSpecVaultAuthTokenSecretRef {
		if v == nil {
			return nil
		}
		return v.TokenSecretRef
	}).(IssuerSpecVaultAuthTokenSecretRefPtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
type IssuerSpecVaultAuthAppRole struct {
	// Path where the App Role authentication backend is mounted in Vault, e.g:
	// "approle"
	Path string `pulumi:"path"`
	// RoleID configured in the App Role authentication backend when setting
	// up the authentication backend in Vault.
	RoleId string `pulumi:"roleId"`
	// Reference to a key in a Secret that contains the App Role secret used
	// to authenticate with Vault.
	// The `key` field must be specified and denotes which entry within the Secret
	// resource is used as the app role secret.
	SecretRef IssuerSpecVaultAuthAppRoleSecretRef `pulumi:"secretRef"`
}

// IssuerSpecVaultAuthAppRoleInput is an input type that accepts IssuerSpecVaultAuthAppRoleArgs and IssuerSpecVaultAuthAppRoleOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthAppRoleInput` via:
//
//	IssuerSpecVaultAuthAppRoleArgs{...}
type IssuerSpecVaultAuthAppRoleInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthAppRoleOutput() IssuerSpecVaultAuthAppRoleOutput
	ToIssuerSpecVaultAuthAppRoleOutputWithContext(context.Context) IssuerSpecVaultAuthAppRoleOutput
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
type IssuerSpecVaultAuthAppRoleArgs struct {
	// Path where the App Role authentication backend is mounted in Vault, e.g:
	// "approle"
	Path pulumi.StringInput `pulumi:"path"`
	// RoleID configured in the App Role authentication backend when setting
	// up the authentication backend in Vault.
	RoleId pulumi.StringInput `pulumi:"roleId"`
	// Reference to a key in a Secret that contains the App Role secret used
	// to authenticate with Vault.
	// The `key` field must be specified and denotes which entry within the Secret
	// resource is used as the app role secret.
	SecretRef IssuerSpecVaultAuthAppRoleSecretRefInput `pulumi:"secretRef"`
}

func (IssuerSpecVaultAuthAppRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthAppRole)(nil)).Elem()
}

func (i IssuerSpecVaultAuthAppRoleArgs) ToIssuerSpecVaultAuthAppRoleOutput() IssuerSpecVaultAuthAppRoleOutput {
	return i.ToIssuerSpecVaultAuthAppRoleOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthAppRoleArgs) ToIssuerSpecVaultAuthAppRoleOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRoleOutput)
}

func (i IssuerSpecVaultAuthAppRoleArgs) ToIssuerSpecVaultAuthAppRolePtrOutput() IssuerSpecVaultAuthAppRolePtrOutput {
	return i.ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthAppRoleArgs) ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRoleOutput).ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthAppRolePtrInput is an input type that accepts IssuerSpecVaultAuthAppRoleArgs, IssuerSpecVaultAuthAppRolePtr and IssuerSpecVaultAuthAppRolePtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthAppRolePtrInput` via:
//
//	        IssuerSpecVaultAuthAppRoleArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultAuthAppRolePtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthAppRolePtrOutput() IssuerSpecVaultAuthAppRolePtrOutput
	ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(context.Context) IssuerSpecVaultAuthAppRolePtrOutput
}

type issuerSpecVaultAuthAppRolePtrType IssuerSpecVaultAuthAppRoleArgs

func IssuerSpecVaultAuthAppRolePtr(v *IssuerSpecVaultAuthAppRoleArgs) IssuerSpecVaultAuthAppRolePtrInput {
	return (*issuerSpecVaultAuthAppRolePtrType)(v)
}

func (*issuerSpecVaultAuthAppRolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthAppRole)(nil)).Elem()
}

func (i *issuerSpecVaultAuthAppRolePtrType) ToIssuerSpecVaultAuthAppRolePtrOutput() IssuerSpecVaultAuthAppRolePtrOutput {
	return i.ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthAppRolePtrType) ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRolePtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
type IssuerSpecVaultAuthAppRoleOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthAppRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthAppRole)(nil)).Elem()
}

func (o IssuerSpecVaultAuthAppRoleOutput) ToIssuerSpecVaultAuthAppRoleOutput() IssuerSpecVaultAuthAppRoleOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleOutput) ToIssuerSpecVaultAuthAppRoleOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleOutput) ToIssuerSpecVaultAuthAppRolePtrOutput() IssuerSpecVaultAuthAppRolePtrOutput {
	return o.ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthAppRoleOutput) ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultAuthAppRole) *IssuerSpecVaultAuthAppRole {
		return &v
	}).(IssuerSpecVaultAuthAppRolePtrOutput)
}

// Path where the App Role authentication backend is mounted in Vault, e.g:
// "approle"
func (o IssuerSpecVaultAuthAppRoleOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthAppRole) string { return v.Path }).(pulumi.StringOutput)
}

// RoleID configured in the App Role authentication backend when setting
// up the authentication backend in Vault.
func (o IssuerSpecVaultAuthAppRoleOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthAppRole) string { return v.RoleId }).(pulumi.StringOutput)
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
func (o IssuerSpecVaultAuthAppRoleOutput) SecretRef() IssuerSpecVaultAuthAppRoleSecretRefOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthAppRole) IssuerSpecVaultAuthAppRoleSecretRef { return v.SecretRef }).(IssuerSpecVaultAuthAppRoleSecretRefOutput)
}

type IssuerSpecVaultAuthAppRolePtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthAppRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthAppRole)(nil)).Elem()
}

func (o IssuerSpecVaultAuthAppRolePtrOutput) ToIssuerSpecVaultAuthAppRolePtrOutput() IssuerSpecVaultAuthAppRolePtrOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRolePtrOutput) ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRolePtrOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRolePtrOutput) Elem() IssuerSpecVaultAuthAppRoleOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRole) IssuerSpecVaultAuthAppRole {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultAuthAppRole
		return ret
	}).(IssuerSpecVaultAuthAppRoleOutput)
}

// Path where the App Role authentication backend is mounted in Vault, e.g:
// "approle"
func (o IssuerSpecVaultAuthAppRolePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRole) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// RoleID configured in the App Role authentication backend when setting
// up the authentication backend in Vault.
func (o IssuerSpecVaultAuthAppRolePtrOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRole) *string {
		if v == nil {
			return nil
		}
		return &v.RoleId
	}).(pulumi.StringPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
func (o IssuerSpecVaultAuthAppRolePtrOutput) SecretRef() IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRole) *IssuerSpecVaultAuthAppRoleSecretRef {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(IssuerSpecVaultAuthAppRoleSecretRefPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
type IssuerSpecVaultAuthAppRoleSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecVaultAuthAppRoleSecretRefInput is an input type that accepts IssuerSpecVaultAuthAppRoleSecretRefArgs and IssuerSpecVaultAuthAppRoleSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthAppRoleSecretRefInput` via:
//
//	IssuerSpecVaultAuthAppRoleSecretRefArgs{...}
type IssuerSpecVaultAuthAppRoleSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthAppRoleSecretRefOutput() IssuerSpecVaultAuthAppRoleSecretRefOutput
	ToIssuerSpecVaultAuthAppRoleSecretRefOutputWithContext(context.Context) IssuerSpecVaultAuthAppRoleSecretRefOutput
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
type IssuerSpecVaultAuthAppRoleSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecVaultAuthAppRoleSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (i IssuerSpecVaultAuthAppRoleSecretRefArgs) ToIssuerSpecVaultAuthAppRoleSecretRefOutput() IssuerSpecVaultAuthAppRoleSecretRefOutput {
	return i.ToIssuerSpecVaultAuthAppRoleSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthAppRoleSecretRefArgs) ToIssuerSpecVaultAuthAppRoleSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRoleSecretRefOutput)
}

func (i IssuerSpecVaultAuthAppRoleSecretRefArgs) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return i.ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthAppRoleSecretRefArgs) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRoleSecretRefOutput).ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthAppRoleSecretRefPtrInput is an input type that accepts IssuerSpecVaultAuthAppRoleSecretRefArgs, IssuerSpecVaultAuthAppRoleSecretRefPtr and IssuerSpecVaultAuthAppRoleSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthAppRoleSecretRefPtrInput` via:
//
//	        IssuerSpecVaultAuthAppRoleSecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultAuthAppRoleSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() IssuerSpecVaultAuthAppRoleSecretRefPtrOutput
	ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Context) IssuerSpecVaultAuthAppRoleSecretRefPtrOutput
}

type issuerSpecVaultAuthAppRoleSecretRefPtrType IssuerSpecVaultAuthAppRoleSecretRefArgs

func IssuerSpecVaultAuthAppRoleSecretRefPtr(v *IssuerSpecVaultAuthAppRoleSecretRefArgs) IssuerSpecVaultAuthAppRoleSecretRefPtrInput {
	return (*issuerSpecVaultAuthAppRoleSecretRefPtrType)(v)
}

func (*issuerSpecVaultAuthAppRoleSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (i *issuerSpecVaultAuthAppRoleSecretRefPtrType) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return i.ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthAppRoleSecretRefPtrType) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRoleSecretRefPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
type IssuerSpecVaultAuthAppRoleSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthAppRoleSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthAppRoleSecretRefOutput) ToIssuerSpecVaultAuthAppRoleSecretRefOutput() IssuerSpecVaultAuthAppRoleSecretRefOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleSecretRefOutput) ToIssuerSpecVaultAuthAppRoleSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleSecretRefOutput) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o.ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthAppRoleSecretRefOutput) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultAuthAppRoleSecretRef) *IssuerSpecVaultAuthAppRoleSecretRef {
		return &v
	}).(IssuerSpecVaultAuthAppRoleSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultAuthAppRoleSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthAppRoleSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthAppRoleSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthAppRoleSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecVaultAuthAppRoleSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthAppRoleSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthAppRoleSecretRefPtrOutput) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleSecretRefPtrOutput) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleSecretRefPtrOutput) Elem() IssuerSpecVaultAuthAppRoleSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRoleSecretRef) IssuerSpecVaultAuthAppRoleSecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultAuthAppRoleSecretRef
		return ret
	}).(IssuerSpecVaultAuthAppRoleSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultAuthAppRoleSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRoleSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthAppRoleSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRoleSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
type IssuerSpecVaultAuthKubernetes struct {
	// The Vault mountPath here is the mount path to use when authenticating with
	// Vault. For example, setting a value to `/v1/auth/foo`, will use the path
	// `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
	// default value "/v1/auth/kubernetes" will be used.
	MountPath *string `pulumi:"mountPath"`
	// A required field containing the Vault Role to assume. A Role binds a
	// Kubernetes ServiceAccount with a set of Vault policies.
	Role string `pulumi:"role"`
	// The required Secret field containing a Kubernetes ServiceAccount JWT used
	// for authenticating with Vault. Use of 'ambient credentials' is not
	// supported.
	SecretRef *IssuerSpecVaultAuthKubernetesSecretRef `pulumi:"secretRef"`
	// A reference to a service account that will be used to request a bound
	// token (also known as "projected token"). Compared to using "secretRef",
	// using this field means that you don't rely on statically bound tokens. To
	// use this field, you must configure an RBAC rule to let cert-manager
	// request a token.
	ServiceAccountRef *IssuerSpecVaultAuthKubernetesServiceAccountRef `pulumi:"serviceAccountRef"`
}

// IssuerSpecVaultAuthKubernetesInput is an input type that accepts IssuerSpecVaultAuthKubernetesArgs and IssuerSpecVaultAuthKubernetesOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthKubernetesInput` via:
//
//	IssuerSpecVaultAuthKubernetesArgs{...}
type IssuerSpecVaultAuthKubernetesInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthKubernetesOutput() IssuerSpecVaultAuthKubernetesOutput
	ToIssuerSpecVaultAuthKubernetesOutputWithContext(context.Context) IssuerSpecVaultAuthKubernetesOutput
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
type IssuerSpecVaultAuthKubernetesArgs struct {
	// The Vault mountPath here is the mount path to use when authenticating with
	// Vault. For example, setting a value to `/v1/auth/foo`, will use the path
	// `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
	// default value "/v1/auth/kubernetes" will be used.
	MountPath pulumi.StringPtrInput `pulumi:"mountPath"`
	// A required field containing the Vault Role to assume. A Role binds a
	// Kubernetes ServiceAccount with a set of Vault policies.
	Role pulumi.StringInput `pulumi:"role"`
	// The required Secret field containing a Kubernetes ServiceAccount JWT used
	// for authenticating with Vault. Use of 'ambient credentials' is not
	// supported.
	SecretRef IssuerSpecVaultAuthKubernetesSecretRefPtrInput `pulumi:"secretRef"`
	// A reference to a service account that will be used to request a bound
	// token (also known as "projected token"). Compared to using "secretRef",
	// using this field means that you don't rely on statically bound tokens. To
	// use this field, you must configure an RBAC rule to let cert-manager
	// request a token.
	ServiceAccountRef IssuerSpecVaultAuthKubernetesServiceAccountRefPtrInput `pulumi:"serviceAccountRef"`
}

func (IssuerSpecVaultAuthKubernetesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthKubernetes)(nil)).Elem()
}

func (i IssuerSpecVaultAuthKubernetesArgs) ToIssuerSpecVaultAuthKubernetesOutput() IssuerSpecVaultAuthKubernetesOutput {
	return i.ToIssuerSpecVaultAuthKubernetesOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthKubernetesArgs) ToIssuerSpecVaultAuthKubernetesOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesOutput)
}

func (i IssuerSpecVaultAuthKubernetesArgs) ToIssuerSpecVaultAuthKubernetesPtrOutput() IssuerSpecVaultAuthKubernetesPtrOutput {
	return i.ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthKubernetesArgs) ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesOutput).ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthKubernetesPtrInput is an input type that accepts IssuerSpecVaultAuthKubernetesArgs, IssuerSpecVaultAuthKubernetesPtr and IssuerSpecVaultAuthKubernetesPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthKubernetesPtrInput` via:
//
//	        IssuerSpecVaultAuthKubernetesArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultAuthKubernetesPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthKubernetesPtrOutput() IssuerSpecVaultAuthKubernetesPtrOutput
	ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(context.Context) IssuerSpecVaultAuthKubernetesPtrOutput
}

type issuerSpecVaultAuthKubernetesPtrType IssuerSpecVaultAuthKubernetesArgs

func IssuerSpecVaultAuthKubernetesPtr(v *IssuerSpecVaultAuthKubernetesArgs) IssuerSpecVaultAuthKubernetesPtrInput {
	return (*issuerSpecVaultAuthKubernetesPtrType)(v)
}

func (*issuerSpecVaultAuthKubernetesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthKubernetes)(nil)).Elem()
}

func (i *issuerSpecVaultAuthKubernetesPtrType) ToIssuerSpecVaultAuthKubernetesPtrOutput() IssuerSpecVaultAuthKubernetesPtrOutput {
	return i.ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthKubernetesPtrType) ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesPtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
type IssuerSpecVaultAuthKubernetesOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthKubernetesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthKubernetes)(nil)).Elem()
}

func (o IssuerSpecVaultAuthKubernetesOutput) ToIssuerSpecVaultAuthKubernetesOutput() IssuerSpecVaultAuthKubernetesOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesOutput) ToIssuerSpecVaultAuthKubernetesOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesOutput) ToIssuerSpecVaultAuthKubernetesPtrOutput() IssuerSpecVaultAuthKubernetesPtrOutput {
	return o.ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthKubernetesOutput) ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultAuthKubernetes) *IssuerSpecVaultAuthKubernetes {
		return &v
	}).(IssuerSpecVaultAuthKubernetesPtrOutput)
}

// The Vault mountPath here is the mount path to use when authenticating with
// Vault. For example, setting a value to `/v1/auth/foo`, will use the path
// `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
// default value "/v1/auth/kubernetes" will be used.
func (o IssuerSpecVaultAuthKubernetesOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetes) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

// A required field containing the Vault Role to assume. A Role binds a
// Kubernetes ServiceAccount with a set of Vault policies.
func (o IssuerSpecVaultAuthKubernetesOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetes) string { return v.Role }).(pulumi.StringOutput)
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. Use of 'ambient credentials' is not
// supported.
func (o IssuerSpecVaultAuthKubernetesOutput) SecretRef() IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetes) *IssuerSpecVaultAuthKubernetesSecretRef { return v.SecretRef }).(IssuerSpecVaultAuthKubernetesSecretRefPtrOutput)
}

// A reference to a service account that will be used to request a bound
// token (also known as "projected token"). Compared to using "secretRef",
// using this field means that you don't rely on statically bound tokens. To
// use this field, you must configure an RBAC rule to let cert-manager
// request a token.
func (o IssuerSpecVaultAuthKubernetesOutput) ServiceAccountRef() IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetes) *IssuerSpecVaultAuthKubernetesServiceAccountRef {
		return v.ServiceAccountRef
	}).(IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput)
}

type IssuerSpecVaultAuthKubernetesPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthKubernetesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthKubernetes)(nil)).Elem()
}

func (o IssuerSpecVaultAuthKubernetesPtrOutput) ToIssuerSpecVaultAuthKubernetesPtrOutput() IssuerSpecVaultAuthKubernetesPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesPtrOutput) ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesPtrOutput) Elem() IssuerSpecVaultAuthKubernetesOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetes) IssuerSpecVaultAuthKubernetes {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultAuthKubernetes
		return ret
	}).(IssuerSpecVaultAuthKubernetesOutput)
}

// The Vault mountPath here is the mount path to use when authenticating with
// Vault. For example, setting a value to `/v1/auth/foo`, will use the path
// `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
// default value "/v1/auth/kubernetes" will be used.
func (o IssuerSpecVaultAuthKubernetesPtrOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.MountPath
	}).(pulumi.StringPtrOutput)
}

// A required field containing the Vault Role to assume. A Role binds a
// Kubernetes ServiceAccount with a set of Vault policies.
func (o IssuerSpecVaultAuthKubernetesPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetes) *string {
		if v == nil {
			return nil
		}
		return &v.Role
	}).(pulumi.StringPtrOutput)
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. Use of 'ambient credentials' is not
// supported.
func (o IssuerSpecVaultAuthKubernetesPtrOutput) SecretRef() IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetes) *IssuerSpecVaultAuthKubernetesSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(IssuerSpecVaultAuthKubernetesSecretRefPtrOutput)
}

// A reference to a service account that will be used to request a bound
// token (also known as "projected token"). Compared to using "secretRef",
// using this field means that you don't rely on statically bound tokens. To
// use this field, you must configure an RBAC rule to let cert-manager
// request a token.
func (o IssuerSpecVaultAuthKubernetesPtrOutput) ServiceAccountRef() IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetes) *IssuerSpecVaultAuthKubernetesServiceAccountRef {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput)
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. Use of 'ambient credentials' is not
// supported.
type IssuerSpecVaultAuthKubernetesSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecVaultAuthKubernetesSecretRefInput is an input type that accepts IssuerSpecVaultAuthKubernetesSecretRefArgs and IssuerSpecVaultAuthKubernetesSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthKubernetesSecretRefInput` via:
//
//	IssuerSpecVaultAuthKubernetesSecretRefArgs{...}
type IssuerSpecVaultAuthKubernetesSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthKubernetesSecretRefOutput() IssuerSpecVaultAuthKubernetesSecretRefOutput
	ToIssuerSpecVaultAuthKubernetesSecretRefOutputWithContext(context.Context) IssuerSpecVaultAuthKubernetesSecretRefOutput
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. Use of 'ambient credentials' is not
// supported.
type IssuerSpecVaultAuthKubernetesSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecVaultAuthKubernetesSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (i IssuerSpecVaultAuthKubernetesSecretRefArgs) ToIssuerSpecVaultAuthKubernetesSecretRefOutput() IssuerSpecVaultAuthKubernetesSecretRefOutput {
	return i.ToIssuerSpecVaultAuthKubernetesSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthKubernetesSecretRefArgs) ToIssuerSpecVaultAuthKubernetesSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesSecretRefOutput)
}

func (i IssuerSpecVaultAuthKubernetesSecretRefArgs) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return i.ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthKubernetesSecretRefArgs) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesSecretRefOutput).ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthKubernetesSecretRefPtrInput is an input type that accepts IssuerSpecVaultAuthKubernetesSecretRefArgs, IssuerSpecVaultAuthKubernetesSecretRefPtr and IssuerSpecVaultAuthKubernetesSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthKubernetesSecretRefPtrInput` via:
//
//	        IssuerSpecVaultAuthKubernetesSecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultAuthKubernetesSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() IssuerSpecVaultAuthKubernetesSecretRefPtrOutput
	ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Context) IssuerSpecVaultAuthKubernetesSecretRefPtrOutput
}

type issuerSpecVaultAuthKubernetesSecretRefPtrType IssuerSpecVaultAuthKubernetesSecretRefArgs

func IssuerSpecVaultAuthKubernetesSecretRefPtr(v *IssuerSpecVaultAuthKubernetesSecretRefArgs) IssuerSpecVaultAuthKubernetesSecretRefPtrInput {
	return (*issuerSpecVaultAuthKubernetesSecretRefPtrType)(v)
}

func (*issuerSpecVaultAuthKubernetesSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (i *issuerSpecVaultAuthKubernetesSecretRefPtrType) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return i.ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthKubernetesSecretRefPtrType) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesSecretRefPtrOutput)
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. Use of 'ambient credentials' is not
// supported.
type IssuerSpecVaultAuthKubernetesSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthKubernetesSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthKubernetesSecretRefOutput) ToIssuerSpecVaultAuthKubernetesSecretRefOutput() IssuerSpecVaultAuthKubernetesSecretRefOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesSecretRefOutput) ToIssuerSpecVaultAuthKubernetesSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesSecretRefOutput) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o.ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthKubernetesSecretRefOutput) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultAuthKubernetesSecretRef) *IssuerSpecVaultAuthKubernetesSecretRef {
		return &v
	}).(IssuerSpecVaultAuthKubernetesSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultAuthKubernetesSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetesSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthKubernetesSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetesSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecVaultAuthKubernetesSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthKubernetesSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthKubernetesSecretRefPtrOutput) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesSecretRefPtrOutput) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesSecretRefPtrOutput) Elem() IssuerSpecVaultAuthKubernetesSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetesSecretRef) IssuerSpecVaultAuthKubernetesSecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultAuthKubernetesSecretRef
		return ret
	}).(IssuerSpecVaultAuthKubernetesSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultAuthKubernetesSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetesSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthKubernetesSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetesSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A reference to a service account that will be used to request a bound
// token (also known as "projected token"). Compared to using "secretRef",
// using this field means that you don't rely on statically bound tokens. To
// use this field, you must configure an RBAC rule to let cert-manager
// request a token.
type IssuerSpecVaultAuthKubernetesServiceAccountRef struct {
	// TokenAudiences is an optional list of extra audiences to include in the token passed to Vault. The default token
	// consisting of the issuer's namespace and name is always included.
	Audiences []string `pulumi:"audiences"`
	// Name of the ServiceAccount used to request a token.
	Name string `pulumi:"name"`
}

// IssuerSpecVaultAuthKubernetesServiceAccountRefInput is an input type that accepts IssuerSpecVaultAuthKubernetesServiceAccountRefArgs and IssuerSpecVaultAuthKubernetesServiceAccountRefOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthKubernetesServiceAccountRefInput` via:
//
//	IssuerSpecVaultAuthKubernetesServiceAccountRefArgs{...}
type IssuerSpecVaultAuthKubernetesServiceAccountRefInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthKubernetesServiceAccountRefOutput() IssuerSpecVaultAuthKubernetesServiceAccountRefOutput
	ToIssuerSpecVaultAuthKubernetesServiceAccountRefOutputWithContext(context.Context) IssuerSpecVaultAuthKubernetesServiceAccountRefOutput
}

// A reference to a service account that will be used to request a bound
// token (also known as "projected token"). Compared to using "secretRef",
// using this field means that you don't rely on statically bound tokens. To
// use this field, you must configure an RBAC rule to let cert-manager
// request a token.
type IssuerSpecVaultAuthKubernetesServiceAccountRefArgs struct {
	// TokenAudiences is an optional list of extra audiences to include in the token passed to Vault. The default token
	// consisting of the issuer's namespace and name is always included.
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// Name of the ServiceAccount used to request a token.
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecVaultAuthKubernetesServiceAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthKubernetesServiceAccountRef)(nil)).Elem()
}

func (i IssuerSpecVaultAuthKubernetesServiceAccountRefArgs) ToIssuerSpecVaultAuthKubernetesServiceAccountRefOutput() IssuerSpecVaultAuthKubernetesServiceAccountRefOutput {
	return i.ToIssuerSpecVaultAuthKubernetesServiceAccountRefOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthKubernetesServiceAccountRefArgs) ToIssuerSpecVaultAuthKubernetesServiceAccountRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesServiceAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesServiceAccountRefOutput)
}

func (i IssuerSpecVaultAuthKubernetesServiceAccountRefArgs) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput() IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput {
	return i.ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthKubernetesServiceAccountRefArgs) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesServiceAccountRefOutput).ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthKubernetesServiceAccountRefPtrInput is an input type that accepts IssuerSpecVaultAuthKubernetesServiceAccountRefArgs, IssuerSpecVaultAuthKubernetesServiceAccountRefPtr and IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthKubernetesServiceAccountRefPtrInput` via:
//
//	        IssuerSpecVaultAuthKubernetesServiceAccountRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultAuthKubernetesServiceAccountRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput() IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput
	ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(context.Context) IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput
}

type issuerSpecVaultAuthKubernetesServiceAccountRefPtrType IssuerSpecVaultAuthKubernetesServiceAccountRefArgs

func IssuerSpecVaultAuthKubernetesServiceAccountRefPtr(v *IssuerSpecVaultAuthKubernetesServiceAccountRefArgs) IssuerSpecVaultAuthKubernetesServiceAccountRefPtrInput {
	return (*issuerSpecVaultAuthKubernetesServiceAccountRefPtrType)(v)
}

func (*issuerSpecVaultAuthKubernetesServiceAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthKubernetesServiceAccountRef)(nil)).Elem()
}

func (i *issuerSpecVaultAuthKubernetesServiceAccountRefPtrType) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput() IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput {
	return i.ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthKubernetesServiceAccountRefPtrType) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput)
}

// A reference to a service account that will be used to request a bound
// token (also known as "projected token"). Compared to using "secretRef",
// using this field means that you don't rely on statically bound tokens. To
// use this field, you must configure an RBAC rule to let cert-manager
// request a token.
type IssuerSpecVaultAuthKubernetesServiceAccountRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthKubernetesServiceAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthKubernetesServiceAccountRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthKubernetesServiceAccountRefOutput) ToIssuerSpecVaultAuthKubernetesServiceAccountRefOutput() IssuerSpecVaultAuthKubernetesServiceAccountRefOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesServiceAccountRefOutput) ToIssuerSpecVaultAuthKubernetesServiceAccountRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesServiceAccountRefOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesServiceAccountRefOutput) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput() IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o.ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthKubernetesServiceAccountRefOutput) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultAuthKubernetesServiceAccountRef) *IssuerSpecVaultAuthKubernetesServiceAccountRef {
		return &v
	}).(IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput)
}

// TokenAudiences is an optional list of extra audiences to include in the token passed to Vault. The default token
// consisting of the issuer's namespace and name is always included.
func (o IssuerSpecVaultAuthKubernetesServiceAccountRefOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetesServiceAccountRef) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// Name of the ServiceAccount used to request a token.
func (o IssuerSpecVaultAuthKubernetesServiceAccountRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetesServiceAccountRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthKubernetesServiceAccountRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput() IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput) Elem() IssuerSpecVaultAuthKubernetesServiceAccountRefOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetesServiceAccountRef) IssuerSpecVaultAuthKubernetesServiceAccountRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultAuthKubernetesServiceAccountRef
		return ret
	}).(IssuerSpecVaultAuthKubernetesServiceAccountRefOutput)
}

// TokenAudiences is an optional list of extra audiences to include in the token passed to Vault. The default token
// consisting of the issuer's namespace and name is always included.
func (o IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetesServiceAccountRef) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// Name of the ServiceAccount used to request a token.
func (o IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetesServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
type IssuerSpecVaultAuthTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecVaultAuthTokenSecretRefInput is an input type that accepts IssuerSpecVaultAuthTokenSecretRefArgs and IssuerSpecVaultAuthTokenSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthTokenSecretRefInput` via:
//
//	IssuerSpecVaultAuthTokenSecretRefArgs{...}
type IssuerSpecVaultAuthTokenSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthTokenSecretRefOutput() IssuerSpecVaultAuthTokenSecretRefOutput
	ToIssuerSpecVaultAuthTokenSecretRefOutputWithContext(context.Context) IssuerSpecVaultAuthTokenSecretRefOutput
}

// TokenSecretRef authenticates with Vault by presenting a token.
type IssuerSpecVaultAuthTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecVaultAuthTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthTokenSecretRef)(nil)).Elem()
}

func (i IssuerSpecVaultAuthTokenSecretRefArgs) ToIssuerSpecVaultAuthTokenSecretRefOutput() IssuerSpecVaultAuthTokenSecretRefOutput {
	return i.ToIssuerSpecVaultAuthTokenSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthTokenSecretRefArgs) ToIssuerSpecVaultAuthTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthTokenSecretRefOutput)
}

func (i IssuerSpecVaultAuthTokenSecretRefArgs) ToIssuerSpecVaultAuthTokenSecretRefPtrOutput() IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return i.ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthTokenSecretRefArgs) ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthTokenSecretRefOutput).ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthTokenSecretRefPtrInput is an input type that accepts IssuerSpecVaultAuthTokenSecretRefArgs, IssuerSpecVaultAuthTokenSecretRefPtr and IssuerSpecVaultAuthTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthTokenSecretRefPtrInput` via:
//
//	        IssuerSpecVaultAuthTokenSecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultAuthTokenSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthTokenSecretRefPtrOutput() IssuerSpecVaultAuthTokenSecretRefPtrOutput
	ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(context.Context) IssuerSpecVaultAuthTokenSecretRefPtrOutput
}

type issuerSpecVaultAuthTokenSecretRefPtrType IssuerSpecVaultAuthTokenSecretRefArgs

func IssuerSpecVaultAuthTokenSecretRefPtr(v *IssuerSpecVaultAuthTokenSecretRefArgs) IssuerSpecVaultAuthTokenSecretRefPtrInput {
	return (*issuerSpecVaultAuthTokenSecretRefPtrType)(v)
}

func (*issuerSpecVaultAuthTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthTokenSecretRef)(nil)).Elem()
}

func (i *issuerSpecVaultAuthTokenSecretRefPtrType) ToIssuerSpecVaultAuthTokenSecretRefPtrOutput() IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return i.ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthTokenSecretRefPtrType) ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthTokenSecretRefPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
type IssuerSpecVaultAuthTokenSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthTokenSecretRefOutput) ToIssuerSpecVaultAuthTokenSecretRefOutput() IssuerSpecVaultAuthTokenSecretRefOutput {
	return o
}

func (o IssuerSpecVaultAuthTokenSecretRefOutput) ToIssuerSpecVaultAuthTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefOutput {
	return o
}

func (o IssuerSpecVaultAuthTokenSecretRefOutput) ToIssuerSpecVaultAuthTokenSecretRefPtrOutput() IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o.ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthTokenSecretRefOutput) ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultAuthTokenSecretRef) *IssuerSpecVaultAuthTokenSecretRef {
		return &v
	}).(IssuerSpecVaultAuthTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultAuthTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecVaultAuthTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthTokenSecretRefPtrOutput) ToIssuerSpecVaultAuthTokenSecretRefPtrOutput() IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthTokenSecretRefPtrOutput) ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthTokenSecretRefPtrOutput) Elem() IssuerSpecVaultAuthTokenSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthTokenSecretRef) IssuerSpecVaultAuthTokenSecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultAuthTokenSecretRef
		return ret
	}).(IssuerSpecVaultAuthTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultAuthTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Reference to a Secret containing a bundle of PEM-encoded CAs to use when
// verifying the certificate chain presented by Vault when using HTTPS.
// Mutually exclusive with CABundle.
// If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
// the cert-manager controller container is used to validate the TLS connection.
// If no key for the Secret is specified, cert-manager will default to 'ca.crt'.
type IssuerSpecVaultCaBundleSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecVaultCaBundleSecretRefInput is an input type that accepts IssuerSpecVaultCaBundleSecretRefArgs and IssuerSpecVaultCaBundleSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecVaultCaBundleSecretRefInput` via:
//
//	IssuerSpecVaultCaBundleSecretRefArgs{...}
type IssuerSpecVaultCaBundleSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecVaultCaBundleSecretRefOutput() IssuerSpecVaultCaBundleSecretRefOutput
	ToIssuerSpecVaultCaBundleSecretRefOutputWithContext(context.Context) IssuerSpecVaultCaBundleSecretRefOutput
}

// Reference to a Secret containing a bundle of PEM-encoded CAs to use when
// verifying the certificate chain presented by Vault when using HTTPS.
// Mutually exclusive with CABundle.
// If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
// the cert-manager controller container is used to validate the TLS connection.
// If no key for the Secret is specified, cert-manager will default to 'ca.crt'.
type IssuerSpecVaultCaBundleSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecVaultCaBundleSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultCaBundleSecretRef)(nil)).Elem()
}

func (i IssuerSpecVaultCaBundleSecretRefArgs) ToIssuerSpecVaultCaBundleSecretRefOutput() IssuerSpecVaultCaBundleSecretRefOutput {
	return i.ToIssuerSpecVaultCaBundleSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecVaultCaBundleSecretRefArgs) ToIssuerSpecVaultCaBundleSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultCaBundleSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultCaBundleSecretRefOutput)
}

func (i IssuerSpecVaultCaBundleSecretRefArgs) ToIssuerSpecVaultCaBundleSecretRefPtrOutput() IssuerSpecVaultCaBundleSecretRefPtrOutput {
	return i.ToIssuerSpecVaultCaBundleSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultCaBundleSecretRefArgs) ToIssuerSpecVaultCaBundleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultCaBundleSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultCaBundleSecretRefOutput).ToIssuerSpecVaultCaBundleSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecVaultCaBundleSecretRefPtrInput is an input type that accepts IssuerSpecVaultCaBundleSecretRefArgs, IssuerSpecVaultCaBundleSecretRefPtr and IssuerSpecVaultCaBundleSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultCaBundleSecretRefPtrInput` via:
//
//	        IssuerSpecVaultCaBundleSecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultCaBundleSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultCaBundleSecretRefPtrOutput() IssuerSpecVaultCaBundleSecretRefPtrOutput
	ToIssuerSpecVaultCaBundleSecretRefPtrOutputWithContext(context.Context) IssuerSpecVaultCaBundleSecretRefPtrOutput
}

type issuerSpecVaultCaBundleSecretRefPtrType IssuerSpecVaultCaBundleSecretRefArgs

func IssuerSpecVaultCaBundleSecretRefPtr(v *IssuerSpecVaultCaBundleSecretRefArgs) IssuerSpecVaultCaBundleSecretRefPtrInput {
	return (*issuerSpecVaultCaBundleSecretRefPtrType)(v)
}

func (*issuerSpecVaultCaBundleSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultCaBundleSecretRef)(nil)).Elem()
}

func (i *issuerSpecVaultCaBundleSecretRefPtrType) ToIssuerSpecVaultCaBundleSecretRefPtrOutput() IssuerSpecVaultCaBundleSecretRefPtrOutput {
	return i.ToIssuerSpecVaultCaBundleSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultCaBundleSecretRefPtrType) ToIssuerSpecVaultCaBundleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultCaBundleSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultCaBundleSecretRefPtrOutput)
}

// Reference to a Secret containing a bundle of PEM-encoded CAs to use when
// verifying the certificate chain presented by Vault when using HTTPS.
// Mutually exclusive with CABundle.
// If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
// the cert-manager controller container is used to validate the TLS connection.
// If no key for the Secret is specified, cert-manager will default to 'ca.crt'.
type IssuerSpecVaultCaBundleSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultCaBundleSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultCaBundleSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultCaBundleSecretRefOutput) ToIssuerSpecVaultCaBundleSecretRefOutput() IssuerSpecVaultCaBundleSecretRefOutput {
	return o
}

func (o IssuerSpecVaultCaBundleSecretRefOutput) ToIssuerSpecVaultCaBundleSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultCaBundleSecretRefOutput {
	return o
}

func (o IssuerSpecVaultCaBundleSecretRefOutput) ToIssuerSpecVaultCaBundleSecretRefPtrOutput() IssuerSpecVaultCaBundleSecretRefPtrOutput {
	return o.ToIssuerSpecVaultCaBundleSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultCaBundleSecretRefOutput) ToIssuerSpecVaultCaBundleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultCaBundleSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultCaBundleSecretRef) *IssuerSpecVaultCaBundleSecretRef {
		return &v
	}).(IssuerSpecVaultCaBundleSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultCaBundleSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultCaBundleSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultCaBundleSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVaultCaBundleSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecVaultCaBundleSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultCaBundleSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultCaBundleSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultCaBundleSecretRefPtrOutput) ToIssuerSpecVaultCaBundleSecretRefPtrOutput() IssuerSpecVaultCaBundleSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultCaBundleSecretRefPtrOutput) ToIssuerSpecVaultCaBundleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultCaBundleSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultCaBundleSecretRefPtrOutput) Elem() IssuerSpecVaultCaBundleSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecVaultCaBundleSecretRef) IssuerSpecVaultCaBundleSecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultCaBundleSecretRef
		return ret
	}).(IssuerSpecVaultCaBundleSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultCaBundleSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultCaBundleSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultCaBundleSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultCaBundleSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Reference to a Secret containing a PEM-encoded Client Certificate to use when the
// Vault server requires mTLS.
type IssuerSpecVaultClientCertSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecVaultClientCertSecretRefInput is an input type that accepts IssuerSpecVaultClientCertSecretRefArgs and IssuerSpecVaultClientCertSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecVaultClientCertSecretRefInput` via:
//
//	IssuerSpecVaultClientCertSecretRefArgs{...}
type IssuerSpecVaultClientCertSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecVaultClientCertSecretRefOutput() IssuerSpecVaultClientCertSecretRefOutput
	ToIssuerSpecVaultClientCertSecretRefOutputWithContext(context.Context) IssuerSpecVaultClientCertSecretRefOutput
}

// Reference to a Secret containing a PEM-encoded Client Certificate to use when the
// Vault server requires mTLS.
type IssuerSpecVaultClientCertSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecVaultClientCertSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultClientCertSecretRef)(nil)).Elem()
}

func (i IssuerSpecVaultClientCertSecretRefArgs) ToIssuerSpecVaultClientCertSecretRefOutput() IssuerSpecVaultClientCertSecretRefOutput {
	return i.ToIssuerSpecVaultClientCertSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecVaultClientCertSecretRefArgs) ToIssuerSpecVaultClientCertSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultClientCertSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultClientCertSecretRefOutput)
}

func (i IssuerSpecVaultClientCertSecretRefArgs) ToIssuerSpecVaultClientCertSecretRefPtrOutput() IssuerSpecVaultClientCertSecretRefPtrOutput {
	return i.ToIssuerSpecVaultClientCertSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultClientCertSecretRefArgs) ToIssuerSpecVaultClientCertSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultClientCertSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultClientCertSecretRefOutput).ToIssuerSpecVaultClientCertSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecVaultClientCertSecretRefPtrInput is an input type that accepts IssuerSpecVaultClientCertSecretRefArgs, IssuerSpecVaultClientCertSecretRefPtr and IssuerSpecVaultClientCertSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultClientCertSecretRefPtrInput` via:
//
//	        IssuerSpecVaultClientCertSecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultClientCertSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultClientCertSecretRefPtrOutput() IssuerSpecVaultClientCertSecretRefPtrOutput
	ToIssuerSpecVaultClientCertSecretRefPtrOutputWithContext(context.Context) IssuerSpecVaultClientCertSecretRefPtrOutput
}

type issuerSpecVaultClientCertSecretRefPtrType IssuerSpecVaultClientCertSecretRefArgs

func IssuerSpecVaultClientCertSecretRefPtr(v *IssuerSpecVaultClientCertSecretRefArgs) IssuerSpecVaultClientCertSecretRefPtrInput {
	return (*issuerSpecVaultClientCertSecretRefPtrType)(v)
}

func (*issuerSpecVaultClientCertSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultClientCertSecretRef)(nil)).Elem()
}

func (i *issuerSpecVaultClientCertSecretRefPtrType) ToIssuerSpecVaultClientCertSecretRefPtrOutput() IssuerSpecVaultClientCertSecretRefPtrOutput {
	return i.ToIssuerSpecVaultClientCertSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultClientCertSecretRefPtrType) ToIssuerSpecVaultClientCertSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultClientCertSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultClientCertSecretRefPtrOutput)
}

// Reference to a Secret containing a PEM-encoded Client Certificate to use when the
// Vault server requires mTLS.
type IssuerSpecVaultClientCertSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultClientCertSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultClientCertSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultClientCertSecretRefOutput) ToIssuerSpecVaultClientCertSecretRefOutput() IssuerSpecVaultClientCertSecretRefOutput {
	return o
}

func (o IssuerSpecVaultClientCertSecretRefOutput) ToIssuerSpecVaultClientCertSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultClientCertSecretRefOutput {
	return o
}

func (o IssuerSpecVaultClientCertSecretRefOutput) ToIssuerSpecVaultClientCertSecretRefPtrOutput() IssuerSpecVaultClientCertSecretRefPtrOutput {
	return o.ToIssuerSpecVaultClientCertSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultClientCertSecretRefOutput) ToIssuerSpecVaultClientCertSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultClientCertSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultClientCertSecretRef) *IssuerSpecVaultClientCertSecretRef {
		return &v
	}).(IssuerSpecVaultClientCertSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultClientCertSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultClientCertSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultClientCertSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVaultClientCertSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecVaultClientCertSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultClientCertSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultClientCertSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultClientCertSecretRefPtrOutput) ToIssuerSpecVaultClientCertSecretRefPtrOutput() IssuerSpecVaultClientCertSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultClientCertSecretRefPtrOutput) ToIssuerSpecVaultClientCertSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultClientCertSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultClientCertSecretRefPtrOutput) Elem() IssuerSpecVaultClientCertSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecVaultClientCertSecretRef) IssuerSpecVaultClientCertSecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultClientCertSecretRef
		return ret
	}).(IssuerSpecVaultClientCertSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultClientCertSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultClientCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultClientCertSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultClientCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Reference to a Secret containing a PEM-encoded Client Private Key to use when the
// Vault server requires mTLS.
type IssuerSpecVaultClientKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecVaultClientKeySecretRefInput is an input type that accepts IssuerSpecVaultClientKeySecretRefArgs and IssuerSpecVaultClientKeySecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecVaultClientKeySecretRefInput` via:
//
//	IssuerSpecVaultClientKeySecretRefArgs{...}
type IssuerSpecVaultClientKeySecretRefInput interface {
	pulumi.Input

	ToIssuerSpecVaultClientKeySecretRefOutput() IssuerSpecVaultClientKeySecretRefOutput
	ToIssuerSpecVaultClientKeySecretRefOutputWithContext(context.Context) IssuerSpecVaultClientKeySecretRefOutput
}

// Reference to a Secret containing a PEM-encoded Client Private Key to use when the
// Vault server requires mTLS.
type IssuerSpecVaultClientKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecVaultClientKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultClientKeySecretRef)(nil)).Elem()
}

func (i IssuerSpecVaultClientKeySecretRefArgs) ToIssuerSpecVaultClientKeySecretRefOutput() IssuerSpecVaultClientKeySecretRefOutput {
	return i.ToIssuerSpecVaultClientKeySecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecVaultClientKeySecretRefArgs) ToIssuerSpecVaultClientKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultClientKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultClientKeySecretRefOutput)
}

func (i IssuerSpecVaultClientKeySecretRefArgs) ToIssuerSpecVaultClientKeySecretRefPtrOutput() IssuerSpecVaultClientKeySecretRefPtrOutput {
	return i.ToIssuerSpecVaultClientKeySecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultClientKeySecretRefArgs) ToIssuerSpecVaultClientKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultClientKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultClientKeySecretRefOutput).ToIssuerSpecVaultClientKeySecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecVaultClientKeySecretRefPtrInput is an input type that accepts IssuerSpecVaultClientKeySecretRefArgs, IssuerSpecVaultClientKeySecretRefPtr and IssuerSpecVaultClientKeySecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultClientKeySecretRefPtrInput` via:
//
//	        IssuerSpecVaultClientKeySecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultClientKeySecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultClientKeySecretRefPtrOutput() IssuerSpecVaultClientKeySecretRefPtrOutput
	ToIssuerSpecVaultClientKeySecretRefPtrOutputWithContext(context.Context) IssuerSpecVaultClientKeySecretRefPtrOutput
}

type issuerSpecVaultClientKeySecretRefPtrType IssuerSpecVaultClientKeySecretRefArgs

func IssuerSpecVaultClientKeySecretRefPtr(v *IssuerSpecVaultClientKeySecretRefArgs) IssuerSpecVaultClientKeySecretRefPtrInput {
	return (*issuerSpecVaultClientKeySecretRefPtrType)(v)
}

func (*issuerSpecVaultClientKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultClientKeySecretRef)(nil)).Elem()
}

func (i *issuerSpecVaultClientKeySecretRefPtrType) ToIssuerSpecVaultClientKeySecretRefPtrOutput() IssuerSpecVaultClientKeySecretRefPtrOutput {
	return i.ToIssuerSpecVaultClientKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultClientKeySecretRefPtrType) ToIssuerSpecVaultClientKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultClientKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultClientKeySecretRefPtrOutput)
}

// Reference to a Secret containing a PEM-encoded Client Private Key to use when the
// Vault server requires mTLS.
type IssuerSpecVaultClientKeySecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultClientKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultClientKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultClientKeySecretRefOutput) ToIssuerSpecVaultClientKeySecretRefOutput() IssuerSpecVaultClientKeySecretRefOutput {
	return o
}

func (o IssuerSpecVaultClientKeySecretRefOutput) ToIssuerSpecVaultClientKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultClientKeySecretRefOutput {
	return o
}

func (o IssuerSpecVaultClientKeySecretRefOutput) ToIssuerSpecVaultClientKeySecretRefPtrOutput() IssuerSpecVaultClientKeySecretRefPtrOutput {
	return o.ToIssuerSpecVaultClientKeySecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultClientKeySecretRefOutput) ToIssuerSpecVaultClientKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultClientKeySecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultClientKeySecretRef) *IssuerSpecVaultClientKeySecretRef {
		return &v
	}).(IssuerSpecVaultClientKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultClientKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultClientKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultClientKeySecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVaultClientKeySecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecVaultClientKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultClientKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultClientKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultClientKeySecretRefPtrOutput) ToIssuerSpecVaultClientKeySecretRefPtrOutput() IssuerSpecVaultClientKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultClientKeySecretRefPtrOutput) ToIssuerSpecVaultClientKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultClientKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultClientKeySecretRefPtrOutput) Elem() IssuerSpecVaultClientKeySecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecVaultClientKeySecretRef) IssuerSpecVaultClientKeySecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultClientKeySecretRef
		return ret
	}).(IssuerSpecVaultClientKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultClientKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultClientKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultClientKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultClientKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Venafi configures this issuer to sign certificates using a Venafi TPP
// or Venafi Cloud policy zone.
type IssuerSpecVenafi struct {
	// Cloud specifies the Venafi cloud configuration settings.
	// Only one of TPP or Cloud may be specified.
	Cloud *IssuerSpecVenafiCloud `pulumi:"cloud"`
	// TPP specifies Trust Protection Platform configuration settings.
	// Only one of TPP or Cloud may be specified.
	Tpp *IssuerSpecVenafiTpp `pulumi:"tpp"`
	// Zone is the Venafi Policy Zone to use for this issuer.
	// All requests made to the Venafi platform will be restricted by the named
	// zone policy.
	// This field is required.
	Zone string `pulumi:"zone"`
}

// IssuerSpecVenafiInput is an input type that accepts IssuerSpecVenafiArgs and IssuerSpecVenafiOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiInput` via:
//
//	IssuerSpecVenafiArgs{...}
type IssuerSpecVenafiInput interface {
	pulumi.Input

	ToIssuerSpecVenafiOutput() IssuerSpecVenafiOutput
	ToIssuerSpecVenafiOutputWithContext(context.Context) IssuerSpecVenafiOutput
}

// Venafi configures this issuer to sign certificates using a Venafi TPP
// or Venafi Cloud policy zone.
type IssuerSpecVenafiArgs struct {
	// Cloud specifies the Venafi cloud configuration settings.
	// Only one of TPP or Cloud may be specified.
	Cloud IssuerSpecVenafiCloudPtrInput `pulumi:"cloud"`
	// TPP specifies Trust Protection Platform configuration settings.
	// Only one of TPP or Cloud may be specified.
	Tpp IssuerSpecVenafiTppPtrInput `pulumi:"tpp"`
	// Zone is the Venafi Policy Zone to use for this issuer.
	// All requests made to the Venafi platform will be restricted by the named
	// zone policy.
	// This field is required.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (IssuerSpecVenafiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafi)(nil)).Elem()
}

func (i IssuerSpecVenafiArgs) ToIssuerSpecVenafiOutput() IssuerSpecVenafiOutput {
	return i.ToIssuerSpecVenafiOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiArgs) ToIssuerSpecVenafiOutputWithContext(ctx context.Context) IssuerSpecVenafiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiOutput)
}

func (i IssuerSpecVenafiArgs) ToIssuerSpecVenafiPtrOutput() IssuerSpecVenafiPtrOutput {
	return i.ToIssuerSpecVenafiPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiArgs) ToIssuerSpecVenafiPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiOutput).ToIssuerSpecVenafiPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiPtrInput is an input type that accepts IssuerSpecVenafiArgs, IssuerSpecVenafiPtr and IssuerSpecVenafiPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiPtrInput` via:
//
//	        IssuerSpecVenafiArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVenafiPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiPtrOutput() IssuerSpecVenafiPtrOutput
	ToIssuerSpecVenafiPtrOutputWithContext(context.Context) IssuerSpecVenafiPtrOutput
}

type issuerSpecVenafiPtrType IssuerSpecVenafiArgs

func IssuerSpecVenafiPtr(v *IssuerSpecVenafiArgs) IssuerSpecVenafiPtrInput {
	return (*issuerSpecVenafiPtrType)(v)
}

func (*issuerSpecVenafiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafi)(nil)).Elem()
}

func (i *issuerSpecVenafiPtrType) ToIssuerSpecVenafiPtrOutput() IssuerSpecVenafiPtrOutput {
	return i.ToIssuerSpecVenafiPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiPtrType) ToIssuerSpecVenafiPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiPtrOutput)
}

// Venafi configures this issuer to sign certificates using a Venafi TPP
// or Venafi Cloud policy zone.
type IssuerSpecVenafiOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafi)(nil)).Elem()
}

func (o IssuerSpecVenafiOutput) ToIssuerSpecVenafiOutput() IssuerSpecVenafiOutput {
	return o
}

func (o IssuerSpecVenafiOutput) ToIssuerSpecVenafiOutputWithContext(ctx context.Context) IssuerSpecVenafiOutput {
	return o
}

func (o IssuerSpecVenafiOutput) ToIssuerSpecVenafiPtrOutput() IssuerSpecVenafiPtrOutput {
	return o.ToIssuerSpecVenafiPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiOutput) ToIssuerSpecVenafiPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVenafi) *IssuerSpecVenafi {
		return &v
	}).(IssuerSpecVenafiPtrOutput)
}

// Cloud specifies the Venafi cloud configuration settings.
// Only one of TPP or Cloud may be specified.
func (o IssuerSpecVenafiOutput) Cloud() IssuerSpecVenafiCloudPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafi) *IssuerSpecVenafiCloud { return v.Cloud }).(IssuerSpecVenafiCloudPtrOutput)
}

// TPP specifies Trust Protection Platform configuration settings.
// Only one of TPP or Cloud may be specified.
func (o IssuerSpecVenafiOutput) Tpp() IssuerSpecVenafiTppPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafi) *IssuerSpecVenafiTpp { return v.Tpp }).(IssuerSpecVenafiTppPtrOutput)
}

// Zone is the Venafi Policy Zone to use for this issuer.
// All requests made to the Venafi platform will be restricted by the named
// zone policy.
// This field is required.
func (o IssuerSpecVenafiOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVenafi) string { return v.Zone }).(pulumi.StringOutput)
}

type IssuerSpecVenafiPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafi)(nil)).Elem()
}

func (o IssuerSpecVenafiPtrOutput) ToIssuerSpecVenafiPtrOutput() IssuerSpecVenafiPtrOutput {
	return o
}

func (o IssuerSpecVenafiPtrOutput) ToIssuerSpecVenafiPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiPtrOutput {
	return o
}

func (o IssuerSpecVenafiPtrOutput) Elem() IssuerSpecVenafiOutput {
	return o.ApplyT(func(v *IssuerSpecVenafi) IssuerSpecVenafi {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVenafi
		return ret
	}).(IssuerSpecVenafiOutput)
}

// Cloud specifies the Venafi cloud configuration settings.
// Only one of TPP or Cloud may be specified.
func (o IssuerSpecVenafiPtrOutput) Cloud() IssuerSpecVenafiCloudPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafi) *IssuerSpecVenafiCloud {
		if v == nil {
			return nil
		}
		return v.Cloud
	}).(IssuerSpecVenafiCloudPtrOutput)
}

// TPP specifies Trust Protection Platform configuration settings.
// Only one of TPP or Cloud may be specified.
func (o IssuerSpecVenafiPtrOutput) Tpp() IssuerSpecVenafiTppPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafi) *IssuerSpecVenafiTpp {
		if v == nil {
			return nil
		}
		return v.Tpp
	}).(IssuerSpecVenafiTppPtrOutput)
}

// Zone is the Venafi Policy Zone to use for this issuer.
// All requests made to the Venafi platform will be restricted by the named
// zone policy.
// This field is required.
func (o IssuerSpecVenafiPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafi) *string {
		if v == nil {
			return nil
		}
		return &v.Zone
	}).(pulumi.StringPtrOutput)
}

// Cloud specifies the Venafi cloud configuration settings.
// Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiCloud struct {
	// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
	ApiTokenSecretRef IssuerSpecVenafiCloudApiTokenSecretRef `pulumi:"apiTokenSecretRef"`
	// URL is the base URL for Venafi Cloud.
	// Defaults to "https://api.venafi.cloud/v1".
	Url *string `pulumi:"url"`
}

// IssuerSpecVenafiCloudInput is an input type that accepts IssuerSpecVenafiCloudArgs and IssuerSpecVenafiCloudOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiCloudInput` via:
//
//	IssuerSpecVenafiCloudArgs{...}
type IssuerSpecVenafiCloudInput interface {
	pulumi.Input

	ToIssuerSpecVenafiCloudOutput() IssuerSpecVenafiCloudOutput
	ToIssuerSpecVenafiCloudOutputWithContext(context.Context) IssuerSpecVenafiCloudOutput
}

// Cloud specifies the Venafi cloud configuration settings.
// Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiCloudArgs struct {
	// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
	ApiTokenSecretRef IssuerSpecVenafiCloudApiTokenSecretRefInput `pulumi:"apiTokenSecretRef"`
	// URL is the base URL for Venafi Cloud.
	// Defaults to "https://api.venafi.cloud/v1".
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (IssuerSpecVenafiCloudArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiCloud)(nil)).Elem()
}

func (i IssuerSpecVenafiCloudArgs) ToIssuerSpecVenafiCloudOutput() IssuerSpecVenafiCloudOutput {
	return i.ToIssuerSpecVenafiCloudOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiCloudArgs) ToIssuerSpecVenafiCloudOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudOutput)
}

func (i IssuerSpecVenafiCloudArgs) ToIssuerSpecVenafiCloudPtrOutput() IssuerSpecVenafiCloudPtrOutput {
	return i.ToIssuerSpecVenafiCloudPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiCloudArgs) ToIssuerSpecVenafiCloudPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudOutput).ToIssuerSpecVenafiCloudPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiCloudPtrInput is an input type that accepts IssuerSpecVenafiCloudArgs, IssuerSpecVenafiCloudPtr and IssuerSpecVenafiCloudPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiCloudPtrInput` via:
//
//	        IssuerSpecVenafiCloudArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVenafiCloudPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiCloudPtrOutput() IssuerSpecVenafiCloudPtrOutput
	ToIssuerSpecVenafiCloudPtrOutputWithContext(context.Context) IssuerSpecVenafiCloudPtrOutput
}

type issuerSpecVenafiCloudPtrType IssuerSpecVenafiCloudArgs

func IssuerSpecVenafiCloudPtr(v *IssuerSpecVenafiCloudArgs) IssuerSpecVenafiCloudPtrInput {
	return (*issuerSpecVenafiCloudPtrType)(v)
}

func (*issuerSpecVenafiCloudPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiCloud)(nil)).Elem()
}

func (i *issuerSpecVenafiCloudPtrType) ToIssuerSpecVenafiCloudPtrOutput() IssuerSpecVenafiCloudPtrOutput {
	return i.ToIssuerSpecVenafiCloudPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiCloudPtrType) ToIssuerSpecVenafiCloudPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudPtrOutput)
}

// Cloud specifies the Venafi cloud configuration settings.
// Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiCloudOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiCloudOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiCloud)(nil)).Elem()
}

func (o IssuerSpecVenafiCloudOutput) ToIssuerSpecVenafiCloudOutput() IssuerSpecVenafiCloudOutput {
	return o
}

func (o IssuerSpecVenafiCloudOutput) ToIssuerSpecVenafiCloudOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudOutput {
	return o
}

func (o IssuerSpecVenafiCloudOutput) ToIssuerSpecVenafiCloudPtrOutput() IssuerSpecVenafiCloudPtrOutput {
	return o.ToIssuerSpecVenafiCloudPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiCloudOutput) ToIssuerSpecVenafiCloudPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVenafiCloud) *IssuerSpecVenafiCloud {
		return &v
	}).(IssuerSpecVenafiCloudPtrOutput)
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
func (o IssuerSpecVenafiCloudOutput) ApiTokenSecretRef() IssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return o.ApplyT(func(v IssuerSpecVenafiCloud) IssuerSpecVenafiCloudApiTokenSecretRef { return v.ApiTokenSecretRef }).(IssuerSpecVenafiCloudApiTokenSecretRefOutput)
}

// URL is the base URL for Venafi Cloud.
// Defaults to "https://api.venafi.cloud/v1".
func (o IssuerSpecVenafiCloudOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiCloud) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type IssuerSpecVenafiCloudPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiCloudPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiCloud)(nil)).Elem()
}

func (o IssuerSpecVenafiCloudPtrOutput) ToIssuerSpecVenafiCloudPtrOutput() IssuerSpecVenafiCloudPtrOutput {
	return o
}

func (o IssuerSpecVenafiCloudPtrOutput) ToIssuerSpecVenafiCloudPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudPtrOutput {
	return o
}

func (o IssuerSpecVenafiCloudPtrOutput) Elem() IssuerSpecVenafiCloudOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiCloud) IssuerSpecVenafiCloud {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVenafiCloud
		return ret
	}).(IssuerSpecVenafiCloudOutput)
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
func (o IssuerSpecVenafiCloudPtrOutput) ApiTokenSecretRef() IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiCloud) *IssuerSpecVenafiCloudApiTokenSecretRef {
		if v == nil {
			return nil
		}
		return &v.ApiTokenSecretRef
	}).(IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput)
}

// URL is the base URL for Venafi Cloud.
// Defaults to "https://api.venafi.cloud/v1".
func (o IssuerSpecVenafiCloudPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiCloud) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
type IssuerSpecVenafiCloudApiTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecVenafiCloudApiTokenSecretRefInput is an input type that accepts IssuerSpecVenafiCloudApiTokenSecretRefArgs and IssuerSpecVenafiCloudApiTokenSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiCloudApiTokenSecretRefInput` via:
//
//	IssuerSpecVenafiCloudApiTokenSecretRefArgs{...}
type IssuerSpecVenafiCloudApiTokenSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecVenafiCloudApiTokenSecretRefOutput() IssuerSpecVenafiCloudApiTokenSecretRefOutput
	ToIssuerSpecVenafiCloudApiTokenSecretRefOutputWithContext(context.Context) IssuerSpecVenafiCloudApiTokenSecretRefOutput
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
type IssuerSpecVenafiCloudApiTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecVenafiCloudApiTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiCloudApiTokenSecretRef)(nil)).Elem()
}

func (i IssuerSpecVenafiCloudApiTokenSecretRefArgs) ToIssuerSpecVenafiCloudApiTokenSecretRefOutput() IssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return i.ToIssuerSpecVenafiCloudApiTokenSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiCloudApiTokenSecretRefArgs) ToIssuerSpecVenafiCloudApiTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudApiTokenSecretRefOutput)
}

func (i IssuerSpecVenafiCloudApiTokenSecretRefArgs) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return i.ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiCloudApiTokenSecretRefArgs) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudApiTokenSecretRefOutput).ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiCloudApiTokenSecretRefPtrInput is an input type that accepts IssuerSpecVenafiCloudApiTokenSecretRefArgs, IssuerSpecVenafiCloudApiTokenSecretRefPtr and IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiCloudApiTokenSecretRefPtrInput` via:
//
//	        IssuerSpecVenafiCloudApiTokenSecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVenafiCloudApiTokenSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput
	ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput
}

type issuerSpecVenafiCloudApiTokenSecretRefPtrType IssuerSpecVenafiCloudApiTokenSecretRefArgs

func IssuerSpecVenafiCloudApiTokenSecretRefPtr(v *IssuerSpecVenafiCloudApiTokenSecretRefArgs) IssuerSpecVenafiCloudApiTokenSecretRefPtrInput {
	return (*issuerSpecVenafiCloudApiTokenSecretRefPtrType)(v)
}

func (*issuerSpecVenafiCloudApiTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiCloudApiTokenSecretRef)(nil)).Elem()
}

func (i *issuerSpecVenafiCloudApiTokenSecretRefPtrType) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return i.ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiCloudApiTokenSecretRefPtrType) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput)
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
type IssuerSpecVenafiCloudApiTokenSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiCloudApiTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiCloudApiTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefOutput() IssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return o
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return o
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o.ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVenafiCloudApiTokenSecretRef) *IssuerSpecVenafiCloudApiTokenSecretRef {
		return &v
	}).(IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVenafiCloudApiTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiCloudApiTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVenafiCloudApiTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVenafiCloudApiTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiCloudApiTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) Elem() IssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiCloudApiTokenSecretRef) IssuerSpecVenafiCloudApiTokenSecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVenafiCloudApiTokenSecretRef
		return ret
	}).(IssuerSpecVenafiCloudApiTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiCloudApiTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiCloudApiTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// TPP specifies Trust Protection Platform configuration settings.
// Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiTpp struct {
	// Base64-encoded bundle of PEM CAs which will be used to validate the certificate
	// chain presented by the TPP server. Only used if using HTTPS; ignored for HTTP.
	// If undefined, the certificate bundle in the cert-manager controller container
	// is used to validate the chain.
	CaBundle *string `pulumi:"caBundle"`
	// CredentialsRef is a reference to a Secret containing the username and
	// password for the TPP server.
	// The secret must contain two keys, 'username' and 'password'.
	CredentialsRef IssuerSpecVenafiTppCredentialsRef `pulumi:"credentialsRef"`
	// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance,
	// for example: "https://tpp.example.com/vedsdk".
	Url string `pulumi:"url"`
}

// IssuerSpecVenafiTppInput is an input type that accepts IssuerSpecVenafiTppArgs and IssuerSpecVenafiTppOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiTppInput` via:
//
//	IssuerSpecVenafiTppArgs{...}
type IssuerSpecVenafiTppInput interface {
	pulumi.Input

	ToIssuerSpecVenafiTppOutput() IssuerSpecVenafiTppOutput
	ToIssuerSpecVenafiTppOutputWithContext(context.Context) IssuerSpecVenafiTppOutput
}

// TPP specifies Trust Protection Platform configuration settings.
// Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiTppArgs struct {
	// Base64-encoded bundle of PEM CAs which will be used to validate the certificate
	// chain presented by the TPP server. Only used if using HTTPS; ignored for HTTP.
	// If undefined, the certificate bundle in the cert-manager controller container
	// is used to validate the chain.
	CaBundle pulumi.StringPtrInput `pulumi:"caBundle"`
	// CredentialsRef is a reference to a Secret containing the username and
	// password for the TPP server.
	// The secret must contain two keys, 'username' and 'password'.
	CredentialsRef IssuerSpecVenafiTppCredentialsRefInput `pulumi:"credentialsRef"`
	// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance,
	// for example: "https://tpp.example.com/vedsdk".
	Url pulumi.StringInput `pulumi:"url"`
}

func (IssuerSpecVenafiTppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiTpp)(nil)).Elem()
}

func (i IssuerSpecVenafiTppArgs) ToIssuerSpecVenafiTppOutput() IssuerSpecVenafiTppOutput {
	return i.ToIssuerSpecVenafiTppOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiTppArgs) ToIssuerSpecVenafiTppOutputWithContext(ctx context.Context) IssuerSpecVenafiTppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppOutput)
}

func (i IssuerSpecVenafiTppArgs) ToIssuerSpecVenafiTppPtrOutput() IssuerSpecVenafiTppPtrOutput {
	return i.ToIssuerSpecVenafiTppPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiTppArgs) ToIssuerSpecVenafiTppPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppOutput).ToIssuerSpecVenafiTppPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiTppPtrInput is an input type that accepts IssuerSpecVenafiTppArgs, IssuerSpecVenafiTppPtr and IssuerSpecVenafiTppPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiTppPtrInput` via:
//
//	        IssuerSpecVenafiTppArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVenafiTppPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiTppPtrOutput() IssuerSpecVenafiTppPtrOutput
	ToIssuerSpecVenafiTppPtrOutputWithContext(context.Context) IssuerSpecVenafiTppPtrOutput
}

type issuerSpecVenafiTppPtrType IssuerSpecVenafiTppArgs

func IssuerSpecVenafiTppPtr(v *IssuerSpecVenafiTppArgs) IssuerSpecVenafiTppPtrInput {
	return (*issuerSpecVenafiTppPtrType)(v)
}

func (*issuerSpecVenafiTppPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiTpp)(nil)).Elem()
}

func (i *issuerSpecVenafiTppPtrType) ToIssuerSpecVenafiTppPtrOutput() IssuerSpecVenafiTppPtrOutput {
	return i.ToIssuerSpecVenafiTppPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiTppPtrType) ToIssuerSpecVenafiTppPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppPtrOutput)
}

// TPP specifies Trust Protection Platform configuration settings.
// Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiTppOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiTppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiTpp)(nil)).Elem()
}

func (o IssuerSpecVenafiTppOutput) ToIssuerSpecVenafiTppOutput() IssuerSpecVenafiTppOutput {
	return o
}

func (o IssuerSpecVenafiTppOutput) ToIssuerSpecVenafiTppOutputWithContext(ctx context.Context) IssuerSpecVenafiTppOutput {
	return o
}

func (o IssuerSpecVenafiTppOutput) ToIssuerSpecVenafiTppPtrOutput() IssuerSpecVenafiTppPtrOutput {
	return o.ToIssuerSpecVenafiTppPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiTppOutput) ToIssuerSpecVenafiTppPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVenafiTpp) *IssuerSpecVenafiTpp {
		return &v
	}).(IssuerSpecVenafiTppPtrOutput)
}

// Base64-encoded bundle of PEM CAs which will be used to validate the certificate
// chain presented by the TPP server. Only used if using HTTPS; ignored for HTTP.
// If undefined, the certificate bundle in the cert-manager controller container
// is used to validate the chain.
func (o IssuerSpecVenafiTppOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiTpp) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

// CredentialsRef is a reference to a Secret containing the username and
// password for the TPP server.
// The secret must contain two keys, 'username' and 'password'.
func (o IssuerSpecVenafiTppOutput) CredentialsRef() IssuerSpecVenafiTppCredentialsRefOutput {
	return o.ApplyT(func(v IssuerSpecVenafiTpp) IssuerSpecVenafiTppCredentialsRef { return v.CredentialsRef }).(IssuerSpecVenafiTppCredentialsRefOutput)
}

// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance,
// for example: "https://tpp.example.com/vedsdk".
func (o IssuerSpecVenafiTppOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVenafiTpp) string { return v.Url }).(pulumi.StringOutput)
}

type IssuerSpecVenafiTppPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiTppPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiTpp)(nil)).Elem()
}

func (o IssuerSpecVenafiTppPtrOutput) ToIssuerSpecVenafiTppPtrOutput() IssuerSpecVenafiTppPtrOutput {
	return o
}

func (o IssuerSpecVenafiTppPtrOutput) ToIssuerSpecVenafiTppPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppPtrOutput {
	return o
}

func (o IssuerSpecVenafiTppPtrOutput) Elem() IssuerSpecVenafiTppOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTpp) IssuerSpecVenafiTpp {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVenafiTpp
		return ret
	}).(IssuerSpecVenafiTppOutput)
}

// Base64-encoded bundle of PEM CAs which will be used to validate the certificate
// chain presented by the TPP server. Only used if using HTTPS; ignored for HTTP.
// If undefined, the certificate bundle in the cert-manager controller container
// is used to validate the chain.
func (o IssuerSpecVenafiTppPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTpp) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

// CredentialsRef is a reference to a Secret containing the username and
// password for the TPP server.
// The secret must contain two keys, 'username' and 'password'.
func (o IssuerSpecVenafiTppPtrOutput) CredentialsRef() IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTpp) *IssuerSpecVenafiTppCredentialsRef {
		if v == nil {
			return nil
		}
		return &v.CredentialsRef
	}).(IssuerSpecVenafiTppCredentialsRefPtrOutput)
}

// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance,
// for example: "https://tpp.example.com/vedsdk".
func (o IssuerSpecVenafiTppPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTpp) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// CredentialsRef is a reference to a Secret containing the username and
// password for the TPP server.
// The secret must contain two keys, 'username' and 'password'.
type IssuerSpecVenafiTppCredentialsRef struct {
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecVenafiTppCredentialsRefInput is an input type that accepts IssuerSpecVenafiTppCredentialsRefArgs and IssuerSpecVenafiTppCredentialsRefOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiTppCredentialsRefInput` via:
//
//	IssuerSpecVenafiTppCredentialsRefArgs{...}
type IssuerSpecVenafiTppCredentialsRefInput interface {
	pulumi.Input

	ToIssuerSpecVenafiTppCredentialsRefOutput() IssuerSpecVenafiTppCredentialsRefOutput
	ToIssuerSpecVenafiTppCredentialsRefOutputWithContext(context.Context) IssuerSpecVenafiTppCredentialsRefOutput
}

// CredentialsRef is a reference to a Secret containing the username and
// password for the TPP server.
// The secret must contain two keys, 'username' and 'password'.
type IssuerSpecVenafiTppCredentialsRefArgs struct {
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecVenafiTppCredentialsRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiTppCredentialsRef)(nil)).Elem()
}

func (i IssuerSpecVenafiTppCredentialsRefArgs) ToIssuerSpecVenafiTppCredentialsRefOutput() IssuerSpecVenafiTppCredentialsRefOutput {
	return i.ToIssuerSpecVenafiTppCredentialsRefOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiTppCredentialsRefArgs) ToIssuerSpecVenafiTppCredentialsRefOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppCredentialsRefOutput)
}

func (i IssuerSpecVenafiTppCredentialsRefArgs) ToIssuerSpecVenafiTppCredentialsRefPtrOutput() IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return i.ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiTppCredentialsRefArgs) ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppCredentialsRefOutput).ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiTppCredentialsRefPtrInput is an input type that accepts IssuerSpecVenafiTppCredentialsRefArgs, IssuerSpecVenafiTppCredentialsRefPtr and IssuerSpecVenafiTppCredentialsRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiTppCredentialsRefPtrInput` via:
//
//	        IssuerSpecVenafiTppCredentialsRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVenafiTppCredentialsRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiTppCredentialsRefPtrOutput() IssuerSpecVenafiTppCredentialsRefPtrOutput
	ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(context.Context) IssuerSpecVenafiTppCredentialsRefPtrOutput
}

type issuerSpecVenafiTppCredentialsRefPtrType IssuerSpecVenafiTppCredentialsRefArgs

func IssuerSpecVenafiTppCredentialsRefPtr(v *IssuerSpecVenafiTppCredentialsRefArgs) IssuerSpecVenafiTppCredentialsRefPtrInput {
	return (*issuerSpecVenafiTppCredentialsRefPtrType)(v)
}

func (*issuerSpecVenafiTppCredentialsRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiTppCredentialsRef)(nil)).Elem()
}

func (i *issuerSpecVenafiTppCredentialsRefPtrType) ToIssuerSpecVenafiTppCredentialsRefPtrOutput() IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return i.ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiTppCredentialsRefPtrType) ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppCredentialsRefPtrOutput)
}

// CredentialsRef is a reference to a Secret containing the username and
// password for the TPP server.
// The secret must contain two keys, 'username' and 'password'.
type IssuerSpecVenafiTppCredentialsRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiTppCredentialsRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiTppCredentialsRef)(nil)).Elem()
}

func (o IssuerSpecVenafiTppCredentialsRefOutput) ToIssuerSpecVenafiTppCredentialsRefOutput() IssuerSpecVenafiTppCredentialsRefOutput {
	return o
}

func (o IssuerSpecVenafiTppCredentialsRefOutput) ToIssuerSpecVenafiTppCredentialsRefOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefOutput {
	return o
}

func (o IssuerSpecVenafiTppCredentialsRefOutput) ToIssuerSpecVenafiTppCredentialsRefPtrOutput() IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o.ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiTppCredentialsRefOutput) ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVenafiTppCredentialsRef) *IssuerSpecVenafiTppCredentialsRef {
		return &v
	}).(IssuerSpecVenafiTppCredentialsRefPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVenafiTppCredentialsRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVenafiTppCredentialsRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecVenafiTppCredentialsRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiTppCredentialsRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiTppCredentialsRef)(nil)).Elem()
}

func (o IssuerSpecVenafiTppCredentialsRefPtrOutput) ToIssuerSpecVenafiTppCredentialsRefPtrOutput() IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o
}

func (o IssuerSpecVenafiTppCredentialsRefPtrOutput) ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o
}

func (o IssuerSpecVenafiTppCredentialsRefPtrOutput) Elem() IssuerSpecVenafiTppCredentialsRefOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTppCredentialsRef) IssuerSpecVenafiTppCredentialsRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVenafiTppCredentialsRef
		return ret
	}).(IssuerSpecVenafiTppCredentialsRefOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVenafiTppCredentialsRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTppCredentialsRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Status of the Issuer. This is set and managed automatically.
type IssuerStatus struct {
	// ACME specific status options.
	// This field should only be set if the Issuer is configured to use an ACME
	// server to issue certificates.
	Acme *IssuerStatusAcme `pulumi:"acme"`
	// List of status conditions to indicate the status of a CertificateRequest.
	// Known condition types are `Ready`.
	Conditions []IssuerStatusConditions `pulumi:"conditions"`
}

// IssuerStatusInput is an input type that accepts IssuerStatusArgs and IssuerStatusOutput values.
// You can construct a concrete instance of `IssuerStatusInput` via:
//
//	IssuerStatusArgs{...}
type IssuerStatusInput interface {
	pulumi.Input

	ToIssuerStatusOutput() IssuerStatusOutput
	ToIssuerStatusOutputWithContext(context.Context) IssuerStatusOutput
}

// Status of the Issuer. This is set and managed automatically.
type IssuerStatusArgs struct {
	// ACME specific status options.
	// This field should only be set if the Issuer is configured to use an ACME
	// server to issue certificates.
	Acme IssuerStatusAcmePtrInput `pulumi:"acme"`
	// List of status conditions to indicate the status of a CertificateRequest.
	// Known condition types are `Ready`.
	Conditions IssuerStatusConditionsArrayInput `pulumi:"conditions"`
}

func (IssuerStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatus)(nil)).Elem()
}

func (i IssuerStatusArgs) ToIssuerStatusOutput() IssuerStatusOutput {
	return i.ToIssuerStatusOutputWithContext(context.Background())
}

func (i IssuerStatusArgs) ToIssuerStatusOutputWithContext(ctx context.Context) IssuerStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusOutput)
}

func (i IssuerStatusArgs) ToIssuerStatusPtrOutput() IssuerStatusPtrOutput {
	return i.ToIssuerStatusPtrOutputWithContext(context.Background())
}

func (i IssuerStatusArgs) ToIssuerStatusPtrOutputWithContext(ctx context.Context) IssuerStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusOutput).ToIssuerStatusPtrOutputWithContext(ctx)
}

// IssuerStatusPtrInput is an input type that accepts IssuerStatusArgs, IssuerStatusPtr and IssuerStatusPtrOutput values.
// You can construct a concrete instance of `IssuerStatusPtrInput` via:
//
//	        IssuerStatusArgs{...}
//
//	or:
//
//	        nil
type IssuerStatusPtrInput interface {
	pulumi.Input

	ToIssuerStatusPtrOutput() IssuerStatusPtrOutput
	ToIssuerStatusPtrOutputWithContext(context.Context) IssuerStatusPtrOutput
}

type issuerStatusPtrType IssuerStatusArgs

func IssuerStatusPtr(v *IssuerStatusArgs) IssuerStatusPtrInput {
	return (*issuerStatusPtrType)(v)
}

func (*issuerStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerStatus)(nil)).Elem()
}

func (i *issuerStatusPtrType) ToIssuerStatusPtrOutput() IssuerStatusPtrOutput {
	return i.ToIssuerStatusPtrOutputWithContext(context.Background())
}

func (i *issuerStatusPtrType) ToIssuerStatusPtrOutputWithContext(ctx context.Context) IssuerStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusPtrOutput)
}

// Status of the Issuer. This is set and managed automatically.
type IssuerStatusOutput struct{ *pulumi.OutputState }

func (IssuerStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatus)(nil)).Elem()
}

func (o IssuerStatusOutput) ToIssuerStatusOutput() IssuerStatusOutput {
	return o
}

func (o IssuerStatusOutput) ToIssuerStatusOutputWithContext(ctx context.Context) IssuerStatusOutput {
	return o
}

func (o IssuerStatusOutput) ToIssuerStatusPtrOutput() IssuerStatusPtrOutput {
	return o.ToIssuerStatusPtrOutputWithContext(context.Background())
}

func (o IssuerStatusOutput) ToIssuerStatusPtrOutputWithContext(ctx context.Context) IssuerStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerStatus) *IssuerStatus {
		return &v
	}).(IssuerStatusPtrOutput)
}

// ACME specific status options.
// This field should only be set if the Issuer is configured to use an ACME
// server to issue certificates.
func (o IssuerStatusOutput) Acme() IssuerStatusAcmePtrOutput {
	return o.ApplyT(func(v IssuerStatus) *IssuerStatusAcme { return v.Acme }).(IssuerStatusAcmePtrOutput)
}

// List of status conditions to indicate the status of a CertificateRequest.
// Known condition types are `Ready`.
func (o IssuerStatusOutput) Conditions() IssuerStatusConditionsArrayOutput {
	return o.ApplyT(func(v IssuerStatus) []IssuerStatusConditions { return v.Conditions }).(IssuerStatusConditionsArrayOutput)
}

type IssuerStatusPtrOutput struct{ *pulumi.OutputState }

func (IssuerStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerStatus)(nil)).Elem()
}

func (o IssuerStatusPtrOutput) ToIssuerStatusPtrOutput() IssuerStatusPtrOutput {
	return o
}

func (o IssuerStatusPtrOutput) ToIssuerStatusPtrOutputWithContext(ctx context.Context) IssuerStatusPtrOutput {
	return o
}

func (o IssuerStatusPtrOutput) Elem() IssuerStatusOutput {
	return o.ApplyT(func(v *IssuerStatus) IssuerStatus {
		if v != nil {
			return *v
		}
		var ret IssuerStatus
		return ret
	}).(IssuerStatusOutput)
}

// ACME specific status options.
// This field should only be set if the Issuer is configured to use an ACME
// server to issue certificates.
func (o IssuerStatusPtrOutput) Acme() IssuerStatusAcmePtrOutput {
	return o.ApplyT(func(v *IssuerStatus) *IssuerStatusAcme {
		if v == nil {
			return nil
		}
		return v.Acme
	}).(IssuerStatusAcmePtrOutput)
}

// List of status conditions to indicate the status of a CertificateRequest.
// Known condition types are `Ready`.
func (o IssuerStatusPtrOutput) Conditions() IssuerStatusConditionsArrayOutput {
	return o.ApplyT(func(v *IssuerStatus) []IssuerStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(IssuerStatusConditionsArrayOutput)
}

// ACME specific status options.
// This field should only be set if the Issuer is configured to use an ACME
// server to issue certificates.
type IssuerStatusAcme struct {
	// LastPrivateKeyHash is a hash of the private key associated with the latest
	// registered ACME account, in order to track changes made to registered account
	// associated with the Issuer
	LastPrivateKeyHash *string `pulumi:"lastPrivateKeyHash"`
	// LastRegisteredEmail is the email associated with the latest registered
	// ACME account, in order to track changes made to registered account
	// associated with the  Issuer
	LastRegisteredEmail *string `pulumi:"lastRegisteredEmail"`
	// URI is the unique account identifier, which can also be used to retrieve
	// account details from the CA
	Uri *string `pulumi:"uri"`
}

// IssuerStatusAcmeInput is an input type that accepts IssuerStatusAcmeArgs and IssuerStatusAcmeOutput values.
// You can construct a concrete instance of `IssuerStatusAcmeInput` via:
//
//	IssuerStatusAcmeArgs{...}
type IssuerStatusAcmeInput interface {
	pulumi.Input

	ToIssuerStatusAcmeOutput() IssuerStatusAcmeOutput
	ToIssuerStatusAcmeOutputWithContext(context.Context) IssuerStatusAcmeOutput
}

// ACME specific status options.
// This field should only be set if the Issuer is configured to use an ACME
// server to issue certificates.
type IssuerStatusAcmeArgs struct {
	// LastPrivateKeyHash is a hash of the private key associated with the latest
	// registered ACME account, in order to track changes made to registered account
	// associated with the Issuer
	LastPrivateKeyHash pulumi.StringPtrInput `pulumi:"lastPrivateKeyHash"`
	// LastRegisteredEmail is the email associated with the latest registered
	// ACME account, in order to track changes made to registered account
	// associated with the  Issuer
	LastRegisteredEmail pulumi.StringPtrInput `pulumi:"lastRegisteredEmail"`
	// URI is the unique account identifier, which can also be used to retrieve
	// account details from the CA
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (IssuerStatusAcmeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatusAcme)(nil)).Elem()
}

func (i IssuerStatusAcmeArgs) ToIssuerStatusAcmeOutput() IssuerStatusAcmeOutput {
	return i.ToIssuerStatusAcmeOutputWithContext(context.Background())
}

func (i IssuerStatusAcmeArgs) ToIssuerStatusAcmeOutputWithContext(ctx context.Context) IssuerStatusAcmeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusAcmeOutput)
}

func (i IssuerStatusAcmeArgs) ToIssuerStatusAcmePtrOutput() IssuerStatusAcmePtrOutput {
	return i.ToIssuerStatusAcmePtrOutputWithContext(context.Background())
}

func (i IssuerStatusAcmeArgs) ToIssuerStatusAcmePtrOutputWithContext(ctx context.Context) IssuerStatusAcmePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusAcmeOutput).ToIssuerStatusAcmePtrOutputWithContext(ctx)
}

// IssuerStatusAcmePtrInput is an input type that accepts IssuerStatusAcmeArgs, IssuerStatusAcmePtr and IssuerStatusAcmePtrOutput values.
// You can construct a concrete instance of `IssuerStatusAcmePtrInput` via:
//
//	        IssuerStatusAcmeArgs{...}
//
//	or:
//
//	        nil
type IssuerStatusAcmePtrInput interface {
	pulumi.Input

	ToIssuerStatusAcmePtrOutput() IssuerStatusAcmePtrOutput
	ToIssuerStatusAcmePtrOutputWithContext(context.Context) IssuerStatusAcmePtrOutput
}

type issuerStatusAcmePtrType IssuerStatusAcmeArgs

func IssuerStatusAcmePtr(v *IssuerStatusAcmeArgs) IssuerStatusAcmePtrInput {
	return (*issuerStatusAcmePtrType)(v)
}

func (*issuerStatusAcmePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerStatusAcme)(nil)).Elem()
}

func (i *issuerStatusAcmePtrType) ToIssuerStatusAcmePtrOutput() IssuerStatusAcmePtrOutput {
	return i.ToIssuerStatusAcmePtrOutputWithContext(context.Background())
}

func (i *issuerStatusAcmePtrType) ToIssuerStatusAcmePtrOutputWithContext(ctx context.Context) IssuerStatusAcmePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusAcmePtrOutput)
}

// ACME specific status options.
// This field should only be set if the Issuer is configured to use an ACME
// server to issue certificates.
type IssuerStatusAcmeOutput struct{ *pulumi.OutputState }

func (IssuerStatusAcmeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatusAcme)(nil)).Elem()
}

func (o IssuerStatusAcmeOutput) ToIssuerStatusAcmeOutput() IssuerStatusAcmeOutput {
	return o
}

func (o IssuerStatusAcmeOutput) ToIssuerStatusAcmeOutputWithContext(ctx context.Context) IssuerStatusAcmeOutput {
	return o
}

func (o IssuerStatusAcmeOutput) ToIssuerStatusAcmePtrOutput() IssuerStatusAcmePtrOutput {
	return o.ToIssuerStatusAcmePtrOutputWithContext(context.Background())
}

func (o IssuerStatusAcmeOutput) ToIssuerStatusAcmePtrOutputWithContext(ctx context.Context) IssuerStatusAcmePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerStatusAcme) *IssuerStatusAcme {
		return &v
	}).(IssuerStatusAcmePtrOutput)
}

// LastPrivateKeyHash is a hash of the private key associated with the latest
// registered ACME account, in order to track changes made to registered account
// associated with the Issuer
func (o IssuerStatusAcmeOutput) LastPrivateKeyHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusAcme) *string { return v.LastPrivateKeyHash }).(pulumi.StringPtrOutput)
}

// LastRegisteredEmail is the email associated with the latest registered
// ACME account, in order to track changes made to registered account
// associated with the  Issuer
func (o IssuerStatusAcmeOutput) LastRegisteredEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusAcme) *string { return v.LastRegisteredEmail }).(pulumi.StringPtrOutput)
}

// URI is the unique account identifier, which can also be used to retrieve
// account details from the CA
func (o IssuerStatusAcmeOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusAcme) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type IssuerStatusAcmePtrOutput struct{ *pulumi.OutputState }

func (IssuerStatusAcmePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerStatusAcme)(nil)).Elem()
}

func (o IssuerStatusAcmePtrOutput) ToIssuerStatusAcmePtrOutput() IssuerStatusAcmePtrOutput {
	return o
}

func (o IssuerStatusAcmePtrOutput) ToIssuerStatusAcmePtrOutputWithContext(ctx context.Context) IssuerStatusAcmePtrOutput {
	return o
}

func (o IssuerStatusAcmePtrOutput) Elem() IssuerStatusAcmeOutput {
	return o.ApplyT(func(v *IssuerStatusAcme) IssuerStatusAcme {
		if v != nil {
			return *v
		}
		var ret IssuerStatusAcme
		return ret
	}).(IssuerStatusAcmeOutput)
}

// LastPrivateKeyHash is a hash of the private key associated with the latest
// registered ACME account, in order to track changes made to registered account
// associated with the Issuer
func (o IssuerStatusAcmePtrOutput) LastPrivateKeyHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerStatusAcme) *string {
		if v == nil {
			return nil
		}
		return v.LastPrivateKeyHash
	}).(pulumi.StringPtrOutput)
}

// LastRegisteredEmail is the email associated with the latest registered
// ACME account, in order to track changes made to registered account
// associated with the  Issuer
func (o IssuerStatusAcmePtrOutput) LastRegisteredEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerStatusAcme) *string {
		if v == nil {
			return nil
		}
		return v.LastRegisteredEmail
	}).(pulumi.StringPtrOutput)
}

// URI is the unique account identifier, which can also be used to retrieve
// account details from the CA
func (o IssuerStatusAcmePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerStatusAcme) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// IssuerCondition contains condition information for an Issuer.
type IssuerStatusConditions struct {
	// LastTransitionTime is the timestamp corresponding to the last status
	// change of this condition.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// Message is a human readable description of the details of the last
	// transition, complementing reason.
	Message *string `pulumi:"message"`
	// If set, this represents the .metadata.generation that the condition was
	// set based upon.
	// For instance, if .metadata.generation is currently 12, but the
	// .status.condition[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the Issuer.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// Reason is a brief machine readable explanation for the condition's last
	// transition.
	Reason *string `pulumi:"reason"`
	// Status of the condition, one of (`True`, `False`, `Unknown`).
	Status string `pulumi:"status"`
	// Type of the condition, known values are (`Ready`).
	Type string `pulumi:"type"`
}

// IssuerStatusConditionsInput is an input type that accepts IssuerStatusConditionsArgs and IssuerStatusConditionsOutput values.
// You can construct a concrete instance of `IssuerStatusConditionsInput` via:
//
//	IssuerStatusConditionsArgs{...}
type IssuerStatusConditionsInput interface {
	pulumi.Input

	ToIssuerStatusConditionsOutput() IssuerStatusConditionsOutput
	ToIssuerStatusConditionsOutputWithContext(context.Context) IssuerStatusConditionsOutput
}

// IssuerCondition contains condition information for an Issuer.
type IssuerStatusConditionsArgs struct {
	// LastTransitionTime is the timestamp corresponding to the last status
	// change of this condition.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// Message is a human readable description of the details of the last
	// transition, complementing reason.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// If set, this represents the .metadata.generation that the condition was
	// set based upon.
	// For instance, if .metadata.generation is currently 12, but the
	// .status.condition[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the Issuer.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// Reason is a brief machine readable explanation for the condition's last
	// transition.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Status of the condition, one of (`True`, `False`, `Unknown`).
	Status pulumi.StringInput `pulumi:"status"`
	// Type of the condition, known values are (`Ready`).
	Type pulumi.StringInput `pulumi:"type"`
}

func (IssuerStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatusConditions)(nil)).Elem()
}

func (i IssuerStatusConditionsArgs) ToIssuerStatusConditionsOutput() IssuerStatusConditionsOutput {
	return i.ToIssuerStatusConditionsOutputWithContext(context.Background())
}

func (i IssuerStatusConditionsArgs) ToIssuerStatusConditionsOutputWithContext(ctx context.Context) IssuerStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusConditionsOutput)
}

// IssuerStatusConditionsArrayInput is an input type that accepts IssuerStatusConditionsArray and IssuerStatusConditionsArrayOutput values.
// You can construct a concrete instance of `IssuerStatusConditionsArrayInput` via:
//
//	IssuerStatusConditionsArray{ IssuerStatusConditionsArgs{...} }
type IssuerStatusConditionsArrayInput interface {
	pulumi.Input

	ToIssuerStatusConditionsArrayOutput() IssuerStatusConditionsArrayOutput
	ToIssuerStatusConditionsArrayOutputWithContext(context.Context) IssuerStatusConditionsArrayOutput
}

type IssuerStatusConditionsArray []IssuerStatusConditionsInput

func (IssuerStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerStatusConditions)(nil)).Elem()
}

func (i IssuerStatusConditionsArray) ToIssuerStatusConditionsArrayOutput() IssuerStatusConditionsArrayOutput {
	return i.ToIssuerStatusConditionsArrayOutputWithContext(context.Background())
}

func (i IssuerStatusConditionsArray) ToIssuerStatusConditionsArrayOutputWithContext(ctx context.Context) IssuerStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusConditionsArrayOutput)
}

// IssuerCondition contains condition information for an Issuer.
type IssuerStatusConditionsOutput struct{ *pulumi.OutputState }

func (IssuerStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatusConditions)(nil)).Elem()
}

func (o IssuerStatusConditionsOutput) ToIssuerStatusConditionsOutput() IssuerStatusConditionsOutput {
	return o
}

func (o IssuerStatusConditionsOutput) ToIssuerStatusConditionsOutputWithContext(ctx context.Context) IssuerStatusConditionsOutput {
	return o
}

// LastTransitionTime is the timestamp corresponding to the last status
// change of this condition.
func (o IssuerStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// Message is a human readable description of the details of the last
// transition, complementing reason.
func (o IssuerStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// If set, this represents the .metadata.generation that the condition was
// set based upon.
// For instance, if .metadata.generation is currently 12, but the
// .status.condition[x].observedGeneration is 9, the condition is out of date
// with respect to the current state of the Issuer.
func (o IssuerStatusConditionsOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IssuerStatusConditions) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// Reason is a brief machine readable explanation for the condition's last
// transition.
func (o IssuerStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Status of the condition, one of (`True`, `False`, `Unknown`).
func (o IssuerStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of the condition, known values are (`Ready`).
func (o IssuerStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type IssuerStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerStatusConditions)(nil)).Elem()
}

func (o IssuerStatusConditionsArrayOutput) ToIssuerStatusConditionsArrayOutput() IssuerStatusConditionsArrayOutput {
	return o
}

func (o IssuerStatusConditionsArrayOutput) ToIssuerStatusConditionsArrayOutputWithContext(ctx context.Context) IssuerStatusConditionsArrayOutput {
	return o
}

func (o IssuerStatusConditionsArrayOutput) Index(i pulumi.IntInput) IssuerStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerStatusConditions {
		return vs[0].([]IssuerStatusConditions)[vs[1].(int)]
	}).(IssuerStatusConditionsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecInput)(nil)).Elem(), IssuerSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecPtrInput)(nil)).Elem(), IssuerSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeInput)(nil)).Elem(), IssuerSpecAcmeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmePtrInput)(nil)).Elem(), IssuerSpecAcmeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeExternalAccountBindingInput)(nil)).Elem(), IssuerSpecAcmeExternalAccountBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeExternalAccountBindingPtrInput)(nil)).Elem(), IssuerSpecAcmeExternalAccountBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeExternalAccountBindingKeySecretRefInput)(nil)).Elem(), IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrInput)(nil)).Elem(), IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmePrivateKeySecretRefInput)(nil)).Elem(), IssuerSpecAcmePrivateKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmePrivateKeySecretRefPtrInput)(nil)).Elem(), IssuerSpecAcmePrivateKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversInput)(nil)).Elem(), IssuerSpecAcmeSolversArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01Input)(nil)).Elem(), IssuerSpecAcmeSolversDns01Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01PtrInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01AcmeDnsInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01AcmeDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01AcmeDnsPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01AcmeDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01AkamaiInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01AkamaiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01AkamaiPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01AkamaiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01AzureDnsInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01AzureDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01AzureDnsPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01AzureDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01CloudDnsInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01CloudDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01CloudDnsPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01CloudDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01CloudflareInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01CloudflareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01CloudflarePtrInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01CloudflareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01DigitaloceanInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01DigitaloceanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01DigitaloceanPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01DigitaloceanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01Rfc2136Input)(nil)).Elem(), IssuerSpecAcmeSolversDns01Rfc2136Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01Rfc2136PtrInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01Rfc2136Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53Input)(nil)).Elem(), IssuerSpecAcmeSolversDns01Route53Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53PtrInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01Route53Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53AuthInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01Route53AuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53AuthPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01Route53AuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53AuthKubernetesInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01Route53AuthKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01Route53AuthKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01WebhookInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01WebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversDns01WebhookPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversDns01WebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01Input)(nil)).Elem(), IssuerSpecAcmeSolversHttp01Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01PtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01GatewayHttprouteInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01GatewayHttprouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01GatewayHttproutePtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01GatewayHttprouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplateInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversSelectorInput)(nil)).Elem(), IssuerSpecAcmeSolversSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversSelectorPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecCaInput)(nil)).Elem(), IssuerSpecCaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecCaPtrInput)(nil)).Elem(), IssuerSpecCaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecSelfSignedInput)(nil)).Elem(), IssuerSpecSelfSignedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecSelfSignedPtrInput)(nil)).Elem(), IssuerSpecSelfSignedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultInput)(nil)).Elem(), IssuerSpecVaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultPtrInput)(nil)).Elem(), IssuerSpecVaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthInput)(nil)).Elem(), IssuerSpecVaultAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthPtrInput)(nil)).Elem(), IssuerSpecVaultAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthAppRoleInput)(nil)).Elem(), IssuerSpecVaultAuthAppRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthAppRolePtrInput)(nil)).Elem(), IssuerSpecVaultAuthAppRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthAppRoleSecretRefInput)(nil)).Elem(), IssuerSpecVaultAuthAppRoleSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthAppRoleSecretRefPtrInput)(nil)).Elem(), IssuerSpecVaultAuthAppRoleSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthKubernetesInput)(nil)).Elem(), IssuerSpecVaultAuthKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthKubernetesPtrInput)(nil)).Elem(), IssuerSpecVaultAuthKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthKubernetesSecretRefInput)(nil)).Elem(), IssuerSpecVaultAuthKubernetesSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthKubernetesSecretRefPtrInput)(nil)).Elem(), IssuerSpecVaultAuthKubernetesSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthKubernetesServiceAccountRefInput)(nil)).Elem(), IssuerSpecVaultAuthKubernetesServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthKubernetesServiceAccountRefPtrInput)(nil)).Elem(), IssuerSpecVaultAuthKubernetesServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthTokenSecretRefInput)(nil)).Elem(), IssuerSpecVaultAuthTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthTokenSecretRefPtrInput)(nil)).Elem(), IssuerSpecVaultAuthTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultCaBundleSecretRefInput)(nil)).Elem(), IssuerSpecVaultCaBundleSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultCaBundleSecretRefPtrInput)(nil)).Elem(), IssuerSpecVaultCaBundleSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultClientCertSecretRefInput)(nil)).Elem(), IssuerSpecVaultClientCertSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultClientCertSecretRefPtrInput)(nil)).Elem(), IssuerSpecVaultClientCertSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultClientKeySecretRefInput)(nil)).Elem(), IssuerSpecVaultClientKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultClientKeySecretRefPtrInput)(nil)).Elem(), IssuerSpecVaultClientKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiInput)(nil)).Elem(), IssuerSpecVenafiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiPtrInput)(nil)).Elem(), IssuerSpecVenafiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiCloudInput)(nil)).Elem(), IssuerSpecVenafiCloudArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiCloudPtrInput)(nil)).Elem(), IssuerSpecVenafiCloudArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiCloudApiTokenSecretRefInput)(nil)).Elem(), IssuerSpecVenafiCloudApiTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiCloudApiTokenSecretRefPtrInput)(nil)).Elem(), IssuerSpecVenafiCloudApiTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiTppInput)(nil)).Elem(), IssuerSpecVenafiTppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiTppPtrInput)(nil)).Elem(), IssuerSpecVenafiTppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiTppCredentialsRefInput)(nil)).Elem(), IssuerSpecVenafiTppCredentialsRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiTppCredentialsRefPtrInput)(nil)).Elem(), IssuerSpecVenafiTppCredentialsRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerStatusInput)(nil)).Elem(), IssuerStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerStatusPtrInput)(nil)).Elem(), IssuerStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerStatusAcmeInput)(nil)).Elem(), IssuerStatusAcmeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerStatusAcmePtrInput)(nil)).Elem(), IssuerStatusAcmeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerStatusConditionsInput)(nil)).Elem(), IssuerStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerStatusConditionsArrayInput)(nil)).Elem(), IssuerStatusConditionsArray{})
	pulumi.RegisterOutputType(IssuerSpecOutput{})
	pulumi.RegisterOutputType(IssuerSpecPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmePtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeExternalAccountBindingOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeExternalAccountBindingPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmePrivateKeySecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmePrivateKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Output{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01PtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AcmeDnsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AcmeDnsPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AcmeDnsAccountSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AkamaiOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AkamaiPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AzureDnsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AzureDnsPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AzureDnsClientSecretSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AzureDnsManagedIdentityPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01CloudDnsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01CloudDnsPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01CloudDnsServiceAccountSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01CloudflareOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01CloudflarePtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01DigitaloceanOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Rfc2136Output{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Rfc2136PtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Route53Output{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Route53PtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Route53AccessKeyIdsecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Route53AuthOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Route53AuthPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Route53AuthKubernetesOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Route53AuthKubernetesPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Route53AuthKubernetesServiceAccountRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01WebhookOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01WebhookPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01Output{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01PtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01GatewayHttprouteOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01GatewayHttproutePtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01GatewayHttprouteParentRefsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecCaOutput{})
	pulumi.RegisterOutputType(IssuerSpecCaPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecSelfSignedOutput{})
	pulumi.RegisterOutputType(IssuerSpecSelfSignedPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthAppRoleOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthAppRolePtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthAppRoleSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthAppRoleSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthKubernetesOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthKubernetesPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthKubernetesSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthKubernetesSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthKubernetesServiceAccountRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthTokenSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultCaBundleSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultCaBundleSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultClientCertSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultClientCertSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultClientKeySecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultClientKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiCloudOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiCloudPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiCloudApiTokenSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiTppOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiTppPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiTppCredentialsRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiTppCredentialsRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerStatusOutput{})
	pulumi.RegisterOutputType(IssuerStatusPtrOutput{})
	pulumi.RegisterOutputType(IssuerStatusAcmeOutput{})
	pulumi.RegisterOutputType(IssuerStatusAcmePtrOutput{})
	pulumi.RegisterOutputType(IssuerStatusConditionsOutput{})
	pulumi.RegisterOutputType(IssuerStatusConditionsArrayOutput{})
}
